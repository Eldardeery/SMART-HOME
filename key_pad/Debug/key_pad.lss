
key_pad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002320  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000128  00800060  00002320  00002394  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000180c  00000000  00000000  000024bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d03  00000000  00000000  00003cc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000180  00000000  00000000  000049cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001d1  00000000  00000000  00004b4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002010  00000000  00000000  00004d1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001161  00000000  00000000  00006d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001003  00000000  00000000  00007e8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  00008e90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002be  00000000  00000000  00009030  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000090e  00000000  00000000  000092ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009bfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e2       	ldi	r30, 0x20	; 32
      68:	f3 e2       	ldi	r31, 0x23	; 35
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 38       	cpi	r26, 0x88	; 136
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <main>
      7a:	0c 94 8e 11 	jmp	0x231c	; 0x231c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b6 0e 	jmp	0x1d6c	; 0x1d6c <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a7 e7       	ldi	r26, 0x77	; 119
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d2 0e 	jmp	0x1da4	; 0x1da4 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 de 0e 	jmp	0x1dbc	; 0x1dbc <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 de 0e 	jmp	0x1dbc	; 0x1dbc <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b6 0e 	jmp	0x1d6c	; 0x1d6c <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	87 e7       	ldi	r24, 0x77	; 119
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d2 0e 	jmp	0x1da4	; 0x1da4 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 ef 05 	call	0xbde	; 0xbde <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 de 0e 	jmp	0x1dbc	; 0x1dbc <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 ef 05 	call	0xbde	; 0xbde <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 de 0e 	jmp	0x1dbc	; 0x1dbc <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 c2 0e 	jmp	0x1d84	; 0x1d84 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 ef 05 	call	0xbde	; 0xbde <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 de 0e 	jmp	0x1dbc	; 0x1dbc <__epilogue_restores__+0x18>

00000742 <__floatsisf>:
     742:	a8 e0       	ldi	r26, 0x08	; 8
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 bf 0e 	jmp	0x1d7e	; 0x1d7e <__prologue_saves__+0x12>
     74e:	9b 01       	movw	r18, r22
     750:	ac 01       	movw	r20, r24
     752:	83 e0       	ldi	r24, 0x03	; 3
     754:	89 83       	std	Y+1, r24	; 0x01
     756:	da 01       	movw	r26, r20
     758:	c9 01       	movw	r24, r18
     75a:	88 27       	eor	r24, r24
     75c:	b7 fd       	sbrc	r27, 7
     75e:	83 95       	inc	r24
     760:	99 27       	eor	r25, r25
     762:	aa 27       	eor	r26, r26
     764:	bb 27       	eor	r27, r27
     766:	b8 2e       	mov	r11, r24
     768:	21 15       	cp	r18, r1
     76a:	31 05       	cpc	r19, r1
     76c:	41 05       	cpc	r20, r1
     76e:	51 05       	cpc	r21, r1
     770:	19 f4       	brne	.+6      	; 0x778 <__floatsisf+0x36>
     772:	82 e0       	ldi	r24, 0x02	; 2
     774:	89 83       	std	Y+1, r24	; 0x01
     776:	3a c0       	rjmp	.+116    	; 0x7ec <__floatsisf+0xaa>
     778:	88 23       	and	r24, r24
     77a:	a9 f0       	breq	.+42     	; 0x7a6 <__floatsisf+0x64>
     77c:	20 30       	cpi	r18, 0x00	; 0
     77e:	80 e0       	ldi	r24, 0x00	; 0
     780:	38 07       	cpc	r19, r24
     782:	80 e0       	ldi	r24, 0x00	; 0
     784:	48 07       	cpc	r20, r24
     786:	80 e8       	ldi	r24, 0x80	; 128
     788:	58 07       	cpc	r21, r24
     78a:	29 f4       	brne	.+10     	; 0x796 <__floatsisf+0x54>
     78c:	60 e0       	ldi	r22, 0x00	; 0
     78e:	70 e0       	ldi	r23, 0x00	; 0
     790:	80 e0       	ldi	r24, 0x00	; 0
     792:	9f ec       	ldi	r25, 0xCF	; 207
     794:	30 c0       	rjmp	.+96     	; 0x7f6 <__floatsisf+0xb4>
     796:	ee 24       	eor	r14, r14
     798:	ff 24       	eor	r15, r15
     79a:	87 01       	movw	r16, r14
     79c:	e2 1a       	sub	r14, r18
     79e:	f3 0a       	sbc	r15, r19
     7a0:	04 0b       	sbc	r16, r20
     7a2:	15 0b       	sbc	r17, r21
     7a4:	02 c0       	rjmp	.+4      	; 0x7aa <__floatsisf+0x68>
     7a6:	79 01       	movw	r14, r18
     7a8:	8a 01       	movw	r16, r20
     7aa:	8e e1       	ldi	r24, 0x1E	; 30
     7ac:	c8 2e       	mov	r12, r24
     7ae:	d1 2c       	mov	r13, r1
     7b0:	dc 82       	std	Y+4, r13	; 0x04
     7b2:	cb 82       	std	Y+3, r12	; 0x03
     7b4:	ed 82       	std	Y+5, r14	; 0x05
     7b6:	fe 82       	std	Y+6, r15	; 0x06
     7b8:	0f 83       	std	Y+7, r16	; 0x07
     7ba:	18 87       	std	Y+8, r17	; 0x08
     7bc:	c8 01       	movw	r24, r16
     7be:	b7 01       	movw	r22, r14
     7c0:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__clzsi2>
     7c4:	01 97       	sbiw	r24, 0x01	; 1
     7c6:	18 16       	cp	r1, r24
     7c8:	19 06       	cpc	r1, r25
     7ca:	84 f4       	brge	.+32     	; 0x7ec <__floatsisf+0xaa>
     7cc:	08 2e       	mov	r0, r24
     7ce:	04 c0       	rjmp	.+8      	; 0x7d8 <__floatsisf+0x96>
     7d0:	ee 0c       	add	r14, r14
     7d2:	ff 1c       	adc	r15, r15
     7d4:	00 1f       	adc	r16, r16
     7d6:	11 1f       	adc	r17, r17
     7d8:	0a 94       	dec	r0
     7da:	d2 f7       	brpl	.-12     	; 0x7d0 <__floatsisf+0x8e>
     7dc:	ed 82       	std	Y+5, r14	; 0x05
     7de:	fe 82       	std	Y+6, r15	; 0x06
     7e0:	0f 83       	std	Y+7, r16	; 0x07
     7e2:	18 87       	std	Y+8, r17	; 0x08
     7e4:	c8 1a       	sub	r12, r24
     7e6:	d9 0a       	sbc	r13, r25
     7e8:	dc 82       	std	Y+4, r13	; 0x04
     7ea:	cb 82       	std	Y+3, r12	; 0x03
     7ec:	ba 82       	std	Y+2, r11	; 0x02
     7ee:	ce 01       	movw	r24, r28
     7f0:	01 96       	adiw	r24, 0x01	; 1
     7f2:	0e 94 a2 04 	call	0x944	; 0x944 <__pack_f>
     7f6:	28 96       	adiw	r28, 0x08	; 8
     7f8:	e9 e0       	ldi	r30, 0x09	; 9
     7fa:	0c 94 db 0e 	jmp	0x1db6	; 0x1db6 <__epilogue_restores__+0x12>

000007fe <__fixsfsi>:
     7fe:	ac e0       	ldi	r26, 0x0C	; 12
     800:	b0 e0       	ldi	r27, 0x00	; 0
     802:	e5 e0       	ldi	r30, 0x05	; 5
     804:	f4 e0       	ldi	r31, 0x04	; 4
     806:	0c 94 c6 0e 	jmp	0x1d8c	; 0x1d8c <__prologue_saves__+0x20>
     80a:	69 83       	std	Y+1, r22	; 0x01
     80c:	7a 83       	std	Y+2, r23	; 0x02
     80e:	8b 83       	std	Y+3, r24	; 0x03
     810:	9c 83       	std	Y+4, r25	; 0x04
     812:	ce 01       	movw	r24, r28
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	be 01       	movw	r22, r28
     818:	6b 5f       	subi	r22, 0xFB	; 251
     81a:	7f 4f       	sbci	r23, 0xFF	; 255
     81c:	0e 94 77 05 	call	0xaee	; 0xaee <__unpack_f>
     820:	8d 81       	ldd	r24, Y+5	; 0x05
     822:	82 30       	cpi	r24, 0x02	; 2
     824:	61 f1       	breq	.+88     	; 0x87e <__stack+0x1f>
     826:	82 30       	cpi	r24, 0x02	; 2
     828:	50 f1       	brcs	.+84     	; 0x87e <__stack+0x1f>
     82a:	84 30       	cpi	r24, 0x04	; 4
     82c:	21 f4       	brne	.+8      	; 0x836 <__fixsfsi+0x38>
     82e:	8e 81       	ldd	r24, Y+6	; 0x06
     830:	88 23       	and	r24, r24
     832:	51 f1       	breq	.+84     	; 0x888 <__stack+0x29>
     834:	2e c0       	rjmp	.+92     	; 0x892 <__stack+0x33>
     836:	2f 81       	ldd	r18, Y+7	; 0x07
     838:	38 85       	ldd	r19, Y+8	; 0x08
     83a:	37 fd       	sbrc	r19, 7
     83c:	20 c0       	rjmp	.+64     	; 0x87e <__stack+0x1f>
     83e:	6e 81       	ldd	r22, Y+6	; 0x06
     840:	2f 31       	cpi	r18, 0x1F	; 31
     842:	31 05       	cpc	r19, r1
     844:	1c f0       	brlt	.+6      	; 0x84c <__fixsfsi+0x4e>
     846:	66 23       	and	r22, r22
     848:	f9 f0       	breq	.+62     	; 0x888 <__stack+0x29>
     84a:	23 c0       	rjmp	.+70     	; 0x892 <__stack+0x33>
     84c:	8e e1       	ldi	r24, 0x1E	; 30
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	82 1b       	sub	r24, r18
     852:	93 0b       	sbc	r25, r19
     854:	29 85       	ldd	r18, Y+9	; 0x09
     856:	3a 85       	ldd	r19, Y+10	; 0x0a
     858:	4b 85       	ldd	r20, Y+11	; 0x0b
     85a:	5c 85       	ldd	r21, Y+12	; 0x0c
     85c:	04 c0       	rjmp	.+8      	; 0x866 <__stack+0x7>
     85e:	56 95       	lsr	r21
     860:	47 95       	ror	r20
     862:	37 95       	ror	r19
     864:	27 95       	ror	r18
     866:	8a 95       	dec	r24
     868:	d2 f7       	brpl	.-12     	; 0x85e <__fixsfsi+0x60>
     86a:	66 23       	and	r22, r22
     86c:	b1 f0       	breq	.+44     	; 0x89a <__stack+0x3b>
     86e:	50 95       	com	r21
     870:	40 95       	com	r20
     872:	30 95       	com	r19
     874:	21 95       	neg	r18
     876:	3f 4f       	sbci	r19, 0xFF	; 255
     878:	4f 4f       	sbci	r20, 0xFF	; 255
     87a:	5f 4f       	sbci	r21, 0xFF	; 255
     87c:	0e c0       	rjmp	.+28     	; 0x89a <__stack+0x3b>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e0       	ldi	r21, 0x00	; 0
     886:	09 c0       	rjmp	.+18     	; 0x89a <__stack+0x3b>
     888:	2f ef       	ldi	r18, 0xFF	; 255
     88a:	3f ef       	ldi	r19, 0xFF	; 255
     88c:	4f ef       	ldi	r20, 0xFF	; 255
     88e:	5f e7       	ldi	r21, 0x7F	; 127
     890:	04 c0       	rjmp	.+8      	; 0x89a <__stack+0x3b>
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	40 e0       	ldi	r20, 0x00	; 0
     898:	50 e8       	ldi	r21, 0x80	; 128
     89a:	b9 01       	movw	r22, r18
     89c:	ca 01       	movw	r24, r20
     89e:	2c 96       	adiw	r28, 0x0c	; 12
     8a0:	e2 e0       	ldi	r30, 0x02	; 2
     8a2:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__epilogue_restores__+0x20>

000008a6 <__clzsi2>:
     8a6:	ef 92       	push	r14
     8a8:	ff 92       	push	r15
     8aa:	0f 93       	push	r16
     8ac:	1f 93       	push	r17
     8ae:	7b 01       	movw	r14, r22
     8b0:	8c 01       	movw	r16, r24
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	e8 16       	cp	r14, r24
     8b6:	80 e0       	ldi	r24, 0x00	; 0
     8b8:	f8 06       	cpc	r15, r24
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	08 07       	cpc	r16, r24
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	18 07       	cpc	r17, r24
     8c2:	88 f4       	brcc	.+34     	; 0x8e6 <__clzsi2+0x40>
     8c4:	8f ef       	ldi	r24, 0xFF	; 255
     8c6:	e8 16       	cp	r14, r24
     8c8:	f1 04       	cpc	r15, r1
     8ca:	01 05       	cpc	r16, r1
     8cc:	11 05       	cpc	r17, r1
     8ce:	31 f0       	breq	.+12     	; 0x8dc <__clzsi2+0x36>
     8d0:	28 f0       	brcs	.+10     	; 0x8dc <__clzsi2+0x36>
     8d2:	88 e0       	ldi	r24, 0x08	; 8
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	a0 e0       	ldi	r26, 0x00	; 0
     8d8:	b0 e0       	ldi	r27, 0x00	; 0
     8da:	17 c0       	rjmp	.+46     	; 0x90a <__clzsi2+0x64>
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	a0 e0       	ldi	r26, 0x00	; 0
     8e2:	b0 e0       	ldi	r27, 0x00	; 0
     8e4:	12 c0       	rjmp	.+36     	; 0x90a <__clzsi2+0x64>
     8e6:	80 e0       	ldi	r24, 0x00	; 0
     8e8:	e8 16       	cp	r14, r24
     8ea:	80 e0       	ldi	r24, 0x00	; 0
     8ec:	f8 06       	cpc	r15, r24
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	08 07       	cpc	r16, r24
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	18 07       	cpc	r17, r24
     8f6:	28 f0       	brcs	.+10     	; 0x902 <__clzsi2+0x5c>
     8f8:	88 e1       	ldi	r24, 0x18	; 24
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	a0 e0       	ldi	r26, 0x00	; 0
     8fe:	b0 e0       	ldi	r27, 0x00	; 0
     900:	04 c0       	rjmp	.+8      	; 0x90a <__clzsi2+0x64>
     902:	80 e1       	ldi	r24, 0x10	; 16
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	a0 e0       	ldi	r26, 0x00	; 0
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	20 e2       	ldi	r18, 0x20	; 32
     90c:	30 e0       	ldi	r19, 0x00	; 0
     90e:	40 e0       	ldi	r20, 0x00	; 0
     910:	50 e0       	ldi	r21, 0x00	; 0
     912:	28 1b       	sub	r18, r24
     914:	39 0b       	sbc	r19, r25
     916:	4a 0b       	sbc	r20, r26
     918:	5b 0b       	sbc	r21, r27
     91a:	04 c0       	rjmp	.+8      	; 0x924 <__clzsi2+0x7e>
     91c:	16 95       	lsr	r17
     91e:	07 95       	ror	r16
     920:	f7 94       	ror	r15
     922:	e7 94       	ror	r14
     924:	8a 95       	dec	r24
     926:	d2 f7       	brpl	.-12     	; 0x91c <__clzsi2+0x76>
     928:	f7 01       	movw	r30, r14
     92a:	e1 58       	subi	r30, 0x81	; 129
     92c:	ff 4f       	sbci	r31, 0xFF	; 255
     92e:	80 81       	ld	r24, Z
     930:	28 1b       	sub	r18, r24
     932:	31 09       	sbc	r19, r1
     934:	41 09       	sbc	r20, r1
     936:	51 09       	sbc	r21, r1
     938:	c9 01       	movw	r24, r18
     93a:	1f 91       	pop	r17
     93c:	0f 91       	pop	r16
     93e:	ff 90       	pop	r15
     940:	ef 90       	pop	r14
     942:	08 95       	ret

00000944 <__pack_f>:
     944:	df 92       	push	r13
     946:	ef 92       	push	r14
     948:	ff 92       	push	r15
     94a:	0f 93       	push	r16
     94c:	1f 93       	push	r17
     94e:	fc 01       	movw	r30, r24
     950:	e4 80       	ldd	r14, Z+4	; 0x04
     952:	f5 80       	ldd	r15, Z+5	; 0x05
     954:	06 81       	ldd	r16, Z+6	; 0x06
     956:	17 81       	ldd	r17, Z+7	; 0x07
     958:	d1 80       	ldd	r13, Z+1	; 0x01
     95a:	80 81       	ld	r24, Z
     95c:	82 30       	cpi	r24, 0x02	; 2
     95e:	48 f4       	brcc	.+18     	; 0x972 <__pack_f+0x2e>
     960:	80 e0       	ldi	r24, 0x00	; 0
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	a0 e1       	ldi	r26, 0x10	; 16
     966:	b0 e0       	ldi	r27, 0x00	; 0
     968:	e8 2a       	or	r14, r24
     96a:	f9 2a       	or	r15, r25
     96c:	0a 2b       	or	r16, r26
     96e:	1b 2b       	or	r17, r27
     970:	a5 c0       	rjmp	.+330    	; 0xabc <__pack_f+0x178>
     972:	84 30       	cpi	r24, 0x04	; 4
     974:	09 f4       	brne	.+2      	; 0x978 <__pack_f+0x34>
     976:	9f c0       	rjmp	.+318    	; 0xab6 <__pack_f+0x172>
     978:	82 30       	cpi	r24, 0x02	; 2
     97a:	21 f4       	brne	.+8      	; 0x984 <__pack_f+0x40>
     97c:	ee 24       	eor	r14, r14
     97e:	ff 24       	eor	r15, r15
     980:	87 01       	movw	r16, r14
     982:	05 c0       	rjmp	.+10     	; 0x98e <__pack_f+0x4a>
     984:	e1 14       	cp	r14, r1
     986:	f1 04       	cpc	r15, r1
     988:	01 05       	cpc	r16, r1
     98a:	11 05       	cpc	r17, r1
     98c:	19 f4       	brne	.+6      	; 0x994 <__pack_f+0x50>
     98e:	e0 e0       	ldi	r30, 0x00	; 0
     990:	f0 e0       	ldi	r31, 0x00	; 0
     992:	96 c0       	rjmp	.+300    	; 0xac0 <__pack_f+0x17c>
     994:	62 81       	ldd	r22, Z+2	; 0x02
     996:	73 81       	ldd	r23, Z+3	; 0x03
     998:	9f ef       	ldi	r25, 0xFF	; 255
     99a:	62 38       	cpi	r22, 0x82	; 130
     99c:	79 07       	cpc	r23, r25
     99e:	0c f0       	brlt	.+2      	; 0x9a2 <__pack_f+0x5e>
     9a0:	5b c0       	rjmp	.+182    	; 0xa58 <__pack_f+0x114>
     9a2:	22 e8       	ldi	r18, 0x82	; 130
     9a4:	3f ef       	ldi	r19, 0xFF	; 255
     9a6:	26 1b       	sub	r18, r22
     9a8:	37 0b       	sbc	r19, r23
     9aa:	2a 31       	cpi	r18, 0x1A	; 26
     9ac:	31 05       	cpc	r19, r1
     9ae:	2c f0       	brlt	.+10     	; 0x9ba <__pack_f+0x76>
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 e0       	ldi	r20, 0x00	; 0
     9b6:	50 e0       	ldi	r21, 0x00	; 0
     9b8:	2a c0       	rjmp	.+84     	; 0xa0e <__pack_f+0xca>
     9ba:	b8 01       	movw	r22, r16
     9bc:	a7 01       	movw	r20, r14
     9be:	02 2e       	mov	r0, r18
     9c0:	04 c0       	rjmp	.+8      	; 0x9ca <__pack_f+0x86>
     9c2:	76 95       	lsr	r23
     9c4:	67 95       	ror	r22
     9c6:	57 95       	ror	r21
     9c8:	47 95       	ror	r20
     9ca:	0a 94       	dec	r0
     9cc:	d2 f7       	brpl	.-12     	; 0x9c2 <__pack_f+0x7e>
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	a0 e0       	ldi	r26, 0x00	; 0
     9d4:	b0 e0       	ldi	r27, 0x00	; 0
     9d6:	04 c0       	rjmp	.+8      	; 0x9e0 <__pack_f+0x9c>
     9d8:	88 0f       	add	r24, r24
     9da:	99 1f       	adc	r25, r25
     9dc:	aa 1f       	adc	r26, r26
     9de:	bb 1f       	adc	r27, r27
     9e0:	2a 95       	dec	r18
     9e2:	d2 f7       	brpl	.-12     	; 0x9d8 <__pack_f+0x94>
     9e4:	01 97       	sbiw	r24, 0x01	; 1
     9e6:	a1 09       	sbc	r26, r1
     9e8:	b1 09       	sbc	r27, r1
     9ea:	8e 21       	and	r24, r14
     9ec:	9f 21       	and	r25, r15
     9ee:	a0 23       	and	r26, r16
     9f0:	b1 23       	and	r27, r17
     9f2:	00 97       	sbiw	r24, 0x00	; 0
     9f4:	a1 05       	cpc	r26, r1
     9f6:	b1 05       	cpc	r27, r1
     9f8:	21 f0       	breq	.+8      	; 0xa02 <__pack_f+0xbe>
     9fa:	81 e0       	ldi	r24, 0x01	; 1
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	a0 e0       	ldi	r26, 0x00	; 0
     a00:	b0 e0       	ldi	r27, 0x00	; 0
     a02:	9a 01       	movw	r18, r20
     a04:	ab 01       	movw	r20, r22
     a06:	28 2b       	or	r18, r24
     a08:	39 2b       	or	r19, r25
     a0a:	4a 2b       	or	r20, r26
     a0c:	5b 2b       	or	r21, r27
     a0e:	da 01       	movw	r26, r20
     a10:	c9 01       	movw	r24, r18
     a12:	8f 77       	andi	r24, 0x7F	; 127
     a14:	90 70       	andi	r25, 0x00	; 0
     a16:	a0 70       	andi	r26, 0x00	; 0
     a18:	b0 70       	andi	r27, 0x00	; 0
     a1a:	80 34       	cpi	r24, 0x40	; 64
     a1c:	91 05       	cpc	r25, r1
     a1e:	a1 05       	cpc	r26, r1
     a20:	b1 05       	cpc	r27, r1
     a22:	39 f4       	brne	.+14     	; 0xa32 <__pack_f+0xee>
     a24:	27 ff       	sbrs	r18, 7
     a26:	09 c0       	rjmp	.+18     	; 0xa3a <__pack_f+0xf6>
     a28:	20 5c       	subi	r18, 0xC0	; 192
     a2a:	3f 4f       	sbci	r19, 0xFF	; 255
     a2c:	4f 4f       	sbci	r20, 0xFF	; 255
     a2e:	5f 4f       	sbci	r21, 0xFF	; 255
     a30:	04 c0       	rjmp	.+8      	; 0xa3a <__pack_f+0xf6>
     a32:	21 5c       	subi	r18, 0xC1	; 193
     a34:	3f 4f       	sbci	r19, 0xFF	; 255
     a36:	4f 4f       	sbci	r20, 0xFF	; 255
     a38:	5f 4f       	sbci	r21, 0xFF	; 255
     a3a:	e0 e0       	ldi	r30, 0x00	; 0
     a3c:	f0 e0       	ldi	r31, 0x00	; 0
     a3e:	20 30       	cpi	r18, 0x00	; 0
     a40:	a0 e0       	ldi	r26, 0x00	; 0
     a42:	3a 07       	cpc	r19, r26
     a44:	a0 e0       	ldi	r26, 0x00	; 0
     a46:	4a 07       	cpc	r20, r26
     a48:	a0 e4       	ldi	r26, 0x40	; 64
     a4a:	5a 07       	cpc	r21, r26
     a4c:	10 f0       	brcs	.+4      	; 0xa52 <__pack_f+0x10e>
     a4e:	e1 e0       	ldi	r30, 0x01	; 1
     a50:	f0 e0       	ldi	r31, 0x00	; 0
     a52:	79 01       	movw	r14, r18
     a54:	8a 01       	movw	r16, r20
     a56:	27 c0       	rjmp	.+78     	; 0xaa6 <__pack_f+0x162>
     a58:	60 38       	cpi	r22, 0x80	; 128
     a5a:	71 05       	cpc	r23, r1
     a5c:	64 f5       	brge	.+88     	; 0xab6 <__pack_f+0x172>
     a5e:	fb 01       	movw	r30, r22
     a60:	e1 58       	subi	r30, 0x81	; 129
     a62:	ff 4f       	sbci	r31, 0xFF	; 255
     a64:	d8 01       	movw	r26, r16
     a66:	c7 01       	movw	r24, r14
     a68:	8f 77       	andi	r24, 0x7F	; 127
     a6a:	90 70       	andi	r25, 0x00	; 0
     a6c:	a0 70       	andi	r26, 0x00	; 0
     a6e:	b0 70       	andi	r27, 0x00	; 0
     a70:	80 34       	cpi	r24, 0x40	; 64
     a72:	91 05       	cpc	r25, r1
     a74:	a1 05       	cpc	r26, r1
     a76:	b1 05       	cpc	r27, r1
     a78:	39 f4       	brne	.+14     	; 0xa88 <__pack_f+0x144>
     a7a:	e7 fe       	sbrs	r14, 7
     a7c:	0d c0       	rjmp	.+26     	; 0xa98 <__pack_f+0x154>
     a7e:	80 e4       	ldi	r24, 0x40	; 64
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	a0 e0       	ldi	r26, 0x00	; 0
     a84:	b0 e0       	ldi	r27, 0x00	; 0
     a86:	04 c0       	rjmp	.+8      	; 0xa90 <__pack_f+0x14c>
     a88:	8f e3       	ldi	r24, 0x3F	; 63
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	a0 e0       	ldi	r26, 0x00	; 0
     a8e:	b0 e0       	ldi	r27, 0x00	; 0
     a90:	e8 0e       	add	r14, r24
     a92:	f9 1e       	adc	r15, r25
     a94:	0a 1f       	adc	r16, r26
     a96:	1b 1f       	adc	r17, r27
     a98:	17 ff       	sbrs	r17, 7
     a9a:	05 c0       	rjmp	.+10     	; 0xaa6 <__pack_f+0x162>
     a9c:	16 95       	lsr	r17
     a9e:	07 95       	ror	r16
     aa0:	f7 94       	ror	r15
     aa2:	e7 94       	ror	r14
     aa4:	31 96       	adiw	r30, 0x01	; 1
     aa6:	87 e0       	ldi	r24, 0x07	; 7
     aa8:	16 95       	lsr	r17
     aaa:	07 95       	ror	r16
     aac:	f7 94       	ror	r15
     aae:	e7 94       	ror	r14
     ab0:	8a 95       	dec	r24
     ab2:	d1 f7       	brne	.-12     	; 0xaa8 <__pack_f+0x164>
     ab4:	05 c0       	rjmp	.+10     	; 0xac0 <__pack_f+0x17c>
     ab6:	ee 24       	eor	r14, r14
     ab8:	ff 24       	eor	r15, r15
     aba:	87 01       	movw	r16, r14
     abc:	ef ef       	ldi	r30, 0xFF	; 255
     abe:	f0 e0       	ldi	r31, 0x00	; 0
     ac0:	6e 2f       	mov	r22, r30
     ac2:	67 95       	ror	r22
     ac4:	66 27       	eor	r22, r22
     ac6:	67 95       	ror	r22
     ac8:	90 2f       	mov	r25, r16
     aca:	9f 77       	andi	r25, 0x7F	; 127
     acc:	d7 94       	ror	r13
     ace:	dd 24       	eor	r13, r13
     ad0:	d7 94       	ror	r13
     ad2:	8e 2f       	mov	r24, r30
     ad4:	86 95       	lsr	r24
     ad6:	49 2f       	mov	r20, r25
     ad8:	46 2b       	or	r20, r22
     ada:	58 2f       	mov	r21, r24
     adc:	5d 29       	or	r21, r13
     ade:	b7 01       	movw	r22, r14
     ae0:	ca 01       	movw	r24, r20
     ae2:	1f 91       	pop	r17
     ae4:	0f 91       	pop	r16
     ae6:	ff 90       	pop	r15
     ae8:	ef 90       	pop	r14
     aea:	df 90       	pop	r13
     aec:	08 95       	ret

00000aee <__unpack_f>:
     aee:	fc 01       	movw	r30, r24
     af0:	db 01       	movw	r26, r22
     af2:	40 81       	ld	r20, Z
     af4:	51 81       	ldd	r21, Z+1	; 0x01
     af6:	22 81       	ldd	r18, Z+2	; 0x02
     af8:	62 2f       	mov	r22, r18
     afa:	6f 77       	andi	r22, 0x7F	; 127
     afc:	70 e0       	ldi	r23, 0x00	; 0
     afe:	22 1f       	adc	r18, r18
     b00:	22 27       	eor	r18, r18
     b02:	22 1f       	adc	r18, r18
     b04:	93 81       	ldd	r25, Z+3	; 0x03
     b06:	89 2f       	mov	r24, r25
     b08:	88 0f       	add	r24, r24
     b0a:	82 2b       	or	r24, r18
     b0c:	28 2f       	mov	r18, r24
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	99 1f       	adc	r25, r25
     b12:	99 27       	eor	r25, r25
     b14:	99 1f       	adc	r25, r25
     b16:	11 96       	adiw	r26, 0x01	; 1
     b18:	9c 93       	st	X, r25
     b1a:	11 97       	sbiw	r26, 0x01	; 1
     b1c:	21 15       	cp	r18, r1
     b1e:	31 05       	cpc	r19, r1
     b20:	a9 f5       	brne	.+106    	; 0xb8c <__unpack_f+0x9e>
     b22:	41 15       	cp	r20, r1
     b24:	51 05       	cpc	r21, r1
     b26:	61 05       	cpc	r22, r1
     b28:	71 05       	cpc	r23, r1
     b2a:	11 f4       	brne	.+4      	; 0xb30 <__unpack_f+0x42>
     b2c:	82 e0       	ldi	r24, 0x02	; 2
     b2e:	37 c0       	rjmp	.+110    	; 0xb9e <__unpack_f+0xb0>
     b30:	82 e8       	ldi	r24, 0x82	; 130
     b32:	9f ef       	ldi	r25, 0xFF	; 255
     b34:	13 96       	adiw	r26, 0x03	; 3
     b36:	9c 93       	st	X, r25
     b38:	8e 93       	st	-X, r24
     b3a:	12 97       	sbiw	r26, 0x02	; 2
     b3c:	9a 01       	movw	r18, r20
     b3e:	ab 01       	movw	r20, r22
     b40:	67 e0       	ldi	r22, 0x07	; 7
     b42:	22 0f       	add	r18, r18
     b44:	33 1f       	adc	r19, r19
     b46:	44 1f       	adc	r20, r20
     b48:	55 1f       	adc	r21, r21
     b4a:	6a 95       	dec	r22
     b4c:	d1 f7       	brne	.-12     	; 0xb42 <__unpack_f+0x54>
     b4e:	83 e0       	ldi	r24, 0x03	; 3
     b50:	8c 93       	st	X, r24
     b52:	0d c0       	rjmp	.+26     	; 0xb6e <__unpack_f+0x80>
     b54:	22 0f       	add	r18, r18
     b56:	33 1f       	adc	r19, r19
     b58:	44 1f       	adc	r20, r20
     b5a:	55 1f       	adc	r21, r21
     b5c:	12 96       	adiw	r26, 0x02	; 2
     b5e:	8d 91       	ld	r24, X+
     b60:	9c 91       	ld	r25, X
     b62:	13 97       	sbiw	r26, 0x03	; 3
     b64:	01 97       	sbiw	r24, 0x01	; 1
     b66:	13 96       	adiw	r26, 0x03	; 3
     b68:	9c 93       	st	X, r25
     b6a:	8e 93       	st	-X, r24
     b6c:	12 97       	sbiw	r26, 0x02	; 2
     b6e:	20 30       	cpi	r18, 0x00	; 0
     b70:	80 e0       	ldi	r24, 0x00	; 0
     b72:	38 07       	cpc	r19, r24
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	48 07       	cpc	r20, r24
     b78:	80 e4       	ldi	r24, 0x40	; 64
     b7a:	58 07       	cpc	r21, r24
     b7c:	58 f3       	brcs	.-42     	; 0xb54 <__unpack_f+0x66>
     b7e:	14 96       	adiw	r26, 0x04	; 4
     b80:	2d 93       	st	X+, r18
     b82:	3d 93       	st	X+, r19
     b84:	4d 93       	st	X+, r20
     b86:	5c 93       	st	X, r21
     b88:	17 97       	sbiw	r26, 0x07	; 7
     b8a:	08 95       	ret
     b8c:	2f 3f       	cpi	r18, 0xFF	; 255
     b8e:	31 05       	cpc	r19, r1
     b90:	79 f4       	brne	.+30     	; 0xbb0 <__unpack_f+0xc2>
     b92:	41 15       	cp	r20, r1
     b94:	51 05       	cpc	r21, r1
     b96:	61 05       	cpc	r22, r1
     b98:	71 05       	cpc	r23, r1
     b9a:	19 f4       	brne	.+6      	; 0xba2 <__unpack_f+0xb4>
     b9c:	84 e0       	ldi	r24, 0x04	; 4
     b9e:	8c 93       	st	X, r24
     ba0:	08 95       	ret
     ba2:	64 ff       	sbrs	r22, 4
     ba4:	03 c0       	rjmp	.+6      	; 0xbac <__unpack_f+0xbe>
     ba6:	81 e0       	ldi	r24, 0x01	; 1
     ba8:	8c 93       	st	X, r24
     baa:	12 c0       	rjmp	.+36     	; 0xbd0 <__unpack_f+0xe2>
     bac:	1c 92       	st	X, r1
     bae:	10 c0       	rjmp	.+32     	; 0xbd0 <__unpack_f+0xe2>
     bb0:	2f 57       	subi	r18, 0x7F	; 127
     bb2:	30 40       	sbci	r19, 0x00	; 0
     bb4:	13 96       	adiw	r26, 0x03	; 3
     bb6:	3c 93       	st	X, r19
     bb8:	2e 93       	st	-X, r18
     bba:	12 97       	sbiw	r26, 0x02	; 2
     bbc:	83 e0       	ldi	r24, 0x03	; 3
     bbe:	8c 93       	st	X, r24
     bc0:	87 e0       	ldi	r24, 0x07	; 7
     bc2:	44 0f       	add	r20, r20
     bc4:	55 1f       	adc	r21, r21
     bc6:	66 1f       	adc	r22, r22
     bc8:	77 1f       	adc	r23, r23
     bca:	8a 95       	dec	r24
     bcc:	d1 f7       	brne	.-12     	; 0xbc2 <__unpack_f+0xd4>
     bce:	70 64       	ori	r23, 0x40	; 64
     bd0:	14 96       	adiw	r26, 0x04	; 4
     bd2:	4d 93       	st	X+, r20
     bd4:	5d 93       	st	X+, r21
     bd6:	6d 93       	st	X+, r22
     bd8:	7c 93       	st	X, r23
     bda:	17 97       	sbiw	r26, 0x07	; 7
     bdc:	08 95       	ret

00000bde <__fpcmp_parts_f>:
     bde:	1f 93       	push	r17
     be0:	dc 01       	movw	r26, r24
     be2:	fb 01       	movw	r30, r22
     be4:	9c 91       	ld	r25, X
     be6:	92 30       	cpi	r25, 0x02	; 2
     be8:	08 f4       	brcc	.+2      	; 0xbec <__fpcmp_parts_f+0xe>
     bea:	47 c0       	rjmp	.+142    	; 0xc7a <__fpcmp_parts_f+0x9c>
     bec:	80 81       	ld	r24, Z
     bee:	82 30       	cpi	r24, 0x02	; 2
     bf0:	08 f4       	brcc	.+2      	; 0xbf4 <__fpcmp_parts_f+0x16>
     bf2:	43 c0       	rjmp	.+134    	; 0xc7a <__fpcmp_parts_f+0x9c>
     bf4:	94 30       	cpi	r25, 0x04	; 4
     bf6:	51 f4       	brne	.+20     	; 0xc0c <__fpcmp_parts_f+0x2e>
     bf8:	11 96       	adiw	r26, 0x01	; 1
     bfa:	1c 91       	ld	r17, X
     bfc:	84 30       	cpi	r24, 0x04	; 4
     bfe:	99 f5       	brne	.+102    	; 0xc66 <__fpcmp_parts_f+0x88>
     c00:	81 81       	ldd	r24, Z+1	; 0x01
     c02:	68 2f       	mov	r22, r24
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	61 1b       	sub	r22, r17
     c08:	71 09       	sbc	r23, r1
     c0a:	3f c0       	rjmp	.+126    	; 0xc8a <__fpcmp_parts_f+0xac>
     c0c:	84 30       	cpi	r24, 0x04	; 4
     c0e:	21 f0       	breq	.+8      	; 0xc18 <__fpcmp_parts_f+0x3a>
     c10:	92 30       	cpi	r25, 0x02	; 2
     c12:	31 f4       	brne	.+12     	; 0xc20 <__fpcmp_parts_f+0x42>
     c14:	82 30       	cpi	r24, 0x02	; 2
     c16:	b9 f1       	breq	.+110    	; 0xc86 <__fpcmp_parts_f+0xa8>
     c18:	81 81       	ldd	r24, Z+1	; 0x01
     c1a:	88 23       	and	r24, r24
     c1c:	89 f1       	breq	.+98     	; 0xc80 <__fpcmp_parts_f+0xa2>
     c1e:	2d c0       	rjmp	.+90     	; 0xc7a <__fpcmp_parts_f+0x9c>
     c20:	11 96       	adiw	r26, 0x01	; 1
     c22:	1c 91       	ld	r17, X
     c24:	11 97       	sbiw	r26, 0x01	; 1
     c26:	82 30       	cpi	r24, 0x02	; 2
     c28:	f1 f0       	breq	.+60     	; 0xc66 <__fpcmp_parts_f+0x88>
     c2a:	81 81       	ldd	r24, Z+1	; 0x01
     c2c:	18 17       	cp	r17, r24
     c2e:	d9 f4       	brne	.+54     	; 0xc66 <__fpcmp_parts_f+0x88>
     c30:	12 96       	adiw	r26, 0x02	; 2
     c32:	2d 91       	ld	r18, X+
     c34:	3c 91       	ld	r19, X
     c36:	13 97       	sbiw	r26, 0x03	; 3
     c38:	82 81       	ldd	r24, Z+2	; 0x02
     c3a:	93 81       	ldd	r25, Z+3	; 0x03
     c3c:	82 17       	cp	r24, r18
     c3e:	93 07       	cpc	r25, r19
     c40:	94 f0       	brlt	.+36     	; 0xc66 <__fpcmp_parts_f+0x88>
     c42:	28 17       	cp	r18, r24
     c44:	39 07       	cpc	r19, r25
     c46:	bc f0       	brlt	.+46     	; 0xc76 <__fpcmp_parts_f+0x98>
     c48:	14 96       	adiw	r26, 0x04	; 4
     c4a:	8d 91       	ld	r24, X+
     c4c:	9d 91       	ld	r25, X+
     c4e:	0d 90       	ld	r0, X+
     c50:	bc 91       	ld	r27, X
     c52:	a0 2d       	mov	r26, r0
     c54:	24 81       	ldd	r18, Z+4	; 0x04
     c56:	35 81       	ldd	r19, Z+5	; 0x05
     c58:	46 81       	ldd	r20, Z+6	; 0x06
     c5a:	57 81       	ldd	r21, Z+7	; 0x07
     c5c:	28 17       	cp	r18, r24
     c5e:	39 07       	cpc	r19, r25
     c60:	4a 07       	cpc	r20, r26
     c62:	5b 07       	cpc	r21, r27
     c64:	18 f4       	brcc	.+6      	; 0xc6c <__fpcmp_parts_f+0x8e>
     c66:	11 23       	and	r17, r17
     c68:	41 f0       	breq	.+16     	; 0xc7a <__fpcmp_parts_f+0x9c>
     c6a:	0a c0       	rjmp	.+20     	; 0xc80 <__fpcmp_parts_f+0xa2>
     c6c:	82 17       	cp	r24, r18
     c6e:	93 07       	cpc	r25, r19
     c70:	a4 07       	cpc	r26, r20
     c72:	b5 07       	cpc	r27, r21
     c74:	40 f4       	brcc	.+16     	; 0xc86 <__fpcmp_parts_f+0xa8>
     c76:	11 23       	and	r17, r17
     c78:	19 f0       	breq	.+6      	; 0xc80 <__fpcmp_parts_f+0xa2>
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	05 c0       	rjmp	.+10     	; 0xc8a <__fpcmp_parts_f+0xac>
     c80:	6f ef       	ldi	r22, 0xFF	; 255
     c82:	7f ef       	ldi	r23, 0xFF	; 255
     c84:	02 c0       	rjmp	.+4      	; 0xc8a <__fpcmp_parts_f+0xac>
     c86:	60 e0       	ldi	r22, 0x00	; 0
     c88:	70 e0       	ldi	r23, 0x00	; 0
     c8a:	cb 01       	movw	r24, r22
     c8c:	1f 91       	pop	r17
     c8e:	08 95       	ret

00000c90 <SET_PORT_DIRECTION>:
 * Created: 18-Feb-19 9:10:52 PM
 *  Author: dardeery
 */ 
#include "gpio.h"
void SET_PORT_DIRECTION(PORT_BASE port ,DIRECTION state)
{
     c90:	df 93       	push	r29
     c92:	cf 93       	push	r28
     c94:	00 d0       	rcall	.+0      	; 0xc96 <SET_PORT_DIRECTION+0x6>
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	89 83       	std	Y+1, r24	; 0x01
     c9c:	6a 83       	std	Y+2, r22	; 0x02
	if (state ==OUT)
     c9e:	8a 81       	ldd	r24, Y+2	; 0x02
     ca0:	81 30       	cpi	r24, 0x01	; 1
     ca2:	41 f4       	brne	.+16     	; 0xcb4 <SET_PORT_DIRECTION+0x24>
	{
		*(volatile uint8*)(port+1) =0xff;
     ca4:	89 81       	ldd	r24, Y+1	; 0x01
     ca6:	88 2f       	mov	r24, r24
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	01 96       	adiw	r24, 0x01	; 1
     cac:	fc 01       	movw	r30, r24
     cae:	8f ef       	ldi	r24, 0xFF	; 255
     cb0:	80 83       	st	Z, r24
     cb2:	09 c0       	rjmp	.+18     	; 0xcc6 <SET_PORT_DIRECTION+0x36>
	}
	else if (state ==IN)
     cb4:	8a 81       	ldd	r24, Y+2	; 0x02
     cb6:	88 23       	and	r24, r24
     cb8:	31 f4       	brne	.+12     	; 0xcc6 <SET_PORT_DIRECTION+0x36>
	{
		*(volatile uint8*)(port+1) =0x00;
     cba:	89 81       	ldd	r24, Y+1	; 0x01
     cbc:	88 2f       	mov	r24, r24
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	01 96       	adiw	r24, 0x01	; 1
     cc2:	fc 01       	movw	r30, r24
     cc4:	10 82       	st	Z, r1
	}	
}
     cc6:	0f 90       	pop	r0
     cc8:	0f 90       	pop	r0
     cca:	cf 91       	pop	r28
     ccc:	df 91       	pop	r29
     cce:	08 95       	ret

00000cd0 <SET_PIN_DIRECTION>:
void SET_PIN_DIRECTION (PORT_BASE port,uint8 pin_num, DIRECTION state)
{
     cd0:	df 93       	push	r29
     cd2:	cf 93       	push	r28
     cd4:	00 d0       	rcall	.+0      	; 0xcd6 <SET_PIN_DIRECTION+0x6>
     cd6:	0f 92       	push	r0
     cd8:	cd b7       	in	r28, 0x3d	; 61
     cda:	de b7       	in	r29, 0x3e	; 62
     cdc:	89 83       	std	Y+1, r24	; 0x01
     cde:	6a 83       	std	Y+2, r22	; 0x02
     ce0:	4b 83       	std	Y+3, r20	; 0x03
	if (state ==OUT)
     ce2:	8b 81       	ldd	r24, Y+3	; 0x03
     ce4:	81 30       	cpi	r24, 0x01	; 1
     ce6:	d1 f4       	brne	.+52     	; 0xd1c <SET_PIN_DIRECTION+0x4c>
	{
		*(volatile uint8*)(port+1) |=(1<<pin_num);
     ce8:	89 81       	ldd	r24, Y+1	; 0x01
     cea:	88 2f       	mov	r24, r24
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	01 96       	adiw	r24, 0x01	; 1
     cf0:	dc 01       	movw	r26, r24
     cf2:	89 81       	ldd	r24, Y+1	; 0x01
     cf4:	88 2f       	mov	r24, r24
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	01 96       	adiw	r24, 0x01	; 1
     cfa:	fc 01       	movw	r30, r24
     cfc:	80 81       	ld	r24, Z
     cfe:	48 2f       	mov	r20, r24
     d00:	8a 81       	ldd	r24, Y+2	; 0x02
     d02:	28 2f       	mov	r18, r24
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	02 2e       	mov	r0, r18
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <SET_PIN_DIRECTION+0x42>
     d0e:	88 0f       	add	r24, r24
     d10:	99 1f       	adc	r25, r25
     d12:	0a 94       	dec	r0
     d14:	e2 f7       	brpl	.-8      	; 0xd0e <SET_PIN_DIRECTION+0x3e>
     d16:	84 2b       	or	r24, r20
     d18:	8c 93       	st	X, r24
     d1a:	1d c0       	rjmp	.+58     	; 0xd56 <SET_PIN_DIRECTION+0x86>
	}
	else if (state ==IN)
     d1c:	8b 81       	ldd	r24, Y+3	; 0x03
     d1e:	88 23       	and	r24, r24
     d20:	d1 f4       	brne	.+52     	; 0xd56 <SET_PIN_DIRECTION+0x86>
	{
		*(volatile uint8*)(port+1) &=(~(1<<pin_num));
     d22:	89 81       	ldd	r24, Y+1	; 0x01
     d24:	88 2f       	mov	r24, r24
     d26:	90 e0       	ldi	r25, 0x00	; 0
     d28:	01 96       	adiw	r24, 0x01	; 1
     d2a:	dc 01       	movw	r26, r24
     d2c:	89 81       	ldd	r24, Y+1	; 0x01
     d2e:	88 2f       	mov	r24, r24
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	01 96       	adiw	r24, 0x01	; 1
     d34:	fc 01       	movw	r30, r24
     d36:	80 81       	ld	r24, Z
     d38:	48 2f       	mov	r20, r24
     d3a:	8a 81       	ldd	r24, Y+2	; 0x02
     d3c:	28 2f       	mov	r18, r24
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	81 e0       	ldi	r24, 0x01	; 1
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	02 2e       	mov	r0, r18
     d46:	02 c0       	rjmp	.+4      	; 0xd4c <SET_PIN_DIRECTION+0x7c>
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	0a 94       	dec	r0
     d4e:	e2 f7       	brpl	.-8      	; 0xd48 <SET_PIN_DIRECTION+0x78>
     d50:	80 95       	com	r24
     d52:	84 23       	and	r24, r20
     d54:	8c 93       	st	X, r24
	}
	
}
     d56:	0f 90       	pop	r0
     d58:	0f 90       	pop	r0
     d5a:	0f 90       	pop	r0
     d5c:	cf 91       	pop	r28
     d5e:	df 91       	pop	r29
     d60:	08 95       	ret

00000d62 <WRITE_PORT_VAL>:
void WRITE_PORT_VAL    (PORT_BASE port ,uint8 val)
{
     d62:	df 93       	push	r29
     d64:	cf 93       	push	r28
     d66:	00 d0       	rcall	.+0      	; 0xd68 <WRITE_PORT_VAL+0x6>
     d68:	cd b7       	in	r28, 0x3d	; 61
     d6a:	de b7       	in	r29, 0x3e	; 62
     d6c:	89 83       	std	Y+1, r24	; 0x01
     d6e:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile uint8*)(port+2) =val;
     d70:	89 81       	ldd	r24, Y+1	; 0x01
     d72:	88 2f       	mov	r24, r24
     d74:	90 e0       	ldi	r25, 0x00	; 0
     d76:	02 96       	adiw	r24, 0x02	; 2
     d78:	fc 01       	movw	r30, r24
     d7a:	8a 81       	ldd	r24, Y+2	; 0x02
     d7c:	80 83       	st	Z, r24
}
     d7e:	0f 90       	pop	r0
     d80:	0f 90       	pop	r0
     d82:	cf 91       	pop	r28
     d84:	df 91       	pop	r29
     d86:	08 95       	ret

00000d88 <WRITE_PIN_HIGH>:
void WRITE_PIN_HIGH    (PORT_BASE port ,uint8 pin_num)
{
     d88:	df 93       	push	r29
     d8a:	cf 93       	push	r28
     d8c:	00 d0       	rcall	.+0      	; 0xd8e <WRITE_PIN_HIGH+0x6>
     d8e:	cd b7       	in	r28, 0x3d	; 61
     d90:	de b7       	in	r29, 0x3e	; 62
     d92:	89 83       	std	Y+1, r24	; 0x01
     d94:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile uint8*)(port+2) |=(1<<pin_num);
     d96:	89 81       	ldd	r24, Y+1	; 0x01
     d98:	88 2f       	mov	r24, r24
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	02 96       	adiw	r24, 0x02	; 2
     d9e:	dc 01       	movw	r26, r24
     da0:	89 81       	ldd	r24, Y+1	; 0x01
     da2:	88 2f       	mov	r24, r24
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	02 96       	adiw	r24, 0x02	; 2
     da8:	fc 01       	movw	r30, r24
     daa:	80 81       	ld	r24, Z
     dac:	48 2f       	mov	r20, r24
     dae:	8a 81       	ldd	r24, Y+2	; 0x02
     db0:	28 2f       	mov	r18, r24
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	81 e0       	ldi	r24, 0x01	; 1
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	02 2e       	mov	r0, r18
     dba:	02 c0       	rjmp	.+4      	; 0xdc0 <WRITE_PIN_HIGH+0x38>
     dbc:	88 0f       	add	r24, r24
     dbe:	99 1f       	adc	r25, r25
     dc0:	0a 94       	dec	r0
     dc2:	e2 f7       	brpl	.-8      	; 0xdbc <WRITE_PIN_HIGH+0x34>
     dc4:	84 2b       	or	r24, r20
     dc6:	8c 93       	st	X, r24
}
     dc8:	0f 90       	pop	r0
     dca:	0f 90       	pop	r0
     dcc:	cf 91       	pop	r28
     dce:	df 91       	pop	r29
     dd0:	08 95       	ret

00000dd2 <WRITE_PIN_LOW>:
void WRITE_PIN_LOW     (PORT_BASE port ,uint8 pin_num)
{
     dd2:	df 93       	push	r29
     dd4:	cf 93       	push	r28
     dd6:	00 d0       	rcall	.+0      	; 0xdd8 <WRITE_PIN_LOW+0x6>
     dd8:	cd b7       	in	r28, 0x3d	; 61
     dda:	de b7       	in	r29, 0x3e	; 62
     ddc:	89 83       	std	Y+1, r24	; 0x01
     dde:	6a 83       	std	Y+2, r22	; 0x02
	*(volatile uint8*)(port+2) &=(~(1<<pin_num));
     de0:	89 81       	ldd	r24, Y+1	; 0x01
     de2:	88 2f       	mov	r24, r24
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	02 96       	adiw	r24, 0x02	; 2
     de8:	dc 01       	movw	r26, r24
     dea:	89 81       	ldd	r24, Y+1	; 0x01
     dec:	88 2f       	mov	r24, r24
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	02 96       	adiw	r24, 0x02	; 2
     df2:	fc 01       	movw	r30, r24
     df4:	80 81       	ld	r24, Z
     df6:	48 2f       	mov	r20, r24
     df8:	8a 81       	ldd	r24, Y+2	; 0x02
     dfa:	28 2f       	mov	r18, r24
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	02 2e       	mov	r0, r18
     e04:	02 c0       	rjmp	.+4      	; 0xe0a <WRITE_PIN_LOW+0x38>
     e06:	88 0f       	add	r24, r24
     e08:	99 1f       	adc	r25, r25
     e0a:	0a 94       	dec	r0
     e0c:	e2 f7       	brpl	.-8      	; 0xe06 <WRITE_PIN_LOW+0x34>
     e0e:	80 95       	com	r24
     e10:	84 23       	and	r24, r20
     e12:	8c 93       	st	X, r24
}
     e14:	0f 90       	pop	r0
     e16:	0f 90       	pop	r0
     e18:	cf 91       	pop	r28
     e1a:	df 91       	pop	r29
     e1c:	08 95       	ret

00000e1e <READ_PORT>:
uint8 READ_PORT        (PORT_BASE port)
{
     e1e:	df 93       	push	r29
     e20:	cf 93       	push	r28
     e22:	00 d0       	rcall	.+0      	; 0xe24 <READ_PORT+0x6>
     e24:	cd b7       	in	r28, 0x3d	; 61
     e26:	de b7       	in	r29, 0x3e	; 62
     e28:	8a 83       	std	Y+2, r24	; 0x02
	uint8 x=0xff;
     e2a:	8f ef       	ldi	r24, 0xFF	; 255
     e2c:	89 83       	std	Y+1, r24	; 0x01
	return (x & *(volatile uint8*)port );
     e2e:	8a 81       	ldd	r24, Y+2	; 0x02
     e30:	88 2f       	mov	r24, r24
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	fc 01       	movw	r30, r24
     e36:	90 81       	ld	r25, Z
     e38:	89 81       	ldd	r24, Y+1	; 0x01
     e3a:	89 23       	and	r24, r25
}
     e3c:	0f 90       	pop	r0
     e3e:	0f 90       	pop	r0
     e40:	cf 91       	pop	r28
     e42:	df 91       	pop	r29
     e44:	08 95       	ret

00000e46 <READ_PIN>:
uint8 READ_PIN         (PORT_BASE port ,uint8 pin_num)
{
     e46:	df 93       	push	r29
     e48:	cf 93       	push	r28
     e4a:	00 d0       	rcall	.+0      	; 0xe4c <READ_PIN+0x6>
     e4c:	0f 92       	push	r0
     e4e:	cd b7       	in	r28, 0x3d	; 61
     e50:	de b7       	in	r29, 0x3e	; 62
     e52:	8a 83       	std	Y+2, r24	; 0x02
     e54:	6b 83       	std	Y+3, r22	; 0x03
	uint8 x =1;
     e56:	81 e0       	ldi	r24, 0x01	; 1
     e58:	89 83       	std	Y+1, r24	; 0x01
	return (x & *(volatile uint8*)(port));
     e5a:	8a 81       	ldd	r24, Y+2	; 0x02
     e5c:	88 2f       	mov	r24, r24
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	fc 01       	movw	r30, r24
     e62:	90 81       	ld	r25, Z
     e64:	89 81       	ldd	r24, Y+1	; 0x01
     e66:	89 23       	and	r24, r25
     e68:	0f 90       	pop	r0
     e6a:	0f 90       	pop	r0
     e6c:	0f 90       	pop	r0
     e6e:	cf 91       	pop	r28
     e70:	df 91       	pop	r29
     e72:	08 95       	ret

00000e74 <keypad_init>:
#include "keypad.h"
#include "gpio.h"
uint8 key_row[]={row_0,row_1,row_2,row_3};
uint8 key_col[]={col_0,col_1,col_2,col_3};
void keypad_init(void)
{
     e74:	df 93       	push	r29
     e76:	cf 93       	push	r28
     e78:	cd b7       	in	r28, 0x3d	; 61
     e7a:	de b7       	in	r29, 0x3e	; 62
	SET_PIN_DIRECTION(keypad_port,row_0,IN);
     e7c:	83 e3       	ldi	r24, 0x33	; 51
     e7e:	60 e0       	ldi	r22, 0x00	; 0
     e80:	40 e0       	ldi	r20, 0x00	; 0
     e82:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(keypad_port,row_1,IN);
     e86:	83 e3       	ldi	r24, 0x33	; 51
     e88:	61 e0       	ldi	r22, 0x01	; 1
     e8a:	40 e0       	ldi	r20, 0x00	; 0
     e8c:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(keypad_port,row_2,IN);
     e90:	83 e3       	ldi	r24, 0x33	; 51
     e92:	62 e0       	ldi	r22, 0x02	; 2
     e94:	40 e0       	ldi	r20, 0x00	; 0
     e96:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(keypad_port,row_3,IN);
     e9a:	83 e3       	ldi	r24, 0x33	; 51
     e9c:	63 e0       	ldi	r22, 0x03	; 3
     e9e:	40 e0       	ldi	r20, 0x00	; 0
     ea0:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>

	SET_PIN_DIRECTION(keypad_port,col_0,OUT);
     ea4:	83 e3       	ldi	r24, 0x33	; 51
     ea6:	64 e0       	ldi	r22, 0x04	; 4
     ea8:	41 e0       	ldi	r20, 0x01	; 1
     eaa:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(keypad_port,col_1,OUT);
     eae:	83 e3       	ldi	r24, 0x33	; 51
     eb0:	65 e0       	ldi	r22, 0x05	; 5
     eb2:	41 e0       	ldi	r20, 0x01	; 1
     eb4:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(keypad_port,col_2,OUT);
     eb8:	83 e3       	ldi	r24, 0x33	; 51
     eba:	66 e0       	ldi	r22, 0x06	; 6
     ebc:	41 e0       	ldi	r20, 0x01	; 1
     ebe:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(keypad_port,col_3,OUT);
     ec2:	83 e3       	ldi	r24, 0x33	; 51
     ec4:	67 e0       	ldi	r22, 0x07	; 7
     ec6:	41 e0       	ldi	r20, 0x01	; 1
     ec8:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>

	WRITE_PORT_VAL(keypad_port,0xff);
     ecc:	83 e3       	ldi	r24, 0x33	; 51
     ece:	6f ef       	ldi	r22, 0xFF	; 255
     ed0:	0e 94 b1 06 	call	0xd62	; 0xd62 <WRITE_PORT_VAL>
}
     ed4:	cf 91       	pop	r28
     ed6:	df 91       	pop	r29
     ed8:	08 95       	ret

00000eda <keypad_get_key>:
uint8 keypad_get_key (void)
{
     eda:	df 93       	push	r29
     edc:	cf 93       	push	r28
     ede:	00 d0       	rcall	.+0      	; 0xee0 <keypad_get_key+0x6>
     ee0:	00 d0       	rcall	.+0      	; 0xee2 <keypad_get_key+0x8>
     ee2:	0f 92       	push	r0
     ee4:	cd b7       	in	r28, 0x3d	; 61
     ee6:	de b7       	in	r29, 0x3e	; 62
	uint8 i,j;
	for(i=0;i<4;i++)
     ee8:	1a 82       	std	Y+2, r1	; 0x02
     eea:	e6 c0       	rjmp	.+460    	; 0x10b8 <keypad_get_key+0x1de>
	{
		WRITE_PIN_HIGH(keypad_port,key_col[0]);
     eec:	90 91 83 01 	lds	r25, 0x0183
     ef0:	83 e3       	ldi	r24, 0x33	; 51
     ef2:	69 2f       	mov	r22, r25
     ef4:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
		WRITE_PIN_HIGH(keypad_port,key_col[1]);
     ef8:	90 91 84 01 	lds	r25, 0x0184
     efc:	83 e3       	ldi	r24, 0x33	; 51
     efe:	69 2f       	mov	r22, r25
     f00:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
		WRITE_PIN_HIGH(keypad_port,key_col[2]);
     f04:	90 91 85 01 	lds	r25, 0x0185
     f08:	83 e3       	ldi	r24, 0x33	; 51
     f0a:	69 2f       	mov	r22, r25
     f0c:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
		WRITE_PIN_HIGH(keypad_port,key_col[3]);
     f10:	90 91 86 01 	lds	r25, 0x0186
     f14:	83 e3       	ldi	r24, 0x33	; 51
     f16:	69 2f       	mov	r22, r25
     f18:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>

		WRITE_PIN_LOW(keypad_port,key_col[i]);
     f1c:	8a 81       	ldd	r24, Y+2	; 0x02
     f1e:	88 2f       	mov	r24, r24
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	fc 01       	movw	r30, r24
     f24:	ed 57       	subi	r30, 0x7D	; 125
     f26:	fe 4f       	sbci	r31, 0xFE	; 254
     f28:	90 81       	ld	r25, Z
     f2a:	83 e3       	ldi	r24, 0x33	; 51
     f2c:	69 2f       	mov	r22, r25
     f2e:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
		for(j=0;j<4;j++)
     f32:	19 82       	std	Y+1, r1	; 0x01
     f34:	ba c0       	rjmp	.+372    	; 0x10aa <keypad_get_key+0x1d0>
		{
			if(!(READ_PORT(keypad_port)&(1<<key_row[j])))
     f36:	83 e3       	ldi	r24, 0x33	; 51
     f38:	0e 94 0f 07 	call	0xe1e	; 0xe1e <READ_PORT>
     f3c:	28 2f       	mov	r18, r24
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	89 81       	ldd	r24, Y+1	; 0x01
     f42:	88 2f       	mov	r24, r24
     f44:	90 e0       	ldi	r25, 0x00	; 0
     f46:	fc 01       	movw	r30, r24
     f48:	e1 58       	subi	r30, 0x81	; 129
     f4a:	fe 4f       	sbci	r31, 0xFE	; 254
     f4c:	80 81       	ld	r24, Z
     f4e:	88 2f       	mov	r24, r24
     f50:	90 e0       	ldi	r25, 0x00	; 0
     f52:	a9 01       	movw	r20, r18
     f54:	02 c0       	rjmp	.+4      	; 0xf5a <keypad_get_key+0x80>
     f56:	55 95       	asr	r21
     f58:	47 95       	ror	r20
     f5a:	8a 95       	dec	r24
     f5c:	e2 f7       	brpl	.-8      	; 0xf56 <keypad_get_key+0x7c>
     f5e:	ca 01       	movw	r24, r20
     f60:	81 70       	andi	r24, 0x01	; 1
     f62:	90 70       	andi	r25, 0x00	; 0
     f64:	00 97       	sbiw	r24, 0x00	; 0
     f66:	09 f0       	breq	.+2      	; 0xf6a <keypad_get_key+0x90>
     f68:	9d c0       	rjmp	.+314    	; 0x10a4 <keypad_get_key+0x1ca>
     f6a:	82 c0       	rjmp	.+260    	; 0x1070 <keypad_get_key+0x196>
			{
				while(!(READ_PORT(keypad_port)&(1<<key_row[j])))
				{
					switch(i)
     f6c:	8a 81       	ldd	r24, Y+2	; 0x02
     f6e:	28 2f       	mov	r18, r24
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	3d 83       	std	Y+5, r19	; 0x05
     f74:	2c 83       	std	Y+4, r18	; 0x04
     f76:	4c 81       	ldd	r20, Y+4	; 0x04
     f78:	5d 81       	ldd	r21, Y+5	; 0x05
     f7a:	41 30       	cpi	r20, 0x01	; 1
     f7c:	51 05       	cpc	r21, r1
     f7e:	81 f1       	breq	.+96     	; 0xfe0 <keypad_get_key+0x106>
     f80:	8c 81       	ldd	r24, Y+4	; 0x04
     f82:	9d 81       	ldd	r25, Y+5	; 0x05
     f84:	82 30       	cpi	r24, 0x02	; 2
     f86:	91 05       	cpc	r25, r1
     f88:	34 f4       	brge	.+12     	; 0xf96 <keypad_get_key+0xbc>
     f8a:	2c 81       	ldd	r18, Y+4	; 0x04
     f8c:	3d 81       	ldd	r19, Y+5	; 0x05
     f8e:	21 15       	cp	r18, r1
     f90:	31 05       	cpc	r19, r1
     f92:	69 f0       	breq	.+26     	; 0xfae <keypad_get_key+0xd4>
     f94:	6d c0       	rjmp	.+218    	; 0x1070 <keypad_get_key+0x196>
     f96:	4c 81       	ldd	r20, Y+4	; 0x04
     f98:	5d 81       	ldd	r21, Y+5	; 0x05
     f9a:	42 30       	cpi	r20, 0x02	; 2
     f9c:	51 05       	cpc	r21, r1
     f9e:	c1 f1       	breq	.+112    	; 0x1010 <keypad_get_key+0x136>
     fa0:	8c 81       	ldd	r24, Y+4	; 0x04
     fa2:	9d 81       	ldd	r25, Y+5	; 0x05
     fa4:	83 30       	cpi	r24, 0x03	; 3
     fa6:	91 05       	cpc	r25, r1
     fa8:	09 f4       	brne	.+2      	; 0xfac <keypad_get_key+0xd2>
     faa:	4a c0       	rjmp	.+148    	; 0x1040 <keypad_get_key+0x166>
     fac:	61 c0       	rjmp	.+194    	; 0x1070 <keypad_get_key+0x196>
					{
					case (0):
	{
						if(j==0)  return '7';
     fae:	89 81       	ldd	r24, Y+1	; 0x01
     fb0:	88 23       	and	r24, r24
     fb2:	19 f4       	brne	.+6      	; 0xfba <keypad_get_key+0xe0>
     fb4:	97 e3       	ldi	r25, 0x37	; 55
     fb6:	9b 83       	std	Y+3, r25	; 0x03
     fb8:	85 c0       	rjmp	.+266    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==1)  return '4';
     fba:	89 81       	ldd	r24, Y+1	; 0x01
     fbc:	81 30       	cpi	r24, 0x01	; 1
     fbe:	19 f4       	brne	.+6      	; 0xfc6 <keypad_get_key+0xec>
     fc0:	24 e3       	ldi	r18, 0x34	; 52
     fc2:	2b 83       	std	Y+3, r18	; 0x03
     fc4:	7f c0       	rjmp	.+254    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==2)  return '1';
     fc6:	89 81       	ldd	r24, Y+1	; 0x01
     fc8:	82 30       	cpi	r24, 0x02	; 2
     fca:	19 f4       	brne	.+6      	; 0xfd2 <keypad_get_key+0xf8>
     fcc:	31 e3       	ldi	r19, 0x31	; 49
     fce:	3b 83       	std	Y+3, r19	; 0x03
     fd0:	79 c0       	rjmp	.+242    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==3)  return '?';
     fd2:	89 81       	ldd	r24, Y+1	; 0x01
     fd4:	83 30       	cpi	r24, 0x03	; 3
     fd6:	09 f0       	breq	.+2      	; 0xfda <keypad_get_key+0x100>
     fd8:	4b c0       	rjmp	.+150    	; 0x1070 <keypad_get_key+0x196>
     fda:	4f e3       	ldi	r20, 0x3F	; 63
     fdc:	4b 83       	std	Y+3, r20	; 0x03
     fde:	72 c0       	rjmp	.+228    	; 0x10c4 <keypad_get_key+0x1ea>
						break ;
	}
					case (1):
	{
						if(j==0)  return '8';
     fe0:	89 81       	ldd	r24, Y+1	; 0x01
     fe2:	88 23       	and	r24, r24
     fe4:	19 f4       	brne	.+6      	; 0xfec <keypad_get_key+0x112>
     fe6:	58 e3       	ldi	r21, 0x38	; 56
     fe8:	5b 83       	std	Y+3, r21	; 0x03
     fea:	6c c0       	rjmp	.+216    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==1)  return '5';
     fec:	89 81       	ldd	r24, Y+1	; 0x01
     fee:	81 30       	cpi	r24, 0x01	; 1
     ff0:	19 f4       	brne	.+6      	; 0xff8 <keypad_get_key+0x11e>
     ff2:	85 e3       	ldi	r24, 0x35	; 53
     ff4:	8b 83       	std	Y+3, r24	; 0x03
     ff6:	66 c0       	rjmp	.+204    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==2)  return '2';
     ff8:	89 81       	ldd	r24, Y+1	; 0x01
     ffa:	82 30       	cpi	r24, 0x02	; 2
     ffc:	19 f4       	brne	.+6      	; 0x1004 <keypad_get_key+0x12a>
     ffe:	92 e3       	ldi	r25, 0x32	; 50
    1000:	9b 83       	std	Y+3, r25	; 0x03
    1002:	60 c0       	rjmp	.+192    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==3)  return '0';
    1004:	89 81       	ldd	r24, Y+1	; 0x01
    1006:	83 30       	cpi	r24, 0x03	; 3
    1008:	99 f5       	brne	.+102    	; 0x1070 <keypad_get_key+0x196>
    100a:	20 e3       	ldi	r18, 0x30	; 48
    100c:	2b 83       	std	Y+3, r18	; 0x03
    100e:	5a c0       	rjmp	.+180    	; 0x10c4 <keypad_get_key+0x1ea>
						break ;
	}
					case (2):
	{
						if(j==0)  return '9';
    1010:	89 81       	ldd	r24, Y+1	; 0x01
    1012:	88 23       	and	r24, r24
    1014:	19 f4       	brne	.+6      	; 0x101c <keypad_get_key+0x142>
    1016:	39 e3       	ldi	r19, 0x39	; 57
    1018:	3b 83       	std	Y+3, r19	; 0x03
    101a:	54 c0       	rjmp	.+168    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==1)  return '6';
    101c:	89 81       	ldd	r24, Y+1	; 0x01
    101e:	81 30       	cpi	r24, 0x01	; 1
    1020:	19 f4       	brne	.+6      	; 0x1028 <keypad_get_key+0x14e>
    1022:	46 e3       	ldi	r20, 0x36	; 54
    1024:	4b 83       	std	Y+3, r20	; 0x03
    1026:	4e c0       	rjmp	.+156    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==2)  return '3';
    1028:	89 81       	ldd	r24, Y+1	; 0x01
    102a:	82 30       	cpi	r24, 0x02	; 2
    102c:	19 f4       	brne	.+6      	; 0x1034 <keypad_get_key+0x15a>
    102e:	53 e3       	ldi	r21, 0x33	; 51
    1030:	5b 83       	std	Y+3, r21	; 0x03
    1032:	48 c0       	rjmp	.+144    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==3)  return '=';
    1034:	89 81       	ldd	r24, Y+1	; 0x01
    1036:	83 30       	cpi	r24, 0x03	; 3
    1038:	d9 f4       	brne	.+54     	; 0x1070 <keypad_get_key+0x196>
    103a:	8d e3       	ldi	r24, 0x3D	; 61
    103c:	8b 83       	std	Y+3, r24	; 0x03
    103e:	42 c0       	rjmp	.+132    	; 0x10c4 <keypad_get_key+0x1ea>
						break ;
	}

					case (3):
	{
						if(j==0)  return '/';
    1040:	89 81       	ldd	r24, Y+1	; 0x01
    1042:	88 23       	and	r24, r24
    1044:	19 f4       	brne	.+6      	; 0x104c <keypad_get_key+0x172>
    1046:	9f e2       	ldi	r25, 0x2F	; 47
    1048:	9b 83       	std	Y+3, r25	; 0x03
    104a:	3c c0       	rjmp	.+120    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==1)  return '*';
    104c:	89 81       	ldd	r24, Y+1	; 0x01
    104e:	81 30       	cpi	r24, 0x01	; 1
    1050:	19 f4       	brne	.+6      	; 0x1058 <keypad_get_key+0x17e>
    1052:	2a e2       	ldi	r18, 0x2A	; 42
    1054:	2b 83       	std	Y+3, r18	; 0x03
    1056:	36 c0       	rjmp	.+108    	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==2)  return '-';
    1058:	89 81       	ldd	r24, Y+1	; 0x01
    105a:	82 30       	cpi	r24, 0x02	; 2
    105c:	19 f4       	brne	.+6      	; 0x1064 <keypad_get_key+0x18a>
    105e:	3d e2       	ldi	r19, 0x2D	; 45
    1060:	3b 83       	std	Y+3, r19	; 0x03
    1062:	30 c0       	rjmp	.+96     	; 0x10c4 <keypad_get_key+0x1ea>
						else if(j==3)  return '+';
    1064:	89 81       	ldd	r24, Y+1	; 0x01
    1066:	83 30       	cpi	r24, 0x03	; 3
    1068:	19 f4       	brne	.+6      	; 0x1070 <keypad_get_key+0x196>
    106a:	4b e2       	ldi	r20, 0x2B	; 43
    106c:	4b 83       	std	Y+3, r20	; 0x03
    106e:	2a c0       	rjmp	.+84     	; 0x10c4 <keypad_get_key+0x1ea>
		WRITE_PIN_LOW(keypad_port,key_col[i]);
		for(j=0;j<4;j++)
		{
			if(!(READ_PORT(keypad_port)&(1<<key_row[j])))
			{
				while(!(READ_PORT(keypad_port)&(1<<key_row[j])))
    1070:	83 e3       	ldi	r24, 0x33	; 51
    1072:	0e 94 0f 07 	call	0xe1e	; 0xe1e <READ_PORT>
    1076:	28 2f       	mov	r18, r24
    1078:	30 e0       	ldi	r19, 0x00	; 0
    107a:	89 81       	ldd	r24, Y+1	; 0x01
    107c:	88 2f       	mov	r24, r24
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	fc 01       	movw	r30, r24
    1082:	e1 58       	subi	r30, 0x81	; 129
    1084:	fe 4f       	sbci	r31, 0xFE	; 254
    1086:	80 81       	ld	r24, Z
    1088:	88 2f       	mov	r24, r24
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	a9 01       	movw	r20, r18
    108e:	02 c0       	rjmp	.+4      	; 0x1094 <keypad_get_key+0x1ba>
    1090:	55 95       	asr	r21
    1092:	47 95       	ror	r20
    1094:	8a 95       	dec	r24
    1096:	e2 f7       	brpl	.-8      	; 0x1090 <keypad_get_key+0x1b6>
    1098:	ca 01       	movw	r24, r20
    109a:	81 70       	andi	r24, 0x01	; 1
    109c:	90 70       	andi	r25, 0x00	; 0
    109e:	00 97       	sbiw	r24, 0x00	; 0
    10a0:	09 f4       	brne	.+2      	; 0x10a4 <keypad_get_key+0x1ca>
    10a2:	64 cf       	rjmp	.-312    	; 0xf6c <keypad_get_key+0x92>
		WRITE_PIN_HIGH(keypad_port,key_col[1]);
		WRITE_PIN_HIGH(keypad_port,key_col[2]);
		WRITE_PIN_HIGH(keypad_port,key_col[3]);

		WRITE_PIN_LOW(keypad_port,key_col[i]);
		for(j=0;j<4;j++)
    10a4:	89 81       	ldd	r24, Y+1	; 0x01
    10a6:	8f 5f       	subi	r24, 0xFF	; 255
    10a8:	89 83       	std	Y+1, r24	; 0x01
    10aa:	89 81       	ldd	r24, Y+1	; 0x01
    10ac:	84 30       	cpi	r24, 0x04	; 4
    10ae:	08 f4       	brcc	.+2      	; 0x10b2 <keypad_get_key+0x1d8>
    10b0:	42 cf       	rjmp	.-380    	; 0xf36 <keypad_get_key+0x5c>
	WRITE_PORT_VAL(keypad_port,0xff);
}
uint8 keypad_get_key (void)
{
	uint8 i,j;
	for(i=0;i<4;i++)
    10b2:	8a 81       	ldd	r24, Y+2	; 0x02
    10b4:	8f 5f       	subi	r24, 0xFF	; 255
    10b6:	8a 83       	std	Y+2, r24	; 0x02
    10b8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ba:	84 30       	cpi	r24, 0x04	; 4
    10bc:	08 f4       	brcc	.+2      	; 0x10c0 <keypad_get_key+0x1e6>
    10be:	16 cf       	rjmp	.-468    	; 0xeec <keypad_get_key+0x12>
					}
				}
			}
		}
	}
	return 'A';
    10c0:	51 e4       	ldi	r21, 0x41	; 65
    10c2:	5b 83       	std	Y+3, r21	; 0x03
    10c4:	8b 81       	ldd	r24, Y+3	; 0x03
}
    10c6:	0f 90       	pop	r0
    10c8:	0f 90       	pop	r0
    10ca:	0f 90       	pop	r0
    10cc:	0f 90       	pop	r0
    10ce:	0f 90       	pop	r0
    10d0:	cf 91       	pop	r28
    10d2:	df 91       	pop	r29
    10d4:	08 95       	ret

000010d6 <lcd_init>:
 */ 
#include "lcd.h"
#include <util/delay.h>

void lcd_init      (void)
{	
    10d6:	df 93       	push	r29
    10d8:	cf 93       	push	r28
    10da:	cd b7       	in	r28, 0x3d	; 61
    10dc:	de b7       	in	r29, 0x3e	; 62
    10de:	2e 97       	sbiw	r28, 0x0e	; 14
    10e0:	0f b6       	in	r0, 0x3f	; 63
    10e2:	f8 94       	cli
    10e4:	de bf       	out	0x3e, r29	; 62
    10e6:	0f be       	out	0x3f, r0	; 63
    10e8:	cd bf       	out	0x3d, r28	; 61
	lcd_send_cmnd(0x01);
	_delay_ms(1000);
	lcd_send_cmnd(0x06);
	////////////////////////////////////////////////////////////////
	#elif (DATA_BIT_MODE == 4)
	SET_PIN_DIRECTION(LCD_DATA_PORT,EN,OUT);
    10ea:	89 e3       	ldi	r24, 0x39	; 57
    10ec:	64 e0       	ldi	r22, 0x04	; 4
    10ee:	41 e0       	ldi	r20, 0x01	; 1
    10f0:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(LCD_DATA_PORT,RS,OUT);
    10f4:	89 e3       	ldi	r24, 0x39	; 57
    10f6:	65 e0       	ldi	r22, 0x05	; 5
    10f8:	41 e0       	ldi	r20, 0x01	; 1
    10fa:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
		
	#ifdef LOWER_PINS
	SET_PIN_DIRECTION(LCD_DATA_PORT,0,OUT);
    10fe:	89 e3       	ldi	r24, 0x39	; 57
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	41 e0       	ldi	r20, 0x01	; 1
    1104:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(LCD_DATA_PORT,1,OUT);	
    1108:	89 e3       	ldi	r24, 0x39	; 57
    110a:	61 e0       	ldi	r22, 0x01	; 1
    110c:	41 e0       	ldi	r20, 0x01	; 1
    110e:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(LCD_DATA_PORT,2,OUT);
    1112:	89 e3       	ldi	r24, 0x39	; 57
    1114:	62 e0       	ldi	r22, 0x02	; 2
    1116:	41 e0       	ldi	r20, 0x01	; 1
    1118:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	SET_PIN_DIRECTION(LCD_DATA_PORT,3,OUT);	
    111c:	89 e3       	ldi	r24, 0x39	; 57
    111e:	63 e0       	ldi	r22, 0x03	; 3
    1120:	41 e0       	ldi	r20, 0x01	; 1
    1122:	0e 94 68 06 	call	0xcd0	; 0xcd0 <SET_PIN_DIRECTION>
	
	WRITE_PIN_LOW(LCD_DATA_PORT,EN);
    1126:	89 e3       	ldi	r24, 0x39	; 57
    1128:	64 e0       	ldi	r22, 0x04	; 4
    112a:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
	lcd_send_cmnd(0x33);
    112e:	83 e3       	ldi	r24, 0x33	; 51
    1130:	0e 94 24 09 	call	0x1248	; 0x1248 <lcd_send_cmnd>
	lcd_send_cmnd(0x32);
    1134:	82 e3       	ldi	r24, 0x32	; 50
    1136:	0e 94 24 09 	call	0x1248	; 0x1248 <lcd_send_cmnd>
	lcd_send_cmnd(0x28);
    113a:	88 e2       	ldi	r24, 0x28	; 40
    113c:	0e 94 24 09 	call	0x1248	; 0x1248 <lcd_send_cmnd>
	lcd_send_cmnd(0x0E);
    1140:	8e e0       	ldi	r24, 0x0E	; 14
    1142:	0e 94 24 09 	call	0x1248	; 0x1248 <lcd_send_cmnd>
	lcd_send_cmnd(0x01);
    1146:	81 e0       	ldi	r24, 0x01	; 1
    1148:	0e 94 24 09 	call	0x1248	; 0x1248 <lcd_send_cmnd>
    114c:	80 e0       	ldi	r24, 0x00	; 0
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	aa e7       	ldi	r26, 0x7A	; 122
    1152:	b4 e4       	ldi	r27, 0x44	; 68
    1154:	8b 87       	std	Y+11, r24	; 0x0b
    1156:	9c 87       	std	Y+12, r25	; 0x0c
    1158:	ad 87       	std	Y+13, r26	; 0x0d
    115a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    115c:	6b 85       	ldd	r22, Y+11	; 0x0b
    115e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1160:	8d 85       	ldd	r24, Y+13	; 0x0d
    1162:	9e 85       	ldd	r25, Y+14	; 0x0e
    1164:	20 e0       	ldi	r18, 0x00	; 0
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	4a e7       	ldi	r20, 0x7A	; 122
    116a:	54 e4       	ldi	r21, 0x44	; 68
    116c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1170:	dc 01       	movw	r26, r24
    1172:	cb 01       	movw	r24, r22
    1174:	8f 83       	std	Y+7, r24	; 0x07
    1176:	98 87       	std	Y+8, r25	; 0x08
    1178:	a9 87       	std	Y+9, r26	; 0x09
    117a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    117c:	6f 81       	ldd	r22, Y+7	; 0x07
    117e:	78 85       	ldd	r23, Y+8	; 0x08
    1180:	89 85       	ldd	r24, Y+9	; 0x09
    1182:	9a 85       	ldd	r25, Y+10	; 0x0a
    1184:	20 e0       	ldi	r18, 0x00	; 0
    1186:	30 e0       	ldi	r19, 0x00	; 0
    1188:	40 e8       	ldi	r20, 0x80	; 128
    118a:	5f e3       	ldi	r21, 0x3F	; 63
    118c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1190:	88 23       	and	r24, r24
    1192:	2c f4       	brge	.+10     	; 0x119e <lcd_init+0xc8>
		__ticks = 1;
    1194:	81 e0       	ldi	r24, 0x01	; 1
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	9e 83       	std	Y+6, r25	; 0x06
    119a:	8d 83       	std	Y+5, r24	; 0x05
    119c:	3f c0       	rjmp	.+126    	; 0x121c <lcd_init+0x146>
	else if (__tmp > 65535)
    119e:	6f 81       	ldd	r22, Y+7	; 0x07
    11a0:	78 85       	ldd	r23, Y+8	; 0x08
    11a2:	89 85       	ldd	r24, Y+9	; 0x09
    11a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    11a6:	20 e0       	ldi	r18, 0x00	; 0
    11a8:	3f ef       	ldi	r19, 0xFF	; 255
    11aa:	4f e7       	ldi	r20, 0x7F	; 127
    11ac:	57 e4       	ldi	r21, 0x47	; 71
    11ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11b2:	18 16       	cp	r1, r24
    11b4:	4c f5       	brge	.+82     	; 0x1208 <lcd_init+0x132>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11b6:	6b 85       	ldd	r22, Y+11	; 0x0b
    11b8:	7c 85       	ldd	r23, Y+12	; 0x0c
    11ba:	8d 85       	ldd	r24, Y+13	; 0x0d
    11bc:	9e 85       	ldd	r25, Y+14	; 0x0e
    11be:	20 e0       	ldi	r18, 0x00	; 0
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	40 e2       	ldi	r20, 0x20	; 32
    11c4:	51 e4       	ldi	r21, 0x41	; 65
    11c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11ca:	dc 01       	movw	r26, r24
    11cc:	cb 01       	movw	r24, r22
    11ce:	bc 01       	movw	r22, r24
    11d0:	cd 01       	movw	r24, r26
    11d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    11d6:	dc 01       	movw	r26, r24
    11d8:	cb 01       	movw	r24, r22
    11da:	9e 83       	std	Y+6, r25	; 0x06
    11dc:	8d 83       	std	Y+5, r24	; 0x05
    11de:	0f c0       	rjmp	.+30     	; 0x11fe <lcd_init+0x128>
    11e0:	84 e6       	ldi	r24, 0x64	; 100
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	9c 83       	std	Y+4, r25	; 0x04
    11e6:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11e8:	8b 81       	ldd	r24, Y+3	; 0x03
    11ea:	9c 81       	ldd	r25, Y+4	; 0x04
    11ec:	01 97       	sbiw	r24, 0x01	; 1
    11ee:	f1 f7       	brne	.-4      	; 0x11ec <lcd_init+0x116>
    11f0:	9c 83       	std	Y+4, r25	; 0x04
    11f2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11f4:	8d 81       	ldd	r24, Y+5	; 0x05
    11f6:	9e 81       	ldd	r25, Y+6	; 0x06
    11f8:	01 97       	sbiw	r24, 0x01	; 1
    11fa:	9e 83       	std	Y+6, r25	; 0x06
    11fc:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1200:	9e 81       	ldd	r25, Y+6	; 0x06
    1202:	00 97       	sbiw	r24, 0x00	; 0
    1204:	69 f7       	brne	.-38     	; 0x11e0 <lcd_init+0x10a>
    1206:	14 c0       	rjmp	.+40     	; 0x1230 <lcd_init+0x15a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1208:	6f 81       	ldd	r22, Y+7	; 0x07
    120a:	78 85       	ldd	r23, Y+8	; 0x08
    120c:	89 85       	ldd	r24, Y+9	; 0x09
    120e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1210:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1214:	dc 01       	movw	r26, r24
    1216:	cb 01       	movw	r24, r22
    1218:	9e 83       	std	Y+6, r25	; 0x06
    121a:	8d 83       	std	Y+5, r24	; 0x05
    121c:	8d 81       	ldd	r24, Y+5	; 0x05
    121e:	9e 81       	ldd	r25, Y+6	; 0x06
    1220:	9a 83       	std	Y+2, r25	; 0x02
    1222:	89 83       	std	Y+1, r24	; 0x01
    1224:	89 81       	ldd	r24, Y+1	; 0x01
    1226:	9a 81       	ldd	r25, Y+2	; 0x02
    1228:	01 97       	sbiw	r24, 0x01	; 1
    122a:	f1 f7       	brne	.-4      	; 0x1228 <lcd_init+0x152>
    122c:	9a 83       	std	Y+2, r25	; 0x02
    122e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1000);
	lcd_send_cmnd(0x06);	
    1230:	86 e0       	ldi	r24, 0x06	; 6
    1232:	0e 94 24 09 	call	0x1248	; 0x1248 <lcd_send_cmnd>
		_delay_ms(1000);
		lcd_send_cmnd(0x06);		
		#endif

#endif
}
    1236:	2e 96       	adiw	r28, 0x0e	; 14
    1238:	0f b6       	in	r0, 0x3f	; 63
    123a:	f8 94       	cli
    123c:	de bf       	out	0x3e, r29	; 62
    123e:	0f be       	out	0x3f, r0	; 63
    1240:	cd bf       	out	0x3d, r28	; 61
    1242:	cf 91       	pop	r28
    1244:	df 91       	pop	r29
    1246:	08 95       	ret

00001248 <lcd_send_cmnd>:
void lcd_send_cmnd (uint8 cmnd)
{
    1248:	df 93       	push	r29
    124a:	cf 93       	push	r28
    124c:	cd b7       	in	r28, 0x3d	; 61
    124e:	de b7       	in	r29, 0x3e	; 62
    1250:	e9 97       	sbiw	r28, 0x39	; 57
    1252:	0f b6       	in	r0, 0x3f	; 63
    1254:	f8 94       	cli
    1256:	de bf       	out	0x3e, r29	; 62
    1258:	0f be       	out	0x3f, r0	; 63
    125a:	cd bf       	out	0x3d, r28	; 61
    125c:	89 af       	std	Y+57, r24	; 0x39
		WRITE_PIN_LOW(LCD_CTRL_PORT ,EN);
		_delay_ms(100);		
	
#elif (DATA_BIT_MODE==4)	
  #ifdef LOWER_PINS
		WRITE_PORT_VAL(LCD_DATA_PORT ,cmnd>>4);
    125e:	89 ad       	ldd	r24, Y+57	; 0x39
    1260:	98 2f       	mov	r25, r24
    1262:	92 95       	swap	r25
    1264:	9f 70       	andi	r25, 0x0F	; 15
    1266:	89 e3       	ldi	r24, 0x39	; 57
    1268:	69 2f       	mov	r22, r25
    126a:	0e 94 b1 06 	call	0xd62	; 0xd62 <WRITE_PORT_VAL>
		WRITE_PIN_LOW(LCD_DATA_PORT ,RS);
    126e:	89 e3       	ldi	r24, 0x39	; 57
    1270:	65 e0       	ldi	r22, 0x05	; 5
    1272:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
		WRITE_PIN_HIGH(LCD_DATA_PORT ,EN);
    1276:	89 e3       	ldi	r24, 0x39	; 57
    1278:	64 e0       	ldi	r22, 0x04	; 4
    127a:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	90 e0       	ldi	r25, 0x00	; 0
    1282:	a0 e8       	ldi	r26, 0x80	; 128
    1284:	bf e3       	ldi	r27, 0x3F	; 63
    1286:	8d ab       	std	Y+53, r24	; 0x35
    1288:	9e ab       	std	Y+54, r25	; 0x36
    128a:	af ab       	std	Y+55, r26	; 0x37
    128c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    128e:	6d a9       	ldd	r22, Y+53	; 0x35
    1290:	7e a9       	ldd	r23, Y+54	; 0x36
    1292:	8f a9       	ldd	r24, Y+55	; 0x37
    1294:	98 ad       	ldd	r25, Y+56	; 0x38
    1296:	20 e0       	ldi	r18, 0x00	; 0
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	4a e7       	ldi	r20, 0x7A	; 122
    129c:	54 e4       	ldi	r21, 0x44	; 68
    129e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12a2:	dc 01       	movw	r26, r24
    12a4:	cb 01       	movw	r24, r22
    12a6:	89 ab       	std	Y+49, r24	; 0x31
    12a8:	9a ab       	std	Y+50, r25	; 0x32
    12aa:	ab ab       	std	Y+51, r26	; 0x33
    12ac:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    12ae:	69 a9       	ldd	r22, Y+49	; 0x31
    12b0:	7a a9       	ldd	r23, Y+50	; 0x32
    12b2:	8b a9       	ldd	r24, Y+51	; 0x33
    12b4:	9c a9       	ldd	r25, Y+52	; 0x34
    12b6:	20 e0       	ldi	r18, 0x00	; 0
    12b8:	30 e0       	ldi	r19, 0x00	; 0
    12ba:	40 e8       	ldi	r20, 0x80	; 128
    12bc:	5f e3       	ldi	r21, 0x3F	; 63
    12be:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12c2:	88 23       	and	r24, r24
    12c4:	2c f4       	brge	.+10     	; 0x12d0 <lcd_send_cmnd+0x88>
		__ticks = 1;
    12c6:	81 e0       	ldi	r24, 0x01	; 1
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	98 ab       	std	Y+48, r25	; 0x30
    12cc:	8f a7       	std	Y+47, r24	; 0x2f
    12ce:	3f c0       	rjmp	.+126    	; 0x134e <lcd_send_cmnd+0x106>
	else if (__tmp > 65535)
    12d0:	69 a9       	ldd	r22, Y+49	; 0x31
    12d2:	7a a9       	ldd	r23, Y+50	; 0x32
    12d4:	8b a9       	ldd	r24, Y+51	; 0x33
    12d6:	9c a9       	ldd	r25, Y+52	; 0x34
    12d8:	20 e0       	ldi	r18, 0x00	; 0
    12da:	3f ef       	ldi	r19, 0xFF	; 255
    12dc:	4f e7       	ldi	r20, 0x7F	; 127
    12de:	57 e4       	ldi	r21, 0x47	; 71
    12e0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12e4:	18 16       	cp	r1, r24
    12e6:	4c f5       	brge	.+82     	; 0x133a <lcd_send_cmnd+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12e8:	6d a9       	ldd	r22, Y+53	; 0x35
    12ea:	7e a9       	ldd	r23, Y+54	; 0x36
    12ec:	8f a9       	ldd	r24, Y+55	; 0x37
    12ee:	98 ad       	ldd	r25, Y+56	; 0x38
    12f0:	20 e0       	ldi	r18, 0x00	; 0
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	40 e2       	ldi	r20, 0x20	; 32
    12f6:	51 e4       	ldi	r21, 0x41	; 65
    12f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12fc:	dc 01       	movw	r26, r24
    12fe:	cb 01       	movw	r24, r22
    1300:	bc 01       	movw	r22, r24
    1302:	cd 01       	movw	r24, r26
    1304:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1308:	dc 01       	movw	r26, r24
    130a:	cb 01       	movw	r24, r22
    130c:	98 ab       	std	Y+48, r25	; 0x30
    130e:	8f a7       	std	Y+47, r24	; 0x2f
    1310:	0f c0       	rjmp	.+30     	; 0x1330 <lcd_send_cmnd+0xe8>
    1312:	84 e6       	ldi	r24, 0x64	; 100
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	9e a7       	std	Y+46, r25	; 0x2e
    1318:	8d a7       	std	Y+45, r24	; 0x2d
    131a:	8d a5       	ldd	r24, Y+45	; 0x2d
    131c:	9e a5       	ldd	r25, Y+46	; 0x2e
    131e:	01 97       	sbiw	r24, 0x01	; 1
    1320:	f1 f7       	brne	.-4      	; 0x131e <lcd_send_cmnd+0xd6>
    1322:	9e a7       	std	Y+46, r25	; 0x2e
    1324:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1326:	8f a5       	ldd	r24, Y+47	; 0x2f
    1328:	98 a9       	ldd	r25, Y+48	; 0x30
    132a:	01 97       	sbiw	r24, 0x01	; 1
    132c:	98 ab       	std	Y+48, r25	; 0x30
    132e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1330:	8f a5       	ldd	r24, Y+47	; 0x2f
    1332:	98 a9       	ldd	r25, Y+48	; 0x30
    1334:	00 97       	sbiw	r24, 0x00	; 0
    1336:	69 f7       	brne	.-38     	; 0x1312 <lcd_send_cmnd+0xca>
    1338:	14 c0       	rjmp	.+40     	; 0x1362 <lcd_send_cmnd+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    133a:	69 a9       	ldd	r22, Y+49	; 0x31
    133c:	7a a9       	ldd	r23, Y+50	; 0x32
    133e:	8b a9       	ldd	r24, Y+51	; 0x33
    1340:	9c a9       	ldd	r25, Y+52	; 0x34
    1342:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1346:	dc 01       	movw	r26, r24
    1348:	cb 01       	movw	r24, r22
    134a:	98 ab       	std	Y+48, r25	; 0x30
    134c:	8f a7       	std	Y+47, r24	; 0x2f
    134e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1350:	98 a9       	ldd	r25, Y+48	; 0x30
    1352:	9c a7       	std	Y+44, r25	; 0x2c
    1354:	8b a7       	std	Y+43, r24	; 0x2b
    1356:	8b a5       	ldd	r24, Y+43	; 0x2b
    1358:	9c a5       	ldd	r25, Y+44	; 0x2c
    135a:	01 97       	sbiw	r24, 0x01	; 1
    135c:	f1 f7       	brne	.-4      	; 0x135a <lcd_send_cmnd+0x112>
    135e:	9c a7       	std	Y+44, r25	; 0x2c
    1360:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		WRITE_PIN_LOW(LCD_DATA_PORT ,EN);
    1362:	89 e3       	ldi	r24, 0x39	; 57
    1364:	64 e0       	ldi	r22, 0x04	; 4
    1366:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
    136a:	80 e0       	ldi	r24, 0x00	; 0
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	a8 ec       	ldi	r26, 0xC8	; 200
    1370:	b2 e4       	ldi	r27, 0x42	; 66
    1372:	8f a3       	std	Y+39, r24	; 0x27
    1374:	98 a7       	std	Y+40, r25	; 0x28
    1376:	a9 a7       	std	Y+41, r26	; 0x29
    1378:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    137a:	6f a1       	ldd	r22, Y+39	; 0x27
    137c:	78 a5       	ldd	r23, Y+40	; 0x28
    137e:	89 a5       	ldd	r24, Y+41	; 0x29
    1380:	9a a5       	ldd	r25, Y+42	; 0x2a
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	4a e7       	ldi	r20, 0x7A	; 122
    1388:	54 e4       	ldi	r21, 0x44	; 68
    138a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    138e:	dc 01       	movw	r26, r24
    1390:	cb 01       	movw	r24, r22
    1392:	8b a3       	std	Y+35, r24	; 0x23
    1394:	9c a3       	std	Y+36, r25	; 0x24
    1396:	ad a3       	std	Y+37, r26	; 0x25
    1398:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    139a:	6b a1       	ldd	r22, Y+35	; 0x23
    139c:	7c a1       	ldd	r23, Y+36	; 0x24
    139e:	8d a1       	ldd	r24, Y+37	; 0x25
    13a0:	9e a1       	ldd	r25, Y+38	; 0x26
    13a2:	20 e0       	ldi	r18, 0x00	; 0
    13a4:	30 e0       	ldi	r19, 0x00	; 0
    13a6:	40 e8       	ldi	r20, 0x80	; 128
    13a8:	5f e3       	ldi	r21, 0x3F	; 63
    13aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13ae:	88 23       	and	r24, r24
    13b0:	2c f4       	brge	.+10     	; 0x13bc <lcd_send_cmnd+0x174>
		__ticks = 1;
    13b2:	81 e0       	ldi	r24, 0x01	; 1
    13b4:	90 e0       	ldi	r25, 0x00	; 0
    13b6:	9a a3       	std	Y+34, r25	; 0x22
    13b8:	89 a3       	std	Y+33, r24	; 0x21
    13ba:	3f c0       	rjmp	.+126    	; 0x143a <lcd_send_cmnd+0x1f2>
	else if (__tmp > 65535)
    13bc:	6b a1       	ldd	r22, Y+35	; 0x23
    13be:	7c a1       	ldd	r23, Y+36	; 0x24
    13c0:	8d a1       	ldd	r24, Y+37	; 0x25
    13c2:	9e a1       	ldd	r25, Y+38	; 0x26
    13c4:	20 e0       	ldi	r18, 0x00	; 0
    13c6:	3f ef       	ldi	r19, 0xFF	; 255
    13c8:	4f e7       	ldi	r20, 0x7F	; 127
    13ca:	57 e4       	ldi	r21, 0x47	; 71
    13cc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13d0:	18 16       	cp	r1, r24
    13d2:	4c f5       	brge	.+82     	; 0x1426 <lcd_send_cmnd+0x1de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13d4:	6f a1       	ldd	r22, Y+39	; 0x27
    13d6:	78 a5       	ldd	r23, Y+40	; 0x28
    13d8:	89 a5       	ldd	r24, Y+41	; 0x29
    13da:	9a a5       	ldd	r25, Y+42	; 0x2a
    13dc:	20 e0       	ldi	r18, 0x00	; 0
    13de:	30 e0       	ldi	r19, 0x00	; 0
    13e0:	40 e2       	ldi	r20, 0x20	; 32
    13e2:	51 e4       	ldi	r21, 0x41	; 65
    13e4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13e8:	dc 01       	movw	r26, r24
    13ea:	cb 01       	movw	r24, r22
    13ec:	bc 01       	movw	r22, r24
    13ee:	cd 01       	movw	r24, r26
    13f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13f4:	dc 01       	movw	r26, r24
    13f6:	cb 01       	movw	r24, r22
    13f8:	9a a3       	std	Y+34, r25	; 0x22
    13fa:	89 a3       	std	Y+33, r24	; 0x21
    13fc:	0f c0       	rjmp	.+30     	; 0x141c <lcd_send_cmnd+0x1d4>
    13fe:	84 e6       	ldi	r24, 0x64	; 100
    1400:	90 e0       	ldi	r25, 0x00	; 0
    1402:	98 a3       	std	Y+32, r25	; 0x20
    1404:	8f 8f       	std	Y+31, r24	; 0x1f
    1406:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1408:	98 a1       	ldd	r25, Y+32	; 0x20
    140a:	01 97       	sbiw	r24, 0x01	; 1
    140c:	f1 f7       	brne	.-4      	; 0x140a <lcd_send_cmnd+0x1c2>
    140e:	98 a3       	std	Y+32, r25	; 0x20
    1410:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1412:	89 a1       	ldd	r24, Y+33	; 0x21
    1414:	9a a1       	ldd	r25, Y+34	; 0x22
    1416:	01 97       	sbiw	r24, 0x01	; 1
    1418:	9a a3       	std	Y+34, r25	; 0x22
    141a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    141c:	89 a1       	ldd	r24, Y+33	; 0x21
    141e:	9a a1       	ldd	r25, Y+34	; 0x22
    1420:	00 97       	sbiw	r24, 0x00	; 0
    1422:	69 f7       	brne	.-38     	; 0x13fe <lcd_send_cmnd+0x1b6>
    1424:	14 c0       	rjmp	.+40     	; 0x144e <lcd_send_cmnd+0x206>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1426:	6b a1       	ldd	r22, Y+35	; 0x23
    1428:	7c a1       	ldd	r23, Y+36	; 0x24
    142a:	8d a1       	ldd	r24, Y+37	; 0x25
    142c:	9e a1       	ldd	r25, Y+38	; 0x26
    142e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1432:	dc 01       	movw	r26, r24
    1434:	cb 01       	movw	r24, r22
    1436:	9a a3       	std	Y+34, r25	; 0x22
    1438:	89 a3       	std	Y+33, r24	; 0x21
    143a:	89 a1       	ldd	r24, Y+33	; 0x21
    143c:	9a a1       	ldd	r25, Y+34	; 0x22
    143e:	9e 8f       	std	Y+30, r25	; 0x1e
    1440:	8d 8f       	std	Y+29, r24	; 0x1d
    1442:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1444:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1446:	01 97       	sbiw	r24, 0x01	; 1
    1448:	f1 f7       	brne	.-4      	; 0x1446 <lcd_send_cmnd+0x1fe>
    144a:	9e 8f       	std	Y+30, r25	; 0x1e
    144c:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(100);
		WRITE_PORT_VAL(LCD_DATA_PORT ,cmnd & 0x0f);
    144e:	89 ad       	ldd	r24, Y+57	; 0x39
    1450:	98 2f       	mov	r25, r24
    1452:	9f 70       	andi	r25, 0x0F	; 15
    1454:	89 e3       	ldi	r24, 0x39	; 57
    1456:	69 2f       	mov	r22, r25
    1458:	0e 94 b1 06 	call	0xd62	; 0xd62 <WRITE_PORT_VAL>
		WRITE_PIN_LOW(LCD_DATA_PORT ,RS);
    145c:	89 e3       	ldi	r24, 0x39	; 57
    145e:	65 e0       	ldi	r22, 0x05	; 5
    1460:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
		WRITE_PIN_HIGH(LCD_DATA_PORT ,EN);
    1464:	89 e3       	ldi	r24, 0x39	; 57
    1466:	64 e0       	ldi	r22, 0x04	; 4
    1468:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
    146c:	80 e0       	ldi	r24, 0x00	; 0
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	a0 e8       	ldi	r26, 0x80	; 128
    1472:	bf e3       	ldi	r27, 0x3F	; 63
    1474:	89 8f       	std	Y+25, r24	; 0x19
    1476:	9a 8f       	std	Y+26, r25	; 0x1a
    1478:	ab 8f       	std	Y+27, r26	; 0x1b
    147a:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    147c:	69 8d       	ldd	r22, Y+25	; 0x19
    147e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1480:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1482:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1484:	20 e0       	ldi	r18, 0x00	; 0
    1486:	30 e0       	ldi	r19, 0x00	; 0
    1488:	4a e7       	ldi	r20, 0x7A	; 122
    148a:	54 e4       	ldi	r21, 0x44	; 68
    148c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1490:	dc 01       	movw	r26, r24
    1492:	cb 01       	movw	r24, r22
    1494:	8d 8b       	std	Y+21, r24	; 0x15
    1496:	9e 8b       	std	Y+22, r25	; 0x16
    1498:	af 8b       	std	Y+23, r26	; 0x17
    149a:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    149c:	6d 89       	ldd	r22, Y+21	; 0x15
    149e:	7e 89       	ldd	r23, Y+22	; 0x16
    14a0:	8f 89       	ldd	r24, Y+23	; 0x17
    14a2:	98 8d       	ldd	r25, Y+24	; 0x18
    14a4:	20 e0       	ldi	r18, 0x00	; 0
    14a6:	30 e0       	ldi	r19, 0x00	; 0
    14a8:	40 e8       	ldi	r20, 0x80	; 128
    14aa:	5f e3       	ldi	r21, 0x3F	; 63
    14ac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    14b0:	88 23       	and	r24, r24
    14b2:	2c f4       	brge	.+10     	; 0x14be <lcd_send_cmnd+0x276>
		__ticks = 1;
    14b4:	81 e0       	ldi	r24, 0x01	; 1
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	9c 8b       	std	Y+20, r25	; 0x14
    14ba:	8b 8b       	std	Y+19, r24	; 0x13
    14bc:	3f c0       	rjmp	.+126    	; 0x153c <lcd_send_cmnd+0x2f4>
	else if (__tmp > 65535)
    14be:	6d 89       	ldd	r22, Y+21	; 0x15
    14c0:	7e 89       	ldd	r23, Y+22	; 0x16
    14c2:	8f 89       	ldd	r24, Y+23	; 0x17
    14c4:	98 8d       	ldd	r25, Y+24	; 0x18
    14c6:	20 e0       	ldi	r18, 0x00	; 0
    14c8:	3f ef       	ldi	r19, 0xFF	; 255
    14ca:	4f e7       	ldi	r20, 0x7F	; 127
    14cc:	57 e4       	ldi	r21, 0x47	; 71
    14ce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    14d2:	18 16       	cp	r1, r24
    14d4:	4c f5       	brge	.+82     	; 0x1528 <lcd_send_cmnd+0x2e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14d6:	69 8d       	ldd	r22, Y+25	; 0x19
    14d8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14da:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14dc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	30 e0       	ldi	r19, 0x00	; 0
    14e2:	40 e2       	ldi	r20, 0x20	; 32
    14e4:	51 e4       	ldi	r21, 0x41	; 65
    14e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14ea:	dc 01       	movw	r26, r24
    14ec:	cb 01       	movw	r24, r22
    14ee:	bc 01       	movw	r22, r24
    14f0:	cd 01       	movw	r24, r26
    14f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14f6:	dc 01       	movw	r26, r24
    14f8:	cb 01       	movw	r24, r22
    14fa:	9c 8b       	std	Y+20, r25	; 0x14
    14fc:	8b 8b       	std	Y+19, r24	; 0x13
    14fe:	0f c0       	rjmp	.+30     	; 0x151e <lcd_send_cmnd+0x2d6>
    1500:	84 e6       	ldi	r24, 0x64	; 100
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	9a 8b       	std	Y+18, r25	; 0x12
    1506:	89 8b       	std	Y+17, r24	; 0x11
    1508:	89 89       	ldd	r24, Y+17	; 0x11
    150a:	9a 89       	ldd	r25, Y+18	; 0x12
    150c:	01 97       	sbiw	r24, 0x01	; 1
    150e:	f1 f7       	brne	.-4      	; 0x150c <lcd_send_cmnd+0x2c4>
    1510:	9a 8b       	std	Y+18, r25	; 0x12
    1512:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1514:	8b 89       	ldd	r24, Y+19	; 0x13
    1516:	9c 89       	ldd	r25, Y+20	; 0x14
    1518:	01 97       	sbiw	r24, 0x01	; 1
    151a:	9c 8b       	std	Y+20, r25	; 0x14
    151c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    151e:	8b 89       	ldd	r24, Y+19	; 0x13
    1520:	9c 89       	ldd	r25, Y+20	; 0x14
    1522:	00 97       	sbiw	r24, 0x00	; 0
    1524:	69 f7       	brne	.-38     	; 0x1500 <lcd_send_cmnd+0x2b8>
    1526:	14 c0       	rjmp	.+40     	; 0x1550 <lcd_send_cmnd+0x308>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1528:	6d 89       	ldd	r22, Y+21	; 0x15
    152a:	7e 89       	ldd	r23, Y+22	; 0x16
    152c:	8f 89       	ldd	r24, Y+23	; 0x17
    152e:	98 8d       	ldd	r25, Y+24	; 0x18
    1530:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1534:	dc 01       	movw	r26, r24
    1536:	cb 01       	movw	r24, r22
    1538:	9c 8b       	std	Y+20, r25	; 0x14
    153a:	8b 8b       	std	Y+19, r24	; 0x13
    153c:	8b 89       	ldd	r24, Y+19	; 0x13
    153e:	9c 89       	ldd	r25, Y+20	; 0x14
    1540:	98 8b       	std	Y+16, r25	; 0x10
    1542:	8f 87       	std	Y+15, r24	; 0x0f
    1544:	8f 85       	ldd	r24, Y+15	; 0x0f
    1546:	98 89       	ldd	r25, Y+16	; 0x10
    1548:	01 97       	sbiw	r24, 0x01	; 1
    154a:	f1 f7       	brne	.-4      	; 0x1548 <lcd_send_cmnd+0x300>
    154c:	98 8b       	std	Y+16, r25	; 0x10
    154e:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		WRITE_PIN_LOW(LCD_DATA_PORT ,EN);
    1550:	89 e3       	ldi	r24, 0x39	; 57
    1552:	64 e0       	ldi	r22, 0x04	; 4
    1554:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	a8 ec       	ldi	r26, 0xC8	; 200
    155e:	b2 e4       	ldi	r27, 0x42	; 66
    1560:	8b 87       	std	Y+11, r24	; 0x0b
    1562:	9c 87       	std	Y+12, r25	; 0x0c
    1564:	ad 87       	std	Y+13, r26	; 0x0d
    1566:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1568:	6b 85       	ldd	r22, Y+11	; 0x0b
    156a:	7c 85       	ldd	r23, Y+12	; 0x0c
    156c:	8d 85       	ldd	r24, Y+13	; 0x0d
    156e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1570:	20 e0       	ldi	r18, 0x00	; 0
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	4a e7       	ldi	r20, 0x7A	; 122
    1576:	54 e4       	ldi	r21, 0x44	; 68
    1578:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    157c:	dc 01       	movw	r26, r24
    157e:	cb 01       	movw	r24, r22
    1580:	8f 83       	std	Y+7, r24	; 0x07
    1582:	98 87       	std	Y+8, r25	; 0x08
    1584:	a9 87       	std	Y+9, r26	; 0x09
    1586:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1588:	6f 81       	ldd	r22, Y+7	; 0x07
    158a:	78 85       	ldd	r23, Y+8	; 0x08
    158c:	89 85       	ldd	r24, Y+9	; 0x09
    158e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1590:	20 e0       	ldi	r18, 0x00	; 0
    1592:	30 e0       	ldi	r19, 0x00	; 0
    1594:	40 e8       	ldi	r20, 0x80	; 128
    1596:	5f e3       	ldi	r21, 0x3F	; 63
    1598:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    159c:	88 23       	and	r24, r24
    159e:	2c f4       	brge	.+10     	; 0x15aa <lcd_send_cmnd+0x362>
		__ticks = 1;
    15a0:	81 e0       	ldi	r24, 0x01	; 1
    15a2:	90 e0       	ldi	r25, 0x00	; 0
    15a4:	9e 83       	std	Y+6, r25	; 0x06
    15a6:	8d 83       	std	Y+5, r24	; 0x05
    15a8:	3f c0       	rjmp	.+126    	; 0x1628 <lcd_send_cmnd+0x3e0>
	else if (__tmp > 65535)
    15aa:	6f 81       	ldd	r22, Y+7	; 0x07
    15ac:	78 85       	ldd	r23, Y+8	; 0x08
    15ae:	89 85       	ldd	r24, Y+9	; 0x09
    15b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    15b2:	20 e0       	ldi	r18, 0x00	; 0
    15b4:	3f ef       	ldi	r19, 0xFF	; 255
    15b6:	4f e7       	ldi	r20, 0x7F	; 127
    15b8:	57 e4       	ldi	r21, 0x47	; 71
    15ba:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15be:	18 16       	cp	r1, r24
    15c0:	4c f5       	brge	.+82     	; 0x1614 <lcd_send_cmnd+0x3cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15c2:	6b 85       	ldd	r22, Y+11	; 0x0b
    15c4:	7c 85       	ldd	r23, Y+12	; 0x0c
    15c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    15c8:	9e 85       	ldd	r25, Y+14	; 0x0e
    15ca:	20 e0       	ldi	r18, 0x00	; 0
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	40 e2       	ldi	r20, 0x20	; 32
    15d0:	51 e4       	ldi	r21, 0x41	; 65
    15d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15d6:	dc 01       	movw	r26, r24
    15d8:	cb 01       	movw	r24, r22
    15da:	bc 01       	movw	r22, r24
    15dc:	cd 01       	movw	r24, r26
    15de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15e2:	dc 01       	movw	r26, r24
    15e4:	cb 01       	movw	r24, r22
    15e6:	9e 83       	std	Y+6, r25	; 0x06
    15e8:	8d 83       	std	Y+5, r24	; 0x05
    15ea:	0f c0       	rjmp	.+30     	; 0x160a <lcd_send_cmnd+0x3c2>
    15ec:	84 e6       	ldi	r24, 0x64	; 100
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	9c 83       	std	Y+4, r25	; 0x04
    15f2:	8b 83       	std	Y+3, r24	; 0x03
    15f4:	8b 81       	ldd	r24, Y+3	; 0x03
    15f6:	9c 81       	ldd	r25, Y+4	; 0x04
    15f8:	01 97       	sbiw	r24, 0x01	; 1
    15fa:	f1 f7       	brne	.-4      	; 0x15f8 <lcd_send_cmnd+0x3b0>
    15fc:	9c 83       	std	Y+4, r25	; 0x04
    15fe:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1600:	8d 81       	ldd	r24, Y+5	; 0x05
    1602:	9e 81       	ldd	r25, Y+6	; 0x06
    1604:	01 97       	sbiw	r24, 0x01	; 1
    1606:	9e 83       	std	Y+6, r25	; 0x06
    1608:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    160a:	8d 81       	ldd	r24, Y+5	; 0x05
    160c:	9e 81       	ldd	r25, Y+6	; 0x06
    160e:	00 97       	sbiw	r24, 0x00	; 0
    1610:	69 f7       	brne	.-38     	; 0x15ec <lcd_send_cmnd+0x3a4>
    1612:	14 c0       	rjmp	.+40     	; 0x163c <lcd_send_cmnd+0x3f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1614:	6f 81       	ldd	r22, Y+7	; 0x07
    1616:	78 85       	ldd	r23, Y+8	; 0x08
    1618:	89 85       	ldd	r24, Y+9	; 0x09
    161a:	9a 85       	ldd	r25, Y+10	; 0x0a
    161c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	9e 83       	std	Y+6, r25	; 0x06
    1626:	8d 83       	std	Y+5, r24	; 0x05
    1628:	8d 81       	ldd	r24, Y+5	; 0x05
    162a:	9e 81       	ldd	r25, Y+6	; 0x06
    162c:	9a 83       	std	Y+2, r25	; 0x02
    162e:	89 83       	std	Y+1, r24	; 0x01
    1630:	89 81       	ldd	r24, Y+1	; 0x01
    1632:	9a 81       	ldd	r25, Y+2	; 0x02
    1634:	01 97       	sbiw	r24, 0x01	; 1
    1636:	f1 f7       	brne	.-4      	; 0x1634 <lcd_send_cmnd+0x3ec>
    1638:	9a 83       	std	Y+2, r25	; 0x02
    163a:	89 83       	std	Y+1, r24	; 0x01
	 		_delay_ms(100);
	#endif
	 
  #endif
  	
}
    163c:	e9 96       	adiw	r28, 0x39	; 57
    163e:	0f b6       	in	r0, 0x3f	; 63
    1640:	f8 94       	cli
    1642:	de bf       	out	0x3e, r29	; 62
    1644:	0f be       	out	0x3f, r0	; 63
    1646:	cd bf       	out	0x3d, r28	; 61
    1648:	cf 91       	pop	r28
    164a:	df 91       	pop	r29
    164c:	08 95       	ret

0000164e <lcd_send_ch>:
void lcd_send_ch   (uint8 ch)
{
    164e:	df 93       	push	r29
    1650:	cf 93       	push	r28
    1652:	cd b7       	in	r28, 0x3d	; 61
    1654:	de b7       	in	r29, 0x3e	; 62
    1656:	e9 97       	sbiw	r28, 0x39	; 57
    1658:	0f b6       	in	r0, 0x3f	; 63
    165a:	f8 94       	cli
    165c:	de bf       	out	0x3e, r29	; 62
    165e:	0f be       	out	0x3f, r0	; 63
    1660:	cd bf       	out	0x3d, r28	; 61
    1662:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(1);
		WRITE_PIN_LOW(LCD_CTRL_PORT ,EN);
		_delay_ms(100);	
#elif (DATA_BIT_MODE==4)
	#ifdef LOWER_PINS
		WRITE_PORT_VAL(LCD_DATA_PORT,ch>>4);
    1664:	89 ad       	ldd	r24, Y+57	; 0x39
    1666:	98 2f       	mov	r25, r24
    1668:	92 95       	swap	r25
    166a:	9f 70       	andi	r25, 0x0F	; 15
    166c:	89 e3       	ldi	r24, 0x39	; 57
    166e:	69 2f       	mov	r22, r25
    1670:	0e 94 b1 06 	call	0xd62	; 0xd62 <WRITE_PORT_VAL>
		WRITE_PIN_HIGH(LCD_DATA_PORT ,RS);
    1674:	89 e3       	ldi	r24, 0x39	; 57
    1676:	65 e0       	ldi	r22, 0x05	; 5
    1678:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
		WRITE_PIN_HIGH(LCD_DATA_PORT ,EN);
    167c:	89 e3       	ldi	r24, 0x39	; 57
    167e:	64 e0       	ldi	r22, 0x04	; 4
    1680:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	a0 e8       	ldi	r26, 0x80	; 128
    168a:	bf e3       	ldi	r27, 0x3F	; 63
    168c:	8d ab       	std	Y+53, r24	; 0x35
    168e:	9e ab       	std	Y+54, r25	; 0x36
    1690:	af ab       	std	Y+55, r26	; 0x37
    1692:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1694:	6d a9       	ldd	r22, Y+53	; 0x35
    1696:	7e a9       	ldd	r23, Y+54	; 0x36
    1698:	8f a9       	ldd	r24, Y+55	; 0x37
    169a:	98 ad       	ldd	r25, Y+56	; 0x38
    169c:	20 e0       	ldi	r18, 0x00	; 0
    169e:	30 e0       	ldi	r19, 0x00	; 0
    16a0:	4a e7       	ldi	r20, 0x7A	; 122
    16a2:	54 e4       	ldi	r21, 0x44	; 68
    16a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16a8:	dc 01       	movw	r26, r24
    16aa:	cb 01       	movw	r24, r22
    16ac:	89 ab       	std	Y+49, r24	; 0x31
    16ae:	9a ab       	std	Y+50, r25	; 0x32
    16b0:	ab ab       	std	Y+51, r26	; 0x33
    16b2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    16b4:	69 a9       	ldd	r22, Y+49	; 0x31
    16b6:	7a a9       	ldd	r23, Y+50	; 0x32
    16b8:	8b a9       	ldd	r24, Y+51	; 0x33
    16ba:	9c a9       	ldd	r25, Y+52	; 0x34
    16bc:	20 e0       	ldi	r18, 0x00	; 0
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	40 e8       	ldi	r20, 0x80	; 128
    16c2:	5f e3       	ldi	r21, 0x3F	; 63
    16c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16c8:	88 23       	and	r24, r24
    16ca:	2c f4       	brge	.+10     	; 0x16d6 <lcd_send_ch+0x88>
		__ticks = 1;
    16cc:	81 e0       	ldi	r24, 0x01	; 1
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	98 ab       	std	Y+48, r25	; 0x30
    16d2:	8f a7       	std	Y+47, r24	; 0x2f
    16d4:	3f c0       	rjmp	.+126    	; 0x1754 <lcd_send_ch+0x106>
	else if (__tmp > 65535)
    16d6:	69 a9       	ldd	r22, Y+49	; 0x31
    16d8:	7a a9       	ldd	r23, Y+50	; 0x32
    16da:	8b a9       	ldd	r24, Y+51	; 0x33
    16dc:	9c a9       	ldd	r25, Y+52	; 0x34
    16de:	20 e0       	ldi	r18, 0x00	; 0
    16e0:	3f ef       	ldi	r19, 0xFF	; 255
    16e2:	4f e7       	ldi	r20, 0x7F	; 127
    16e4:	57 e4       	ldi	r21, 0x47	; 71
    16e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16ea:	18 16       	cp	r1, r24
    16ec:	4c f5       	brge	.+82     	; 0x1740 <lcd_send_ch+0xf2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16ee:	6d a9       	ldd	r22, Y+53	; 0x35
    16f0:	7e a9       	ldd	r23, Y+54	; 0x36
    16f2:	8f a9       	ldd	r24, Y+55	; 0x37
    16f4:	98 ad       	ldd	r25, Y+56	; 0x38
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	30 e0       	ldi	r19, 0x00	; 0
    16fa:	40 e2       	ldi	r20, 0x20	; 32
    16fc:	51 e4       	ldi	r21, 0x41	; 65
    16fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1702:	dc 01       	movw	r26, r24
    1704:	cb 01       	movw	r24, r22
    1706:	bc 01       	movw	r22, r24
    1708:	cd 01       	movw	r24, r26
    170a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    170e:	dc 01       	movw	r26, r24
    1710:	cb 01       	movw	r24, r22
    1712:	98 ab       	std	Y+48, r25	; 0x30
    1714:	8f a7       	std	Y+47, r24	; 0x2f
    1716:	0f c0       	rjmp	.+30     	; 0x1736 <lcd_send_ch+0xe8>
    1718:	84 e6       	ldi	r24, 0x64	; 100
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	9e a7       	std	Y+46, r25	; 0x2e
    171e:	8d a7       	std	Y+45, r24	; 0x2d
    1720:	8d a5       	ldd	r24, Y+45	; 0x2d
    1722:	9e a5       	ldd	r25, Y+46	; 0x2e
    1724:	01 97       	sbiw	r24, 0x01	; 1
    1726:	f1 f7       	brne	.-4      	; 0x1724 <lcd_send_ch+0xd6>
    1728:	9e a7       	std	Y+46, r25	; 0x2e
    172a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    172c:	8f a5       	ldd	r24, Y+47	; 0x2f
    172e:	98 a9       	ldd	r25, Y+48	; 0x30
    1730:	01 97       	sbiw	r24, 0x01	; 1
    1732:	98 ab       	std	Y+48, r25	; 0x30
    1734:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1736:	8f a5       	ldd	r24, Y+47	; 0x2f
    1738:	98 a9       	ldd	r25, Y+48	; 0x30
    173a:	00 97       	sbiw	r24, 0x00	; 0
    173c:	69 f7       	brne	.-38     	; 0x1718 <lcd_send_ch+0xca>
    173e:	14 c0       	rjmp	.+40     	; 0x1768 <lcd_send_ch+0x11a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1740:	69 a9       	ldd	r22, Y+49	; 0x31
    1742:	7a a9       	ldd	r23, Y+50	; 0x32
    1744:	8b a9       	ldd	r24, Y+51	; 0x33
    1746:	9c a9       	ldd	r25, Y+52	; 0x34
    1748:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    174c:	dc 01       	movw	r26, r24
    174e:	cb 01       	movw	r24, r22
    1750:	98 ab       	std	Y+48, r25	; 0x30
    1752:	8f a7       	std	Y+47, r24	; 0x2f
    1754:	8f a5       	ldd	r24, Y+47	; 0x2f
    1756:	98 a9       	ldd	r25, Y+48	; 0x30
    1758:	9c a7       	std	Y+44, r25	; 0x2c
    175a:	8b a7       	std	Y+43, r24	; 0x2b
    175c:	8b a5       	ldd	r24, Y+43	; 0x2b
    175e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1760:	01 97       	sbiw	r24, 0x01	; 1
    1762:	f1 f7       	brne	.-4      	; 0x1760 <lcd_send_ch+0x112>
    1764:	9c a7       	std	Y+44, r25	; 0x2c
    1766:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(1);
		WRITE_PIN_LOW(LCD_DATA_PORT ,EN);
    1768:	89 e3       	ldi	r24, 0x39	; 57
    176a:	64 e0       	ldi	r22, 0x04	; 4
    176c:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
    1770:	80 e0       	ldi	r24, 0x00	; 0
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	a8 ec       	ldi	r26, 0xC8	; 200
    1776:	b2 e4       	ldi	r27, 0x42	; 66
    1778:	8f a3       	std	Y+39, r24	; 0x27
    177a:	98 a7       	std	Y+40, r25	; 0x28
    177c:	a9 a7       	std	Y+41, r26	; 0x29
    177e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1780:	6f a1       	ldd	r22, Y+39	; 0x27
    1782:	78 a5       	ldd	r23, Y+40	; 0x28
    1784:	89 a5       	ldd	r24, Y+41	; 0x29
    1786:	9a a5       	ldd	r25, Y+42	; 0x2a
    1788:	20 e0       	ldi	r18, 0x00	; 0
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	4a e7       	ldi	r20, 0x7A	; 122
    178e:	54 e4       	ldi	r21, 0x44	; 68
    1790:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1794:	dc 01       	movw	r26, r24
    1796:	cb 01       	movw	r24, r22
    1798:	8b a3       	std	Y+35, r24	; 0x23
    179a:	9c a3       	std	Y+36, r25	; 0x24
    179c:	ad a3       	std	Y+37, r26	; 0x25
    179e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    17a0:	6b a1       	ldd	r22, Y+35	; 0x23
    17a2:	7c a1       	ldd	r23, Y+36	; 0x24
    17a4:	8d a1       	ldd	r24, Y+37	; 0x25
    17a6:	9e a1       	ldd	r25, Y+38	; 0x26
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	40 e8       	ldi	r20, 0x80	; 128
    17ae:	5f e3       	ldi	r21, 0x3F	; 63
    17b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17b4:	88 23       	and	r24, r24
    17b6:	2c f4       	brge	.+10     	; 0x17c2 <lcd_send_ch+0x174>
		__ticks = 1;
    17b8:	81 e0       	ldi	r24, 0x01	; 1
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	9a a3       	std	Y+34, r25	; 0x22
    17be:	89 a3       	std	Y+33, r24	; 0x21
    17c0:	3f c0       	rjmp	.+126    	; 0x1840 <lcd_send_ch+0x1f2>
	else if (__tmp > 65535)
    17c2:	6b a1       	ldd	r22, Y+35	; 0x23
    17c4:	7c a1       	ldd	r23, Y+36	; 0x24
    17c6:	8d a1       	ldd	r24, Y+37	; 0x25
    17c8:	9e a1       	ldd	r25, Y+38	; 0x26
    17ca:	20 e0       	ldi	r18, 0x00	; 0
    17cc:	3f ef       	ldi	r19, 0xFF	; 255
    17ce:	4f e7       	ldi	r20, 0x7F	; 127
    17d0:	57 e4       	ldi	r21, 0x47	; 71
    17d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17d6:	18 16       	cp	r1, r24
    17d8:	4c f5       	brge	.+82     	; 0x182c <lcd_send_ch+0x1de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17da:	6f a1       	ldd	r22, Y+39	; 0x27
    17dc:	78 a5       	ldd	r23, Y+40	; 0x28
    17de:	89 a5       	ldd	r24, Y+41	; 0x29
    17e0:	9a a5       	ldd	r25, Y+42	; 0x2a
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	40 e2       	ldi	r20, 0x20	; 32
    17e8:	51 e4       	ldi	r21, 0x41	; 65
    17ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17ee:	dc 01       	movw	r26, r24
    17f0:	cb 01       	movw	r24, r22
    17f2:	bc 01       	movw	r22, r24
    17f4:	cd 01       	movw	r24, r26
    17f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17fa:	dc 01       	movw	r26, r24
    17fc:	cb 01       	movw	r24, r22
    17fe:	9a a3       	std	Y+34, r25	; 0x22
    1800:	89 a3       	std	Y+33, r24	; 0x21
    1802:	0f c0       	rjmp	.+30     	; 0x1822 <lcd_send_ch+0x1d4>
    1804:	84 e6       	ldi	r24, 0x64	; 100
    1806:	90 e0       	ldi	r25, 0x00	; 0
    1808:	98 a3       	std	Y+32, r25	; 0x20
    180a:	8f 8f       	std	Y+31, r24	; 0x1f
    180c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    180e:	98 a1       	ldd	r25, Y+32	; 0x20
    1810:	01 97       	sbiw	r24, 0x01	; 1
    1812:	f1 f7       	brne	.-4      	; 0x1810 <lcd_send_ch+0x1c2>
    1814:	98 a3       	std	Y+32, r25	; 0x20
    1816:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1818:	89 a1       	ldd	r24, Y+33	; 0x21
    181a:	9a a1       	ldd	r25, Y+34	; 0x22
    181c:	01 97       	sbiw	r24, 0x01	; 1
    181e:	9a a3       	std	Y+34, r25	; 0x22
    1820:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1822:	89 a1       	ldd	r24, Y+33	; 0x21
    1824:	9a a1       	ldd	r25, Y+34	; 0x22
    1826:	00 97       	sbiw	r24, 0x00	; 0
    1828:	69 f7       	brne	.-38     	; 0x1804 <lcd_send_ch+0x1b6>
    182a:	14 c0       	rjmp	.+40     	; 0x1854 <lcd_send_ch+0x206>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    182c:	6b a1       	ldd	r22, Y+35	; 0x23
    182e:	7c a1       	ldd	r23, Y+36	; 0x24
    1830:	8d a1       	ldd	r24, Y+37	; 0x25
    1832:	9e a1       	ldd	r25, Y+38	; 0x26
    1834:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1838:	dc 01       	movw	r26, r24
    183a:	cb 01       	movw	r24, r22
    183c:	9a a3       	std	Y+34, r25	; 0x22
    183e:	89 a3       	std	Y+33, r24	; 0x21
    1840:	89 a1       	ldd	r24, Y+33	; 0x21
    1842:	9a a1       	ldd	r25, Y+34	; 0x22
    1844:	9e 8f       	std	Y+30, r25	; 0x1e
    1846:	8d 8f       	std	Y+29, r24	; 0x1d
    1848:	8d 8d       	ldd	r24, Y+29	; 0x1d
    184a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    184c:	01 97       	sbiw	r24, 0x01	; 1
    184e:	f1 f7       	brne	.-4      	; 0x184c <lcd_send_ch+0x1fe>
    1850:	9e 8f       	std	Y+30, r25	; 0x1e
    1852:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(100);
		WRITE_PORT_VAL(LCD_DATA_PORT ,ch & 0x0f);
    1854:	89 ad       	ldd	r24, Y+57	; 0x39
    1856:	98 2f       	mov	r25, r24
    1858:	9f 70       	andi	r25, 0x0F	; 15
    185a:	89 e3       	ldi	r24, 0x39	; 57
    185c:	69 2f       	mov	r22, r25
    185e:	0e 94 b1 06 	call	0xd62	; 0xd62 <WRITE_PORT_VAL>
		WRITE_PIN_HIGH(LCD_DATA_PORT ,RS);
    1862:	89 e3       	ldi	r24, 0x39	; 57
    1864:	65 e0       	ldi	r22, 0x05	; 5
    1866:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
		WRITE_PIN_HIGH(LCD_DATA_PORT ,EN);
    186a:	89 e3       	ldi	r24, 0x39	; 57
    186c:	64 e0       	ldi	r22, 0x04	; 4
    186e:	0e 94 c4 06 	call	0xd88	; 0xd88 <WRITE_PIN_HIGH>
    1872:	80 e0       	ldi	r24, 0x00	; 0
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	a0 e8       	ldi	r26, 0x80	; 128
    1878:	bf e3       	ldi	r27, 0x3F	; 63
    187a:	89 8f       	std	Y+25, r24	; 0x19
    187c:	9a 8f       	std	Y+26, r25	; 0x1a
    187e:	ab 8f       	std	Y+27, r26	; 0x1b
    1880:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1882:	69 8d       	ldd	r22, Y+25	; 0x19
    1884:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1886:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1888:	9c 8d       	ldd	r25, Y+28	; 0x1c
    188a:	20 e0       	ldi	r18, 0x00	; 0
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	4a e7       	ldi	r20, 0x7A	; 122
    1890:	54 e4       	ldi	r21, 0x44	; 68
    1892:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1896:	dc 01       	movw	r26, r24
    1898:	cb 01       	movw	r24, r22
    189a:	8d 8b       	std	Y+21, r24	; 0x15
    189c:	9e 8b       	std	Y+22, r25	; 0x16
    189e:	af 8b       	std	Y+23, r26	; 0x17
    18a0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    18a2:	6d 89       	ldd	r22, Y+21	; 0x15
    18a4:	7e 89       	ldd	r23, Y+22	; 0x16
    18a6:	8f 89       	ldd	r24, Y+23	; 0x17
    18a8:	98 8d       	ldd	r25, Y+24	; 0x18
    18aa:	20 e0       	ldi	r18, 0x00	; 0
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	40 e8       	ldi	r20, 0x80	; 128
    18b0:	5f e3       	ldi	r21, 0x3F	; 63
    18b2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18b6:	88 23       	and	r24, r24
    18b8:	2c f4       	brge	.+10     	; 0x18c4 <lcd_send_ch+0x276>
		__ticks = 1;
    18ba:	81 e0       	ldi	r24, 0x01	; 1
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	9c 8b       	std	Y+20, r25	; 0x14
    18c0:	8b 8b       	std	Y+19, r24	; 0x13
    18c2:	3f c0       	rjmp	.+126    	; 0x1942 <lcd_send_ch+0x2f4>
	else if (__tmp > 65535)
    18c4:	6d 89       	ldd	r22, Y+21	; 0x15
    18c6:	7e 89       	ldd	r23, Y+22	; 0x16
    18c8:	8f 89       	ldd	r24, Y+23	; 0x17
    18ca:	98 8d       	ldd	r25, Y+24	; 0x18
    18cc:	20 e0       	ldi	r18, 0x00	; 0
    18ce:	3f ef       	ldi	r19, 0xFF	; 255
    18d0:	4f e7       	ldi	r20, 0x7F	; 127
    18d2:	57 e4       	ldi	r21, 0x47	; 71
    18d4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18d8:	18 16       	cp	r1, r24
    18da:	4c f5       	brge	.+82     	; 0x192e <lcd_send_ch+0x2e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18dc:	69 8d       	ldd	r22, Y+25	; 0x19
    18de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18e4:	20 e0       	ldi	r18, 0x00	; 0
    18e6:	30 e0       	ldi	r19, 0x00	; 0
    18e8:	40 e2       	ldi	r20, 0x20	; 32
    18ea:	51 e4       	ldi	r21, 0x41	; 65
    18ec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18f0:	dc 01       	movw	r26, r24
    18f2:	cb 01       	movw	r24, r22
    18f4:	bc 01       	movw	r22, r24
    18f6:	cd 01       	movw	r24, r26
    18f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18fc:	dc 01       	movw	r26, r24
    18fe:	cb 01       	movw	r24, r22
    1900:	9c 8b       	std	Y+20, r25	; 0x14
    1902:	8b 8b       	std	Y+19, r24	; 0x13
    1904:	0f c0       	rjmp	.+30     	; 0x1924 <lcd_send_ch+0x2d6>
    1906:	84 e6       	ldi	r24, 0x64	; 100
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	9a 8b       	std	Y+18, r25	; 0x12
    190c:	89 8b       	std	Y+17, r24	; 0x11
    190e:	89 89       	ldd	r24, Y+17	; 0x11
    1910:	9a 89       	ldd	r25, Y+18	; 0x12
    1912:	01 97       	sbiw	r24, 0x01	; 1
    1914:	f1 f7       	brne	.-4      	; 0x1912 <lcd_send_ch+0x2c4>
    1916:	9a 8b       	std	Y+18, r25	; 0x12
    1918:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    191a:	8b 89       	ldd	r24, Y+19	; 0x13
    191c:	9c 89       	ldd	r25, Y+20	; 0x14
    191e:	01 97       	sbiw	r24, 0x01	; 1
    1920:	9c 8b       	std	Y+20, r25	; 0x14
    1922:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1924:	8b 89       	ldd	r24, Y+19	; 0x13
    1926:	9c 89       	ldd	r25, Y+20	; 0x14
    1928:	00 97       	sbiw	r24, 0x00	; 0
    192a:	69 f7       	brne	.-38     	; 0x1906 <lcd_send_ch+0x2b8>
    192c:	14 c0       	rjmp	.+40     	; 0x1956 <lcd_send_ch+0x308>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    192e:	6d 89       	ldd	r22, Y+21	; 0x15
    1930:	7e 89       	ldd	r23, Y+22	; 0x16
    1932:	8f 89       	ldd	r24, Y+23	; 0x17
    1934:	98 8d       	ldd	r25, Y+24	; 0x18
    1936:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    193a:	dc 01       	movw	r26, r24
    193c:	cb 01       	movw	r24, r22
    193e:	9c 8b       	std	Y+20, r25	; 0x14
    1940:	8b 8b       	std	Y+19, r24	; 0x13
    1942:	8b 89       	ldd	r24, Y+19	; 0x13
    1944:	9c 89       	ldd	r25, Y+20	; 0x14
    1946:	98 8b       	std	Y+16, r25	; 0x10
    1948:	8f 87       	std	Y+15, r24	; 0x0f
    194a:	8f 85       	ldd	r24, Y+15	; 0x0f
    194c:	98 89       	ldd	r25, Y+16	; 0x10
    194e:	01 97       	sbiw	r24, 0x01	; 1
    1950:	f1 f7       	brne	.-4      	; 0x194e <lcd_send_ch+0x300>
    1952:	98 8b       	std	Y+16, r25	; 0x10
    1954:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);
		WRITE_PIN_LOW(LCD_DATA_PORT ,EN);
    1956:	89 e3       	ldi	r24, 0x39	; 57
    1958:	64 e0       	ldi	r22, 0x04	; 4
    195a:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <WRITE_PIN_LOW>
    195e:	80 e0       	ldi	r24, 0x00	; 0
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	a8 ec       	ldi	r26, 0xC8	; 200
    1964:	b2 e4       	ldi	r27, 0x42	; 66
    1966:	8b 87       	std	Y+11, r24	; 0x0b
    1968:	9c 87       	std	Y+12, r25	; 0x0c
    196a:	ad 87       	std	Y+13, r26	; 0x0d
    196c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    196e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1970:	7c 85       	ldd	r23, Y+12	; 0x0c
    1972:	8d 85       	ldd	r24, Y+13	; 0x0d
    1974:	9e 85       	ldd	r25, Y+14	; 0x0e
    1976:	20 e0       	ldi	r18, 0x00	; 0
    1978:	30 e0       	ldi	r19, 0x00	; 0
    197a:	4a e7       	ldi	r20, 0x7A	; 122
    197c:	54 e4       	ldi	r21, 0x44	; 68
    197e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1982:	dc 01       	movw	r26, r24
    1984:	cb 01       	movw	r24, r22
    1986:	8f 83       	std	Y+7, r24	; 0x07
    1988:	98 87       	std	Y+8, r25	; 0x08
    198a:	a9 87       	std	Y+9, r26	; 0x09
    198c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    198e:	6f 81       	ldd	r22, Y+7	; 0x07
    1990:	78 85       	ldd	r23, Y+8	; 0x08
    1992:	89 85       	ldd	r24, Y+9	; 0x09
    1994:	9a 85       	ldd	r25, Y+10	; 0x0a
    1996:	20 e0       	ldi	r18, 0x00	; 0
    1998:	30 e0       	ldi	r19, 0x00	; 0
    199a:	40 e8       	ldi	r20, 0x80	; 128
    199c:	5f e3       	ldi	r21, 0x3F	; 63
    199e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    19a2:	88 23       	and	r24, r24
    19a4:	2c f4       	brge	.+10     	; 0x19b0 <lcd_send_ch+0x362>
		__ticks = 1;
    19a6:	81 e0       	ldi	r24, 0x01	; 1
    19a8:	90 e0       	ldi	r25, 0x00	; 0
    19aa:	9e 83       	std	Y+6, r25	; 0x06
    19ac:	8d 83       	std	Y+5, r24	; 0x05
    19ae:	3f c0       	rjmp	.+126    	; 0x1a2e <lcd_send_ch+0x3e0>
	else if (__tmp > 65535)
    19b0:	6f 81       	ldd	r22, Y+7	; 0x07
    19b2:	78 85       	ldd	r23, Y+8	; 0x08
    19b4:	89 85       	ldd	r24, Y+9	; 0x09
    19b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    19b8:	20 e0       	ldi	r18, 0x00	; 0
    19ba:	3f ef       	ldi	r19, 0xFF	; 255
    19bc:	4f e7       	ldi	r20, 0x7F	; 127
    19be:	57 e4       	ldi	r21, 0x47	; 71
    19c0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19c4:	18 16       	cp	r1, r24
    19c6:	4c f5       	brge	.+82     	; 0x1a1a <lcd_send_ch+0x3cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19c8:	6b 85       	ldd	r22, Y+11	; 0x0b
    19ca:	7c 85       	ldd	r23, Y+12	; 0x0c
    19cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    19ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    19d0:	20 e0       	ldi	r18, 0x00	; 0
    19d2:	30 e0       	ldi	r19, 0x00	; 0
    19d4:	40 e2       	ldi	r20, 0x20	; 32
    19d6:	51 e4       	ldi	r21, 0x41	; 65
    19d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19dc:	dc 01       	movw	r26, r24
    19de:	cb 01       	movw	r24, r22
    19e0:	bc 01       	movw	r22, r24
    19e2:	cd 01       	movw	r24, r26
    19e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19e8:	dc 01       	movw	r26, r24
    19ea:	cb 01       	movw	r24, r22
    19ec:	9e 83       	std	Y+6, r25	; 0x06
    19ee:	8d 83       	std	Y+5, r24	; 0x05
    19f0:	0f c0       	rjmp	.+30     	; 0x1a10 <lcd_send_ch+0x3c2>
    19f2:	84 e6       	ldi	r24, 0x64	; 100
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	9c 83       	std	Y+4, r25	; 0x04
    19f8:	8b 83       	std	Y+3, r24	; 0x03
    19fa:	8b 81       	ldd	r24, Y+3	; 0x03
    19fc:	9c 81       	ldd	r25, Y+4	; 0x04
    19fe:	01 97       	sbiw	r24, 0x01	; 1
    1a00:	f1 f7       	brne	.-4      	; 0x19fe <lcd_send_ch+0x3b0>
    1a02:	9c 83       	std	Y+4, r25	; 0x04
    1a04:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a06:	8d 81       	ldd	r24, Y+5	; 0x05
    1a08:	9e 81       	ldd	r25, Y+6	; 0x06
    1a0a:	01 97       	sbiw	r24, 0x01	; 1
    1a0c:	9e 83       	std	Y+6, r25	; 0x06
    1a0e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a10:	8d 81       	ldd	r24, Y+5	; 0x05
    1a12:	9e 81       	ldd	r25, Y+6	; 0x06
    1a14:	00 97       	sbiw	r24, 0x00	; 0
    1a16:	69 f7       	brne	.-38     	; 0x19f2 <lcd_send_ch+0x3a4>
    1a18:	14 c0       	rjmp	.+40     	; 0x1a42 <lcd_send_ch+0x3f4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a1a:	6f 81       	ldd	r22, Y+7	; 0x07
    1a1c:	78 85       	ldd	r23, Y+8	; 0x08
    1a1e:	89 85       	ldd	r24, Y+9	; 0x09
    1a20:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	9e 83       	std	Y+6, r25	; 0x06
    1a2c:	8d 83       	std	Y+5, r24	; 0x05
    1a2e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a30:	9e 81       	ldd	r25, Y+6	; 0x06
    1a32:	9a 83       	std	Y+2, r25	; 0x02
    1a34:	89 83       	std	Y+1, r24	; 0x01
    1a36:	89 81       	ldd	r24, Y+1	; 0x01
    1a38:	9a 81       	ldd	r25, Y+2	; 0x02
    1a3a:	01 97       	sbiw	r24, 0x01	; 1
    1a3c:	f1 f7       	brne	.-4      	; 0x1a3a <lcd_send_ch+0x3ec>
    1a3e:	9a 83       	std	Y+2, r25	; 0x02
    1a40:	89 83       	std	Y+1, r24	; 0x01
		WRITE_PIN_LOW(LCD_DATA_PORT ,EN);
		_delay_ms(100);				
		#endif
			
#endif	
}
    1a42:	e9 96       	adiw	r28, 0x39	; 57
    1a44:	0f b6       	in	r0, 0x3f	; 63
    1a46:	f8 94       	cli
    1a48:	de bf       	out	0x3e, r29	; 62
    1a4a:	0f be       	out	0x3f, r0	; 63
    1a4c:	cd bf       	out	0x3d, r28	; 61
    1a4e:	cf 91       	pop	r28
    1a50:	df 91       	pop	r29
    1a52:	08 95       	ret

00001a54 <lcd_send_str>:
void lcd_send_str  (uint8 str[])
{
    1a54:	df 93       	push	r29
    1a56:	cf 93       	push	r28
    1a58:	00 d0       	rcall	.+0      	; 0x1a5a <lcd_send_str+0x6>
    1a5a:	0f 92       	push	r0
    1a5c:	cd b7       	in	r28, 0x3d	; 61
    1a5e:	de b7       	in	r29, 0x3e	; 62
    1a60:	9b 83       	std	Y+3, r25	; 0x03
    1a62:	8a 83       	std	Y+2, r24	; 0x02
	uint8 i =0;
    1a64:	19 82       	std	Y+1, r1	; 0x01
    1a66:	0e c0       	rjmp	.+28     	; 0x1a84 <lcd_send_str+0x30>
	while(str [i] !=0)
	{
		lcd_send_ch(str[i]);
    1a68:	89 81       	ldd	r24, Y+1	; 0x01
    1a6a:	28 2f       	mov	r18, r24
    1a6c:	30 e0       	ldi	r19, 0x00	; 0
    1a6e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a70:	9b 81       	ldd	r25, Y+3	; 0x03
    1a72:	fc 01       	movw	r30, r24
    1a74:	e2 0f       	add	r30, r18
    1a76:	f3 1f       	adc	r31, r19
    1a78:	80 81       	ld	r24, Z
    1a7a:	0e 94 27 0b 	call	0x164e	; 0x164e <lcd_send_ch>
		i++;
    1a7e:	89 81       	ldd	r24, Y+1	; 0x01
    1a80:	8f 5f       	subi	r24, 0xFF	; 255
    1a82:	89 83       	std	Y+1, r24	; 0x01
#endif	
}
void lcd_send_str  (uint8 str[])
{
	uint8 i =0;
	while(str [i] !=0)
    1a84:	89 81       	ldd	r24, Y+1	; 0x01
    1a86:	28 2f       	mov	r18, r24
    1a88:	30 e0       	ldi	r19, 0x00	; 0
    1a8a:	8a 81       	ldd	r24, Y+2	; 0x02
    1a8c:	9b 81       	ldd	r25, Y+3	; 0x03
    1a8e:	fc 01       	movw	r30, r24
    1a90:	e2 0f       	add	r30, r18
    1a92:	f3 1f       	adc	r31, r19
    1a94:	80 81       	ld	r24, Z
    1a96:	88 23       	and	r24, r24
    1a98:	39 f7       	brne	.-50     	; 0x1a68 <lcd_send_str+0x14>
	{
		lcd_send_ch(str[i]);
		i++;
	}
}
    1a9a:	0f 90       	pop	r0
    1a9c:	0f 90       	pop	r0
    1a9e:	0f 90       	pop	r0
    1aa0:	cf 91       	pop	r28
    1aa2:	df 91       	pop	r29
    1aa4:	08 95       	ret

00001aa6 <lcd_goto_xy>:
void lcd_goto_xy   (uint8 x, uint8 y)
{
    1aa6:	df 93       	push	r29
    1aa8:	cf 93       	push	r28
    1aaa:	cd b7       	in	r28, 0x3d	; 61
    1aac:	de b7       	in	r29, 0x3e	; 62
    1aae:	64 97       	sbiw	r28, 0x14	; 20
    1ab0:	0f b6       	in	r0, 0x3f	; 63
    1ab2:	f8 94       	cli
    1ab4:	de bf       	out	0x3e, r29	; 62
    1ab6:	0f be       	out	0x3f, r0	; 63
    1ab8:	cd bf       	out	0x3d, r28	; 61
    1aba:	8b 8b       	std	Y+19, r24	; 0x13
    1abc:	6c 8b       	std	Y+20, r22	; 0x14
	uint8 first_char_adr[] = {0x80, 0xC0, 0x94, 0xD4};
    1abe:	80 e8       	ldi	r24, 0x80	; 128
    1ac0:	8f 87       	std	Y+15, r24	; 0x0f
    1ac2:	80 ec       	ldi	r24, 0xC0	; 192
    1ac4:	88 8b       	std	Y+16, r24	; 0x10
    1ac6:	84 e9       	ldi	r24, 0x94	; 148
    1ac8:	89 8b       	std	Y+17, r24	; 0x11
    1aca:	84 ed       	ldi	r24, 0xD4	; 212
    1acc:	8a 8b       	std	Y+18, r24	; 0x12
	lcd_send_cmnd(first_char_adr[y-1]+x-1);
    1ace:	8c 89       	ldd	r24, Y+20	; 0x14
    1ad0:	88 2f       	mov	r24, r24
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	9c 01       	movw	r18, r24
    1ad6:	21 50       	subi	r18, 0x01	; 1
    1ad8:	30 40       	sbci	r19, 0x00	; 0
    1ada:	ce 01       	movw	r24, r28
    1adc:	0f 96       	adiw	r24, 0x0f	; 15
    1ade:	fc 01       	movw	r30, r24
    1ae0:	e2 0f       	add	r30, r18
    1ae2:	f3 1f       	adc	r31, r19
    1ae4:	90 81       	ld	r25, Z
    1ae6:	8b 89       	ldd	r24, Y+19	; 0x13
    1ae8:	89 0f       	add	r24, r25
    1aea:	81 50       	subi	r24, 0x01	; 1
    1aec:	0e 94 24 09 	call	0x1248	; 0x1248 <lcd_send_cmnd>
    1af0:	80 e0       	ldi	r24, 0x00	; 0
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	a8 ec       	ldi	r26, 0xC8	; 200
    1af6:	b2 e4       	ldi	r27, 0x42	; 66
    1af8:	8b 87       	std	Y+11, r24	; 0x0b
    1afa:	9c 87       	std	Y+12, r25	; 0x0c
    1afc:	ad 87       	std	Y+13, r26	; 0x0d
    1afe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b00:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b02:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b04:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b06:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b08:	20 e0       	ldi	r18, 0x00	; 0
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	4a e7       	ldi	r20, 0x7A	; 122
    1b0e:	54 e4       	ldi	r21, 0x44	; 68
    1b10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b14:	dc 01       	movw	r26, r24
    1b16:	cb 01       	movw	r24, r22
    1b18:	8f 83       	std	Y+7, r24	; 0x07
    1b1a:	98 87       	std	Y+8, r25	; 0x08
    1b1c:	a9 87       	std	Y+9, r26	; 0x09
    1b1e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1b20:	6f 81       	ldd	r22, Y+7	; 0x07
    1b22:	78 85       	ldd	r23, Y+8	; 0x08
    1b24:	89 85       	ldd	r24, Y+9	; 0x09
    1b26:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b28:	20 e0       	ldi	r18, 0x00	; 0
    1b2a:	30 e0       	ldi	r19, 0x00	; 0
    1b2c:	40 e8       	ldi	r20, 0x80	; 128
    1b2e:	5f e3       	ldi	r21, 0x3F	; 63
    1b30:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b34:	88 23       	and	r24, r24
    1b36:	2c f4       	brge	.+10     	; 0x1b42 <lcd_goto_xy+0x9c>
		__ticks = 1;
    1b38:	81 e0       	ldi	r24, 0x01	; 1
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	9e 83       	std	Y+6, r25	; 0x06
    1b3e:	8d 83       	std	Y+5, r24	; 0x05
    1b40:	3f c0       	rjmp	.+126    	; 0x1bc0 <lcd_goto_xy+0x11a>
	else if (__tmp > 65535)
    1b42:	6f 81       	ldd	r22, Y+7	; 0x07
    1b44:	78 85       	ldd	r23, Y+8	; 0x08
    1b46:	89 85       	ldd	r24, Y+9	; 0x09
    1b48:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b4a:	20 e0       	ldi	r18, 0x00	; 0
    1b4c:	3f ef       	ldi	r19, 0xFF	; 255
    1b4e:	4f e7       	ldi	r20, 0x7F	; 127
    1b50:	57 e4       	ldi	r21, 0x47	; 71
    1b52:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b56:	18 16       	cp	r1, r24
    1b58:	4c f5       	brge	.+82     	; 0x1bac <lcd_goto_xy+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b5a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b5c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b5e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b60:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b62:	20 e0       	ldi	r18, 0x00	; 0
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	40 e2       	ldi	r20, 0x20	; 32
    1b68:	51 e4       	ldi	r21, 0x41	; 65
    1b6a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b6e:	dc 01       	movw	r26, r24
    1b70:	cb 01       	movw	r24, r22
    1b72:	bc 01       	movw	r22, r24
    1b74:	cd 01       	movw	r24, r26
    1b76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b7a:	dc 01       	movw	r26, r24
    1b7c:	cb 01       	movw	r24, r22
    1b7e:	9e 83       	std	Y+6, r25	; 0x06
    1b80:	8d 83       	std	Y+5, r24	; 0x05
    1b82:	0f c0       	rjmp	.+30     	; 0x1ba2 <lcd_goto_xy+0xfc>
    1b84:	84 e6       	ldi	r24, 0x64	; 100
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	9c 83       	std	Y+4, r25	; 0x04
    1b8a:	8b 83       	std	Y+3, r24	; 0x03
    1b8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b8e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b90:	01 97       	sbiw	r24, 0x01	; 1
    1b92:	f1 f7       	brne	.-4      	; 0x1b90 <lcd_goto_xy+0xea>
    1b94:	9c 83       	std	Y+4, r25	; 0x04
    1b96:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b98:	8d 81       	ldd	r24, Y+5	; 0x05
    1b9a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b9c:	01 97       	sbiw	r24, 0x01	; 1
    1b9e:	9e 83       	std	Y+6, r25	; 0x06
    1ba0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ba2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ba4:	9e 81       	ldd	r25, Y+6	; 0x06
    1ba6:	00 97       	sbiw	r24, 0x00	; 0
    1ba8:	69 f7       	brne	.-38     	; 0x1b84 <lcd_goto_xy+0xde>
    1baa:	14 c0       	rjmp	.+40     	; 0x1bd4 <lcd_goto_xy+0x12e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bac:	6f 81       	ldd	r22, Y+7	; 0x07
    1bae:	78 85       	ldd	r23, Y+8	; 0x08
    1bb0:	89 85       	ldd	r24, Y+9	; 0x09
    1bb2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1bb4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bb8:	dc 01       	movw	r26, r24
    1bba:	cb 01       	movw	r24, r22
    1bbc:	9e 83       	std	Y+6, r25	; 0x06
    1bbe:	8d 83       	std	Y+5, r24	; 0x05
    1bc0:	8d 81       	ldd	r24, Y+5	; 0x05
    1bc2:	9e 81       	ldd	r25, Y+6	; 0x06
    1bc4:	9a 83       	std	Y+2, r25	; 0x02
    1bc6:	89 83       	std	Y+1, r24	; 0x01
    1bc8:	89 81       	ldd	r24, Y+1	; 0x01
    1bca:	9a 81       	ldd	r25, Y+2	; 0x02
    1bcc:	01 97       	sbiw	r24, 0x01	; 1
    1bce:	f1 f7       	brne	.-4      	; 0x1bcc <lcd_goto_xy+0x126>
    1bd0:	9a 83       	std	Y+2, r25	; 0x02
    1bd2:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(100);	
}
    1bd4:	64 96       	adiw	r28, 0x14	; 20
    1bd6:	0f b6       	in	r0, 0x3f	; 63
    1bd8:	f8 94       	cli
    1bda:	de bf       	out	0x3e, r29	; 62
    1bdc:	0f be       	out	0x3f, r0	; 63
    1bde:	cd bf       	out	0x3d, r28	; 61
    1be0:	cf 91       	pop	r28
    1be2:	df 91       	pop	r29
    1be4:	08 95       	ret

00001be6 <lcd_send_num>:


void lcd_send_num(int num)
{
    1be6:	df 93       	push	r29
    1be8:	cf 93       	push	r28
    1bea:	00 d0       	rcall	.+0      	; 0x1bec <lcd_send_num+0x6>
    1bec:	00 d0       	rcall	.+0      	; 0x1bee <lcd_send_num+0x8>
    1bee:	00 d0       	rcall	.+0      	; 0x1bf0 <lcd_send_num+0xa>
    1bf0:	cd b7       	in	r28, 0x3d	; 61
    1bf2:	de b7       	in	r29, 0x3e	; 62
    1bf4:	9e 83       	std	Y+6, r25	; 0x06
    1bf6:	8d 83       	std	Y+5, r24	; 0x05
	char s[4];
	sprintf(s,"%d",num);
    1bf8:	00 d0       	rcall	.+0      	; 0x1bfa <lcd_send_num+0x14>
    1bfa:	00 d0       	rcall	.+0      	; 0x1bfc <lcd_send_num+0x16>
    1bfc:	00 d0       	rcall	.+0      	; 0x1bfe <lcd_send_num+0x18>
    1bfe:	ed b7       	in	r30, 0x3d	; 61
    1c00:	fe b7       	in	r31, 0x3e	; 62
    1c02:	31 96       	adiw	r30, 0x01	; 1
    1c04:	ce 01       	movw	r24, r28
    1c06:	01 96       	adiw	r24, 0x01	; 1
    1c08:	91 83       	std	Z+1, r25	; 0x01
    1c0a:	80 83       	st	Z, r24
    1c0c:	80 e6       	ldi	r24, 0x60	; 96
    1c0e:	90 e0       	ldi	r25, 0x00	; 0
    1c10:	93 83       	std	Z+3, r25	; 0x03
    1c12:	82 83       	std	Z+2, r24	; 0x02
    1c14:	8d 81       	ldd	r24, Y+5	; 0x05
    1c16:	9e 81       	ldd	r25, Y+6	; 0x06
    1c18:	95 83       	std	Z+5, r25	; 0x05
    1c1a:	84 83       	std	Z+4, r24	; 0x04
    1c1c:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <sprintf>
    1c20:	8d b7       	in	r24, 0x3d	; 61
    1c22:	9e b7       	in	r25, 0x3e	; 62
    1c24:	06 96       	adiw	r24, 0x06	; 6
    1c26:	0f b6       	in	r0, 0x3f	; 63
    1c28:	f8 94       	cli
    1c2a:	9e bf       	out	0x3e, r25	; 62
    1c2c:	0f be       	out	0x3f, r0	; 63
    1c2e:	8d bf       	out	0x3d, r24	; 61
	lcd_send_str(s);
    1c30:	ce 01       	movw	r24, r28
    1c32:	01 96       	adiw	r24, 0x01	; 1
    1c34:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <lcd_send_str>
}
    1c38:	26 96       	adiw	r28, 0x06	; 6
    1c3a:	0f b6       	in	r0, 0x3f	; 63
    1c3c:	f8 94       	cli
    1c3e:	de bf       	out	0x3e, r29	; 62
    1c40:	0f be       	out	0x3f, r0	; 63
    1c42:	cd bf       	out	0x3d, r28	; 61
    1c44:	cf 91       	pop	r28
    1c46:	df 91       	pop	r29
    1c48:	08 95       	ret

00001c4a <lcd_send_float>:

void lcd_send_float(float num)
{
    1c4a:	df 93       	push	r29
    1c4c:	cf 93       	push	r28
    1c4e:	cd b7       	in	r28, 0x3d	; 61
    1c50:	de b7       	in	r29, 0x3e	; 62
    1c52:	2e 97       	sbiw	r28, 0x0e	; 14
    1c54:	0f b6       	in	r0, 0x3f	; 63
    1c56:	f8 94       	cli
    1c58:	de bf       	out	0x3e, r29	; 62
    1c5a:	0f be       	out	0x3f, r0	; 63
    1c5c:	cd bf       	out	0x3d, r28	; 61
    1c5e:	6b 87       	std	Y+11, r22	; 0x0b
    1c60:	7c 87       	std	Y+12, r23	; 0x0c
    1c62:	8d 87       	std	Y+13, r24	; 0x0d
    1c64:	9e 87       	std	Y+14, r25	; 0x0e
	char s[6];
	int inte ,frac;
	inte = (int) num;
    1c66:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c68:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c6e:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
    1c72:	dc 01       	movw	r26, r24
    1c74:	cb 01       	movw	r24, r22
    1c76:	9c 83       	std	Y+4, r25	; 0x04
    1c78:	8b 83       	std	Y+3, r24	; 0x03
	frac = (int)((num - inte)*10000);
    1c7a:	8b 81       	ldd	r24, Y+3	; 0x03
    1c7c:	9c 81       	ldd	r25, Y+4	; 0x04
    1c7e:	aa 27       	eor	r26, r26
    1c80:	97 fd       	sbrc	r25, 7
    1c82:	a0 95       	com	r26
    1c84:	ba 2f       	mov	r27, r26
    1c86:	bc 01       	movw	r22, r24
    1c88:	cd 01       	movw	r24, r26
    1c8a:	0e 94 a1 03 	call	0x742	; 0x742 <__floatsisf>
    1c8e:	9b 01       	movw	r18, r22
    1c90:	ac 01       	movw	r20, r24
    1c92:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c94:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c96:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c98:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c9a:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
    1c9e:	dc 01       	movw	r26, r24
    1ca0:	cb 01       	movw	r24, r22
    1ca2:	bc 01       	movw	r22, r24
    1ca4:	cd 01       	movw	r24, r26
    1ca6:	20 e0       	ldi	r18, 0x00	; 0
    1ca8:	30 e4       	ldi	r19, 0x40	; 64
    1caa:	4c e1       	ldi	r20, 0x1C	; 28
    1cac:	56 e4       	ldi	r21, 0x46	; 70
    1cae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cb2:	dc 01       	movw	r26, r24
    1cb4:	cb 01       	movw	r24, r22
    1cb6:	bc 01       	movw	r22, r24
    1cb8:	cd 01       	movw	r24, r26
    1cba:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__fixsfsi>
    1cbe:	dc 01       	movw	r26, r24
    1cc0:	cb 01       	movw	r24, r22
    1cc2:	9a 83       	std	Y+2, r25	; 0x02
    1cc4:	89 83       	std	Y+1, r24	; 0x01
	sprintf(s,"%d.%d",inte ,frac);
    1cc6:	8d b7       	in	r24, 0x3d	; 61
    1cc8:	9e b7       	in	r25, 0x3e	; 62
    1cca:	08 97       	sbiw	r24, 0x08	; 8
    1ccc:	0f b6       	in	r0, 0x3f	; 63
    1cce:	f8 94       	cli
    1cd0:	9e bf       	out	0x3e, r25	; 62
    1cd2:	0f be       	out	0x3f, r0	; 63
    1cd4:	8d bf       	out	0x3d, r24	; 61
    1cd6:	ed b7       	in	r30, 0x3d	; 61
    1cd8:	fe b7       	in	r31, 0x3e	; 62
    1cda:	31 96       	adiw	r30, 0x01	; 1
    1cdc:	ce 01       	movw	r24, r28
    1cde:	05 96       	adiw	r24, 0x05	; 5
    1ce0:	91 83       	std	Z+1, r25	; 0x01
    1ce2:	80 83       	st	Z, r24
    1ce4:	83 e6       	ldi	r24, 0x63	; 99
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	93 83       	std	Z+3, r25	; 0x03
    1cea:	82 83       	std	Z+2, r24	; 0x02
    1cec:	8b 81       	ldd	r24, Y+3	; 0x03
    1cee:	9c 81       	ldd	r25, Y+4	; 0x04
    1cf0:	95 83       	std	Z+5, r25	; 0x05
    1cf2:	84 83       	std	Z+4, r24	; 0x04
    1cf4:	89 81       	ldd	r24, Y+1	; 0x01
    1cf6:	9a 81       	ldd	r25, Y+2	; 0x02
    1cf8:	97 83       	std	Z+7, r25	; 0x07
    1cfa:	86 83       	std	Z+6, r24	; 0x06
    1cfc:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <sprintf>
    1d00:	8d b7       	in	r24, 0x3d	; 61
    1d02:	9e b7       	in	r25, 0x3e	; 62
    1d04:	08 96       	adiw	r24, 0x08	; 8
    1d06:	0f b6       	in	r0, 0x3f	; 63
    1d08:	f8 94       	cli
    1d0a:	9e bf       	out	0x3e, r25	; 62
    1d0c:	0f be       	out	0x3f, r0	; 63
    1d0e:	8d bf       	out	0x3d, r24	; 61
	lcd_send_str(s);
    1d10:	ce 01       	movw	r24, r28
    1d12:	05 96       	adiw	r24, 0x05	; 5
    1d14:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <lcd_send_str>
}
    1d18:	2e 96       	adiw	r28, 0x0e	; 14
    1d1a:	0f b6       	in	r0, 0x3f	; 63
    1d1c:	f8 94       	cli
    1d1e:	de bf       	out	0x3e, r29	; 62
    1d20:	0f be       	out	0x3f, r0	; 63
    1d22:	cd bf       	out	0x3d, r28	; 61
    1d24:	cf 91       	pop	r28
    1d26:	df 91       	pop	r29
    1d28:	08 95       	ret

00001d2a <main>:
#include <avr/io.h>
#include <util/delay.h>
#include "E:\A WORK\my_drivers\lcd\lcd.h"
#include"keypad.h"
int main()
{
    1d2a:	df 93       	push	r29
    1d2c:	cf 93       	push	r28
    1d2e:	cd b7       	in	r28, 0x3d	; 61
    1d30:	de b7       	in	r29, 0x3e	; 62

	DDRB=255;
    1d32:	e7 e3       	ldi	r30, 0x37	; 55
    1d34:	f0 e0       	ldi	r31, 0x00	; 0
    1d36:	8f ef       	ldi	r24, 0xFF	; 255
    1d38:	80 83       	st	Z, r24

	lcd_init();
    1d3a:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <lcd_init>
	keypad_init();
    1d3e:	0e 94 3a 07 	call	0xe74	; 0xe74 <keypad_init>
	lcd_goto_xy(1,1);
    1d42:	81 e0       	ldi	r24, 0x01	; 1
    1d44:	61 e0       	ldi	r22, 0x01	; 1
    1d46:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <lcd_goto_xy>
	lcd_send_str("hellow to you");
    1d4a:	89 e6       	ldi	r24, 0x69	; 105
    1d4c:	90 e0       	ldi	r25, 0x00	; 0
    1d4e:	0e 94 2a 0d 	call	0x1a54	; 0x1a54 <lcd_send_str>
	lcd_goto_xy(1,2);
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	62 e0       	ldi	r22, 0x02	; 2
    1d56:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <lcd_goto_xy>
	while(1)
	{
		lcd_send_ch(keypad_get_key());
    1d5a:	0e 94 6d 07 	call	0xeda	; 0xeda <keypad_get_key>
    1d5e:	0e 94 27 0b 	call	0x164e	; 0x164e <lcd_send_ch>
		lcd_goto_xy(1,2);
    1d62:	81 e0       	ldi	r24, 0x01	; 1
    1d64:	62 e0       	ldi	r22, 0x02	; 2
    1d66:	0e 94 53 0d 	call	0x1aa6	; 0x1aa6 <lcd_goto_xy>
    1d6a:	f7 cf       	rjmp	.-18     	; 0x1d5a <main+0x30>

00001d6c <__prologue_saves__>:
    1d6c:	2f 92       	push	r2
    1d6e:	3f 92       	push	r3
    1d70:	4f 92       	push	r4
    1d72:	5f 92       	push	r5
    1d74:	6f 92       	push	r6
    1d76:	7f 92       	push	r7
    1d78:	8f 92       	push	r8
    1d7a:	9f 92       	push	r9
    1d7c:	af 92       	push	r10
    1d7e:	bf 92       	push	r11
    1d80:	cf 92       	push	r12
    1d82:	df 92       	push	r13
    1d84:	ef 92       	push	r14
    1d86:	ff 92       	push	r15
    1d88:	0f 93       	push	r16
    1d8a:	1f 93       	push	r17
    1d8c:	cf 93       	push	r28
    1d8e:	df 93       	push	r29
    1d90:	cd b7       	in	r28, 0x3d	; 61
    1d92:	de b7       	in	r29, 0x3e	; 62
    1d94:	ca 1b       	sub	r28, r26
    1d96:	db 0b       	sbc	r29, r27
    1d98:	0f b6       	in	r0, 0x3f	; 63
    1d9a:	f8 94       	cli
    1d9c:	de bf       	out	0x3e, r29	; 62
    1d9e:	0f be       	out	0x3f, r0	; 63
    1da0:	cd bf       	out	0x3d, r28	; 61
    1da2:	09 94       	ijmp

00001da4 <__epilogue_restores__>:
    1da4:	2a 88       	ldd	r2, Y+18	; 0x12
    1da6:	39 88       	ldd	r3, Y+17	; 0x11
    1da8:	48 88       	ldd	r4, Y+16	; 0x10
    1daa:	5f 84       	ldd	r5, Y+15	; 0x0f
    1dac:	6e 84       	ldd	r6, Y+14	; 0x0e
    1dae:	7d 84       	ldd	r7, Y+13	; 0x0d
    1db0:	8c 84       	ldd	r8, Y+12	; 0x0c
    1db2:	9b 84       	ldd	r9, Y+11	; 0x0b
    1db4:	aa 84       	ldd	r10, Y+10	; 0x0a
    1db6:	b9 84       	ldd	r11, Y+9	; 0x09
    1db8:	c8 84       	ldd	r12, Y+8	; 0x08
    1dba:	df 80       	ldd	r13, Y+7	; 0x07
    1dbc:	ee 80       	ldd	r14, Y+6	; 0x06
    1dbe:	fd 80       	ldd	r15, Y+5	; 0x05
    1dc0:	0c 81       	ldd	r16, Y+4	; 0x04
    1dc2:	1b 81       	ldd	r17, Y+3	; 0x03
    1dc4:	aa 81       	ldd	r26, Y+2	; 0x02
    1dc6:	b9 81       	ldd	r27, Y+1	; 0x01
    1dc8:	ce 0f       	add	r28, r30
    1dca:	d1 1d       	adc	r29, r1
    1dcc:	0f b6       	in	r0, 0x3f	; 63
    1dce:	f8 94       	cli
    1dd0:	de bf       	out	0x3e, r29	; 62
    1dd2:	0f be       	out	0x3f, r0	; 63
    1dd4:	cd bf       	out	0x3d, r28	; 61
    1dd6:	ed 01       	movw	r28, r26
    1dd8:	08 95       	ret

00001dda <sprintf>:
    1dda:	ae e0       	ldi	r26, 0x0E	; 14
    1ddc:	b0 e0       	ldi	r27, 0x00	; 0
    1dde:	e3 ef       	ldi	r30, 0xF3	; 243
    1de0:	fe e0       	ldi	r31, 0x0E	; 14
    1de2:	0c 94 c4 0e 	jmp	0x1d88	; 0x1d88 <__prologue_saves__+0x1c>
    1de6:	0d 89       	ldd	r16, Y+21	; 0x15
    1de8:	1e 89       	ldd	r17, Y+22	; 0x16
    1dea:	86 e0       	ldi	r24, 0x06	; 6
    1dec:	8c 83       	std	Y+4, r24	; 0x04
    1dee:	1a 83       	std	Y+2, r17	; 0x02
    1df0:	09 83       	std	Y+1, r16	; 0x01
    1df2:	8f ef       	ldi	r24, 0xFF	; 255
    1df4:	9f e7       	ldi	r25, 0x7F	; 127
    1df6:	9e 83       	std	Y+6, r25	; 0x06
    1df8:	8d 83       	std	Y+5, r24	; 0x05
    1dfa:	9e 01       	movw	r18, r28
    1dfc:	27 5e       	subi	r18, 0xE7	; 231
    1dfe:	3f 4f       	sbci	r19, 0xFF	; 255
    1e00:	ce 01       	movw	r24, r28
    1e02:	01 96       	adiw	r24, 0x01	; 1
    1e04:	6f 89       	ldd	r22, Y+23	; 0x17
    1e06:	78 8d       	ldd	r23, Y+24	; 0x18
    1e08:	a9 01       	movw	r20, r18
    1e0a:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <vfprintf>
    1e0e:	2f 81       	ldd	r18, Y+7	; 0x07
    1e10:	38 85       	ldd	r19, Y+8	; 0x08
    1e12:	02 0f       	add	r16, r18
    1e14:	13 1f       	adc	r17, r19
    1e16:	f8 01       	movw	r30, r16
    1e18:	10 82       	st	Z, r1
    1e1a:	2e 96       	adiw	r28, 0x0e	; 14
    1e1c:	e4 e0       	ldi	r30, 0x04	; 4
    1e1e:	0c 94 e0 0e 	jmp	0x1dc0	; 0x1dc0 <__epilogue_restores__+0x1c>

00001e22 <vfprintf>:
    1e22:	ab e0       	ldi	r26, 0x0B	; 11
    1e24:	b0 e0       	ldi	r27, 0x00	; 0
    1e26:	e7 e1       	ldi	r30, 0x17	; 23
    1e28:	ff e0       	ldi	r31, 0x0F	; 15
    1e2a:	0c 94 b6 0e 	jmp	0x1d6c	; 0x1d6c <__prologue_saves__>
    1e2e:	3c 01       	movw	r6, r24
    1e30:	2b 01       	movw	r4, r22
    1e32:	5a 01       	movw	r10, r20
    1e34:	fc 01       	movw	r30, r24
    1e36:	17 82       	std	Z+7, r1	; 0x07
    1e38:	16 82       	std	Z+6, r1	; 0x06
    1e3a:	83 81       	ldd	r24, Z+3	; 0x03
    1e3c:	81 fd       	sbrc	r24, 1
    1e3e:	03 c0       	rjmp	.+6      	; 0x1e46 <vfprintf+0x24>
    1e40:	6f ef       	ldi	r22, 0xFF	; 255
    1e42:	7f ef       	ldi	r23, 0xFF	; 255
    1e44:	c6 c1       	rjmp	.+908    	; 0x21d2 <vfprintf+0x3b0>
    1e46:	9a e0       	ldi	r25, 0x0A	; 10
    1e48:	89 2e       	mov	r8, r25
    1e4a:	1e 01       	movw	r2, r28
    1e4c:	08 94       	sec
    1e4e:	21 1c       	adc	r2, r1
    1e50:	31 1c       	adc	r3, r1
    1e52:	f3 01       	movw	r30, r6
    1e54:	23 81       	ldd	r18, Z+3	; 0x03
    1e56:	f2 01       	movw	r30, r4
    1e58:	23 fd       	sbrc	r18, 3
    1e5a:	85 91       	lpm	r24, Z+
    1e5c:	23 ff       	sbrs	r18, 3
    1e5e:	81 91       	ld	r24, Z+
    1e60:	2f 01       	movw	r4, r30
    1e62:	88 23       	and	r24, r24
    1e64:	09 f4       	brne	.+2      	; 0x1e68 <vfprintf+0x46>
    1e66:	b2 c1       	rjmp	.+868    	; 0x21cc <vfprintf+0x3aa>
    1e68:	85 32       	cpi	r24, 0x25	; 37
    1e6a:	39 f4       	brne	.+14     	; 0x1e7a <vfprintf+0x58>
    1e6c:	23 fd       	sbrc	r18, 3
    1e6e:	85 91       	lpm	r24, Z+
    1e70:	23 ff       	sbrs	r18, 3
    1e72:	81 91       	ld	r24, Z+
    1e74:	2f 01       	movw	r4, r30
    1e76:	85 32       	cpi	r24, 0x25	; 37
    1e78:	29 f4       	brne	.+10     	; 0x1e84 <vfprintf+0x62>
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	b3 01       	movw	r22, r6
    1e7e:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    1e82:	e7 cf       	rjmp	.-50     	; 0x1e52 <vfprintf+0x30>
    1e84:	98 2f       	mov	r25, r24
    1e86:	ff 24       	eor	r15, r15
    1e88:	ee 24       	eor	r14, r14
    1e8a:	99 24       	eor	r9, r9
    1e8c:	ff e1       	ldi	r31, 0x1F	; 31
    1e8e:	ff 15       	cp	r31, r15
    1e90:	d0 f0       	brcs	.+52     	; 0x1ec6 <vfprintf+0xa4>
    1e92:	9b 32       	cpi	r25, 0x2B	; 43
    1e94:	69 f0       	breq	.+26     	; 0x1eb0 <vfprintf+0x8e>
    1e96:	9c 32       	cpi	r25, 0x2C	; 44
    1e98:	28 f4       	brcc	.+10     	; 0x1ea4 <vfprintf+0x82>
    1e9a:	90 32       	cpi	r25, 0x20	; 32
    1e9c:	59 f0       	breq	.+22     	; 0x1eb4 <vfprintf+0x92>
    1e9e:	93 32       	cpi	r25, 0x23	; 35
    1ea0:	91 f4       	brne	.+36     	; 0x1ec6 <vfprintf+0xa4>
    1ea2:	0e c0       	rjmp	.+28     	; 0x1ec0 <vfprintf+0x9e>
    1ea4:	9d 32       	cpi	r25, 0x2D	; 45
    1ea6:	49 f0       	breq	.+18     	; 0x1eba <vfprintf+0x98>
    1ea8:	90 33       	cpi	r25, 0x30	; 48
    1eaa:	69 f4       	brne	.+26     	; 0x1ec6 <vfprintf+0xa4>
    1eac:	41 e0       	ldi	r20, 0x01	; 1
    1eae:	24 c0       	rjmp	.+72     	; 0x1ef8 <vfprintf+0xd6>
    1eb0:	52 e0       	ldi	r21, 0x02	; 2
    1eb2:	f5 2a       	or	r15, r21
    1eb4:	84 e0       	ldi	r24, 0x04	; 4
    1eb6:	f8 2a       	or	r15, r24
    1eb8:	28 c0       	rjmp	.+80     	; 0x1f0a <vfprintf+0xe8>
    1eba:	98 e0       	ldi	r25, 0x08	; 8
    1ebc:	f9 2a       	or	r15, r25
    1ebe:	25 c0       	rjmp	.+74     	; 0x1f0a <vfprintf+0xe8>
    1ec0:	e0 e1       	ldi	r30, 0x10	; 16
    1ec2:	fe 2a       	or	r15, r30
    1ec4:	22 c0       	rjmp	.+68     	; 0x1f0a <vfprintf+0xe8>
    1ec6:	f7 fc       	sbrc	r15, 7
    1ec8:	29 c0       	rjmp	.+82     	; 0x1f1c <vfprintf+0xfa>
    1eca:	89 2f       	mov	r24, r25
    1ecc:	80 53       	subi	r24, 0x30	; 48
    1ece:	8a 30       	cpi	r24, 0x0A	; 10
    1ed0:	70 f4       	brcc	.+28     	; 0x1eee <vfprintf+0xcc>
    1ed2:	f6 fe       	sbrs	r15, 6
    1ed4:	05 c0       	rjmp	.+10     	; 0x1ee0 <vfprintf+0xbe>
    1ed6:	98 9c       	mul	r9, r8
    1ed8:	90 2c       	mov	r9, r0
    1eda:	11 24       	eor	r1, r1
    1edc:	98 0e       	add	r9, r24
    1ede:	15 c0       	rjmp	.+42     	; 0x1f0a <vfprintf+0xe8>
    1ee0:	e8 9c       	mul	r14, r8
    1ee2:	e0 2c       	mov	r14, r0
    1ee4:	11 24       	eor	r1, r1
    1ee6:	e8 0e       	add	r14, r24
    1ee8:	f0 e2       	ldi	r31, 0x20	; 32
    1eea:	ff 2a       	or	r15, r31
    1eec:	0e c0       	rjmp	.+28     	; 0x1f0a <vfprintf+0xe8>
    1eee:	9e 32       	cpi	r25, 0x2E	; 46
    1ef0:	29 f4       	brne	.+10     	; 0x1efc <vfprintf+0xda>
    1ef2:	f6 fc       	sbrc	r15, 6
    1ef4:	6b c1       	rjmp	.+726    	; 0x21cc <vfprintf+0x3aa>
    1ef6:	40 e4       	ldi	r20, 0x40	; 64
    1ef8:	f4 2a       	or	r15, r20
    1efa:	07 c0       	rjmp	.+14     	; 0x1f0a <vfprintf+0xe8>
    1efc:	9c 36       	cpi	r25, 0x6C	; 108
    1efe:	19 f4       	brne	.+6      	; 0x1f06 <vfprintf+0xe4>
    1f00:	50 e8       	ldi	r21, 0x80	; 128
    1f02:	f5 2a       	or	r15, r21
    1f04:	02 c0       	rjmp	.+4      	; 0x1f0a <vfprintf+0xe8>
    1f06:	98 36       	cpi	r25, 0x68	; 104
    1f08:	49 f4       	brne	.+18     	; 0x1f1c <vfprintf+0xfa>
    1f0a:	f2 01       	movw	r30, r4
    1f0c:	23 fd       	sbrc	r18, 3
    1f0e:	95 91       	lpm	r25, Z+
    1f10:	23 ff       	sbrs	r18, 3
    1f12:	91 91       	ld	r25, Z+
    1f14:	2f 01       	movw	r4, r30
    1f16:	99 23       	and	r25, r25
    1f18:	09 f0       	breq	.+2      	; 0x1f1c <vfprintf+0xfa>
    1f1a:	b8 cf       	rjmp	.-144    	; 0x1e8c <vfprintf+0x6a>
    1f1c:	89 2f       	mov	r24, r25
    1f1e:	85 54       	subi	r24, 0x45	; 69
    1f20:	83 30       	cpi	r24, 0x03	; 3
    1f22:	18 f0       	brcs	.+6      	; 0x1f2a <vfprintf+0x108>
    1f24:	80 52       	subi	r24, 0x20	; 32
    1f26:	83 30       	cpi	r24, 0x03	; 3
    1f28:	38 f4       	brcc	.+14     	; 0x1f38 <vfprintf+0x116>
    1f2a:	44 e0       	ldi	r20, 0x04	; 4
    1f2c:	50 e0       	ldi	r21, 0x00	; 0
    1f2e:	a4 0e       	add	r10, r20
    1f30:	b5 1e       	adc	r11, r21
    1f32:	5f e3       	ldi	r21, 0x3F	; 63
    1f34:	59 83       	std	Y+1, r21	; 0x01
    1f36:	0f c0       	rjmp	.+30     	; 0x1f56 <vfprintf+0x134>
    1f38:	93 36       	cpi	r25, 0x63	; 99
    1f3a:	31 f0       	breq	.+12     	; 0x1f48 <vfprintf+0x126>
    1f3c:	93 37       	cpi	r25, 0x73	; 115
    1f3e:	79 f0       	breq	.+30     	; 0x1f5e <vfprintf+0x13c>
    1f40:	93 35       	cpi	r25, 0x53	; 83
    1f42:	09 f0       	breq	.+2      	; 0x1f46 <vfprintf+0x124>
    1f44:	56 c0       	rjmp	.+172    	; 0x1ff2 <vfprintf+0x1d0>
    1f46:	20 c0       	rjmp	.+64     	; 0x1f88 <vfprintf+0x166>
    1f48:	f5 01       	movw	r30, r10
    1f4a:	80 81       	ld	r24, Z
    1f4c:	89 83       	std	Y+1, r24	; 0x01
    1f4e:	42 e0       	ldi	r20, 0x02	; 2
    1f50:	50 e0       	ldi	r21, 0x00	; 0
    1f52:	a4 0e       	add	r10, r20
    1f54:	b5 1e       	adc	r11, r21
    1f56:	61 01       	movw	r12, r2
    1f58:	01 e0       	ldi	r16, 0x01	; 1
    1f5a:	10 e0       	ldi	r17, 0x00	; 0
    1f5c:	12 c0       	rjmp	.+36     	; 0x1f82 <vfprintf+0x160>
    1f5e:	f5 01       	movw	r30, r10
    1f60:	c0 80       	ld	r12, Z
    1f62:	d1 80       	ldd	r13, Z+1	; 0x01
    1f64:	f6 fc       	sbrc	r15, 6
    1f66:	03 c0       	rjmp	.+6      	; 0x1f6e <vfprintf+0x14c>
    1f68:	6f ef       	ldi	r22, 0xFF	; 255
    1f6a:	7f ef       	ldi	r23, 0xFF	; 255
    1f6c:	02 c0       	rjmp	.+4      	; 0x1f72 <vfprintf+0x150>
    1f6e:	69 2d       	mov	r22, r9
    1f70:	70 e0       	ldi	r23, 0x00	; 0
    1f72:	42 e0       	ldi	r20, 0x02	; 2
    1f74:	50 e0       	ldi	r21, 0x00	; 0
    1f76:	a4 0e       	add	r10, r20
    1f78:	b5 1e       	adc	r11, r21
    1f7a:	c6 01       	movw	r24, r12
    1f7c:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <strnlen>
    1f80:	8c 01       	movw	r16, r24
    1f82:	5f e7       	ldi	r21, 0x7F	; 127
    1f84:	f5 22       	and	r15, r21
    1f86:	14 c0       	rjmp	.+40     	; 0x1fb0 <vfprintf+0x18e>
    1f88:	f5 01       	movw	r30, r10
    1f8a:	c0 80       	ld	r12, Z
    1f8c:	d1 80       	ldd	r13, Z+1	; 0x01
    1f8e:	f6 fc       	sbrc	r15, 6
    1f90:	03 c0       	rjmp	.+6      	; 0x1f98 <vfprintf+0x176>
    1f92:	6f ef       	ldi	r22, 0xFF	; 255
    1f94:	7f ef       	ldi	r23, 0xFF	; 255
    1f96:	02 c0       	rjmp	.+4      	; 0x1f9c <vfprintf+0x17a>
    1f98:	69 2d       	mov	r22, r9
    1f9a:	70 e0       	ldi	r23, 0x00	; 0
    1f9c:	42 e0       	ldi	r20, 0x02	; 2
    1f9e:	50 e0       	ldi	r21, 0x00	; 0
    1fa0:	a4 0e       	add	r10, r20
    1fa2:	b5 1e       	adc	r11, r21
    1fa4:	c6 01       	movw	r24, r12
    1fa6:	0e 94 ee 10 	call	0x21dc	; 0x21dc <strnlen_P>
    1faa:	8c 01       	movw	r16, r24
    1fac:	50 e8       	ldi	r21, 0x80	; 128
    1fae:	f5 2a       	or	r15, r21
    1fb0:	f3 fe       	sbrs	r15, 3
    1fb2:	07 c0       	rjmp	.+14     	; 0x1fc2 <vfprintf+0x1a0>
    1fb4:	1a c0       	rjmp	.+52     	; 0x1fea <vfprintf+0x1c8>
    1fb6:	80 e2       	ldi	r24, 0x20	; 32
    1fb8:	90 e0       	ldi	r25, 0x00	; 0
    1fba:	b3 01       	movw	r22, r6
    1fbc:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    1fc0:	ea 94       	dec	r14
    1fc2:	8e 2d       	mov	r24, r14
    1fc4:	90 e0       	ldi	r25, 0x00	; 0
    1fc6:	08 17       	cp	r16, r24
    1fc8:	19 07       	cpc	r17, r25
    1fca:	a8 f3       	brcs	.-22     	; 0x1fb6 <vfprintf+0x194>
    1fcc:	0e c0       	rjmp	.+28     	; 0x1fea <vfprintf+0x1c8>
    1fce:	f6 01       	movw	r30, r12
    1fd0:	f7 fc       	sbrc	r15, 7
    1fd2:	85 91       	lpm	r24, Z+
    1fd4:	f7 fe       	sbrs	r15, 7
    1fd6:	81 91       	ld	r24, Z+
    1fd8:	6f 01       	movw	r12, r30
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	b3 01       	movw	r22, r6
    1fde:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    1fe2:	e1 10       	cpse	r14, r1
    1fe4:	ea 94       	dec	r14
    1fe6:	01 50       	subi	r16, 0x01	; 1
    1fe8:	10 40       	sbci	r17, 0x00	; 0
    1fea:	01 15       	cp	r16, r1
    1fec:	11 05       	cpc	r17, r1
    1fee:	79 f7       	brne	.-34     	; 0x1fce <vfprintf+0x1ac>
    1ff0:	ea c0       	rjmp	.+468    	; 0x21c6 <vfprintf+0x3a4>
    1ff2:	94 36       	cpi	r25, 0x64	; 100
    1ff4:	11 f0       	breq	.+4      	; 0x1ffa <vfprintf+0x1d8>
    1ff6:	99 36       	cpi	r25, 0x69	; 105
    1ff8:	69 f5       	brne	.+90     	; 0x2054 <vfprintf+0x232>
    1ffa:	f7 fe       	sbrs	r15, 7
    1ffc:	08 c0       	rjmp	.+16     	; 0x200e <vfprintf+0x1ec>
    1ffe:	f5 01       	movw	r30, r10
    2000:	20 81       	ld	r18, Z
    2002:	31 81       	ldd	r19, Z+1	; 0x01
    2004:	42 81       	ldd	r20, Z+2	; 0x02
    2006:	53 81       	ldd	r21, Z+3	; 0x03
    2008:	84 e0       	ldi	r24, 0x04	; 4
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	0a c0       	rjmp	.+20     	; 0x2022 <vfprintf+0x200>
    200e:	f5 01       	movw	r30, r10
    2010:	80 81       	ld	r24, Z
    2012:	91 81       	ldd	r25, Z+1	; 0x01
    2014:	9c 01       	movw	r18, r24
    2016:	44 27       	eor	r20, r20
    2018:	37 fd       	sbrc	r19, 7
    201a:	40 95       	com	r20
    201c:	54 2f       	mov	r21, r20
    201e:	82 e0       	ldi	r24, 0x02	; 2
    2020:	90 e0       	ldi	r25, 0x00	; 0
    2022:	a8 0e       	add	r10, r24
    2024:	b9 1e       	adc	r11, r25
    2026:	9f e6       	ldi	r25, 0x6F	; 111
    2028:	f9 22       	and	r15, r25
    202a:	57 ff       	sbrs	r21, 7
    202c:	09 c0       	rjmp	.+18     	; 0x2040 <vfprintf+0x21e>
    202e:	50 95       	com	r21
    2030:	40 95       	com	r20
    2032:	30 95       	com	r19
    2034:	21 95       	neg	r18
    2036:	3f 4f       	sbci	r19, 0xFF	; 255
    2038:	4f 4f       	sbci	r20, 0xFF	; 255
    203a:	5f 4f       	sbci	r21, 0xFF	; 255
    203c:	e0 e8       	ldi	r30, 0x80	; 128
    203e:	fe 2a       	or	r15, r30
    2040:	ca 01       	movw	r24, r20
    2042:	b9 01       	movw	r22, r18
    2044:	a1 01       	movw	r20, r2
    2046:	2a e0       	ldi	r18, 0x0A	; 10
    2048:	30 e0       	ldi	r19, 0x00	; 0
    204a:	0e 94 30 11 	call	0x2260	; 0x2260 <__ultoa_invert>
    204e:	d8 2e       	mov	r13, r24
    2050:	d2 18       	sub	r13, r2
    2052:	40 c0       	rjmp	.+128    	; 0x20d4 <vfprintf+0x2b2>
    2054:	95 37       	cpi	r25, 0x75	; 117
    2056:	29 f4       	brne	.+10     	; 0x2062 <vfprintf+0x240>
    2058:	1f 2d       	mov	r17, r15
    205a:	1f 7e       	andi	r17, 0xEF	; 239
    205c:	2a e0       	ldi	r18, 0x0A	; 10
    205e:	30 e0       	ldi	r19, 0x00	; 0
    2060:	1d c0       	rjmp	.+58     	; 0x209c <vfprintf+0x27a>
    2062:	1f 2d       	mov	r17, r15
    2064:	19 7f       	andi	r17, 0xF9	; 249
    2066:	9f 36       	cpi	r25, 0x6F	; 111
    2068:	61 f0       	breq	.+24     	; 0x2082 <vfprintf+0x260>
    206a:	90 37       	cpi	r25, 0x70	; 112
    206c:	20 f4       	brcc	.+8      	; 0x2076 <vfprintf+0x254>
    206e:	98 35       	cpi	r25, 0x58	; 88
    2070:	09 f0       	breq	.+2      	; 0x2074 <vfprintf+0x252>
    2072:	ac c0       	rjmp	.+344    	; 0x21cc <vfprintf+0x3aa>
    2074:	0f c0       	rjmp	.+30     	; 0x2094 <vfprintf+0x272>
    2076:	90 37       	cpi	r25, 0x70	; 112
    2078:	39 f0       	breq	.+14     	; 0x2088 <vfprintf+0x266>
    207a:	98 37       	cpi	r25, 0x78	; 120
    207c:	09 f0       	breq	.+2      	; 0x2080 <vfprintf+0x25e>
    207e:	a6 c0       	rjmp	.+332    	; 0x21cc <vfprintf+0x3aa>
    2080:	04 c0       	rjmp	.+8      	; 0x208a <vfprintf+0x268>
    2082:	28 e0       	ldi	r18, 0x08	; 8
    2084:	30 e0       	ldi	r19, 0x00	; 0
    2086:	0a c0       	rjmp	.+20     	; 0x209c <vfprintf+0x27a>
    2088:	10 61       	ori	r17, 0x10	; 16
    208a:	14 fd       	sbrc	r17, 4
    208c:	14 60       	ori	r17, 0x04	; 4
    208e:	20 e1       	ldi	r18, 0x10	; 16
    2090:	30 e0       	ldi	r19, 0x00	; 0
    2092:	04 c0       	rjmp	.+8      	; 0x209c <vfprintf+0x27a>
    2094:	14 fd       	sbrc	r17, 4
    2096:	16 60       	ori	r17, 0x06	; 6
    2098:	20 e1       	ldi	r18, 0x10	; 16
    209a:	32 e0       	ldi	r19, 0x02	; 2
    209c:	17 ff       	sbrs	r17, 7
    209e:	08 c0       	rjmp	.+16     	; 0x20b0 <vfprintf+0x28e>
    20a0:	f5 01       	movw	r30, r10
    20a2:	60 81       	ld	r22, Z
    20a4:	71 81       	ldd	r23, Z+1	; 0x01
    20a6:	82 81       	ldd	r24, Z+2	; 0x02
    20a8:	93 81       	ldd	r25, Z+3	; 0x03
    20aa:	44 e0       	ldi	r20, 0x04	; 4
    20ac:	50 e0       	ldi	r21, 0x00	; 0
    20ae:	08 c0       	rjmp	.+16     	; 0x20c0 <vfprintf+0x29e>
    20b0:	f5 01       	movw	r30, r10
    20b2:	80 81       	ld	r24, Z
    20b4:	91 81       	ldd	r25, Z+1	; 0x01
    20b6:	bc 01       	movw	r22, r24
    20b8:	80 e0       	ldi	r24, 0x00	; 0
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	42 e0       	ldi	r20, 0x02	; 2
    20be:	50 e0       	ldi	r21, 0x00	; 0
    20c0:	a4 0e       	add	r10, r20
    20c2:	b5 1e       	adc	r11, r21
    20c4:	a1 01       	movw	r20, r2
    20c6:	0e 94 30 11 	call	0x2260	; 0x2260 <__ultoa_invert>
    20ca:	d8 2e       	mov	r13, r24
    20cc:	d2 18       	sub	r13, r2
    20ce:	8f e7       	ldi	r24, 0x7F	; 127
    20d0:	f8 2e       	mov	r15, r24
    20d2:	f1 22       	and	r15, r17
    20d4:	f6 fe       	sbrs	r15, 6
    20d6:	0b c0       	rjmp	.+22     	; 0x20ee <vfprintf+0x2cc>
    20d8:	5e ef       	ldi	r21, 0xFE	; 254
    20da:	f5 22       	and	r15, r21
    20dc:	d9 14       	cp	r13, r9
    20de:	38 f4       	brcc	.+14     	; 0x20ee <vfprintf+0x2cc>
    20e0:	f4 fe       	sbrs	r15, 4
    20e2:	07 c0       	rjmp	.+14     	; 0x20f2 <vfprintf+0x2d0>
    20e4:	f2 fc       	sbrc	r15, 2
    20e6:	05 c0       	rjmp	.+10     	; 0x20f2 <vfprintf+0x2d0>
    20e8:	8f ee       	ldi	r24, 0xEF	; 239
    20ea:	f8 22       	and	r15, r24
    20ec:	02 c0       	rjmp	.+4      	; 0x20f2 <vfprintf+0x2d0>
    20ee:	1d 2d       	mov	r17, r13
    20f0:	01 c0       	rjmp	.+2      	; 0x20f4 <vfprintf+0x2d2>
    20f2:	19 2d       	mov	r17, r9
    20f4:	f4 fe       	sbrs	r15, 4
    20f6:	0d c0       	rjmp	.+26     	; 0x2112 <vfprintf+0x2f0>
    20f8:	fe 01       	movw	r30, r28
    20fa:	ed 0d       	add	r30, r13
    20fc:	f1 1d       	adc	r31, r1
    20fe:	80 81       	ld	r24, Z
    2100:	80 33       	cpi	r24, 0x30	; 48
    2102:	19 f4       	brne	.+6      	; 0x210a <vfprintf+0x2e8>
    2104:	99 ee       	ldi	r25, 0xE9	; 233
    2106:	f9 22       	and	r15, r25
    2108:	08 c0       	rjmp	.+16     	; 0x211a <vfprintf+0x2f8>
    210a:	1f 5f       	subi	r17, 0xFF	; 255
    210c:	f2 fe       	sbrs	r15, 2
    210e:	05 c0       	rjmp	.+10     	; 0x211a <vfprintf+0x2f8>
    2110:	03 c0       	rjmp	.+6      	; 0x2118 <vfprintf+0x2f6>
    2112:	8f 2d       	mov	r24, r15
    2114:	86 78       	andi	r24, 0x86	; 134
    2116:	09 f0       	breq	.+2      	; 0x211a <vfprintf+0x2f8>
    2118:	1f 5f       	subi	r17, 0xFF	; 255
    211a:	0f 2d       	mov	r16, r15
    211c:	f3 fc       	sbrc	r15, 3
    211e:	14 c0       	rjmp	.+40     	; 0x2148 <vfprintf+0x326>
    2120:	f0 fe       	sbrs	r15, 0
    2122:	0f c0       	rjmp	.+30     	; 0x2142 <vfprintf+0x320>
    2124:	1e 15       	cp	r17, r14
    2126:	10 f0       	brcs	.+4      	; 0x212c <vfprintf+0x30a>
    2128:	9d 2c       	mov	r9, r13
    212a:	0b c0       	rjmp	.+22     	; 0x2142 <vfprintf+0x320>
    212c:	9d 2c       	mov	r9, r13
    212e:	9e 0c       	add	r9, r14
    2130:	91 1a       	sub	r9, r17
    2132:	1e 2d       	mov	r17, r14
    2134:	06 c0       	rjmp	.+12     	; 0x2142 <vfprintf+0x320>
    2136:	80 e2       	ldi	r24, 0x20	; 32
    2138:	90 e0       	ldi	r25, 0x00	; 0
    213a:	b3 01       	movw	r22, r6
    213c:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    2140:	1f 5f       	subi	r17, 0xFF	; 255
    2142:	1e 15       	cp	r17, r14
    2144:	c0 f3       	brcs	.-16     	; 0x2136 <vfprintf+0x314>
    2146:	04 c0       	rjmp	.+8      	; 0x2150 <vfprintf+0x32e>
    2148:	1e 15       	cp	r17, r14
    214a:	10 f4       	brcc	.+4      	; 0x2150 <vfprintf+0x32e>
    214c:	e1 1a       	sub	r14, r17
    214e:	01 c0       	rjmp	.+2      	; 0x2152 <vfprintf+0x330>
    2150:	ee 24       	eor	r14, r14
    2152:	04 ff       	sbrs	r16, 4
    2154:	0f c0       	rjmp	.+30     	; 0x2174 <vfprintf+0x352>
    2156:	80 e3       	ldi	r24, 0x30	; 48
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	b3 01       	movw	r22, r6
    215c:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    2160:	02 ff       	sbrs	r16, 2
    2162:	1d c0       	rjmp	.+58     	; 0x219e <vfprintf+0x37c>
    2164:	01 fd       	sbrc	r16, 1
    2166:	03 c0       	rjmp	.+6      	; 0x216e <vfprintf+0x34c>
    2168:	88 e7       	ldi	r24, 0x78	; 120
    216a:	90 e0       	ldi	r25, 0x00	; 0
    216c:	0e c0       	rjmp	.+28     	; 0x218a <vfprintf+0x368>
    216e:	88 e5       	ldi	r24, 0x58	; 88
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	0b c0       	rjmp	.+22     	; 0x218a <vfprintf+0x368>
    2174:	80 2f       	mov	r24, r16
    2176:	86 78       	andi	r24, 0x86	; 134
    2178:	91 f0       	breq	.+36     	; 0x219e <vfprintf+0x37c>
    217a:	01 ff       	sbrs	r16, 1
    217c:	02 c0       	rjmp	.+4      	; 0x2182 <vfprintf+0x360>
    217e:	8b e2       	ldi	r24, 0x2B	; 43
    2180:	01 c0       	rjmp	.+2      	; 0x2184 <vfprintf+0x362>
    2182:	80 e2       	ldi	r24, 0x20	; 32
    2184:	f7 fc       	sbrc	r15, 7
    2186:	8d e2       	ldi	r24, 0x2D	; 45
    2188:	90 e0       	ldi	r25, 0x00	; 0
    218a:	b3 01       	movw	r22, r6
    218c:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    2190:	06 c0       	rjmp	.+12     	; 0x219e <vfprintf+0x37c>
    2192:	80 e3       	ldi	r24, 0x30	; 48
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	b3 01       	movw	r22, r6
    2198:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    219c:	9a 94       	dec	r9
    219e:	d9 14       	cp	r13, r9
    21a0:	c0 f3       	brcs	.-16     	; 0x2192 <vfprintf+0x370>
    21a2:	da 94       	dec	r13
    21a4:	f1 01       	movw	r30, r2
    21a6:	ed 0d       	add	r30, r13
    21a8:	f1 1d       	adc	r31, r1
    21aa:	80 81       	ld	r24, Z
    21ac:	90 e0       	ldi	r25, 0x00	; 0
    21ae:	b3 01       	movw	r22, r6
    21b0:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    21b4:	dd 20       	and	r13, r13
    21b6:	a9 f7       	brne	.-22     	; 0x21a2 <vfprintf+0x380>
    21b8:	06 c0       	rjmp	.+12     	; 0x21c6 <vfprintf+0x3a4>
    21ba:	80 e2       	ldi	r24, 0x20	; 32
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	b3 01       	movw	r22, r6
    21c0:	0e 94 04 11 	call	0x2208	; 0x2208 <fputc>
    21c4:	ea 94       	dec	r14
    21c6:	ee 20       	and	r14, r14
    21c8:	c1 f7       	brne	.-16     	; 0x21ba <vfprintf+0x398>
    21ca:	43 ce       	rjmp	.-890    	; 0x1e52 <vfprintf+0x30>
    21cc:	f3 01       	movw	r30, r6
    21ce:	66 81       	ldd	r22, Z+6	; 0x06
    21d0:	77 81       	ldd	r23, Z+7	; 0x07
    21d2:	cb 01       	movw	r24, r22
    21d4:	2b 96       	adiw	r28, 0x0b	; 11
    21d6:	e2 e1       	ldi	r30, 0x12	; 18
    21d8:	0c 94 d2 0e 	jmp	0x1da4	; 0x1da4 <__epilogue_restores__>

000021dc <strnlen_P>:
    21dc:	fc 01       	movw	r30, r24
    21de:	05 90       	lpm	r0, Z+
    21e0:	61 50       	subi	r22, 0x01	; 1
    21e2:	70 40       	sbci	r23, 0x00	; 0
    21e4:	01 10       	cpse	r0, r1
    21e6:	d8 f7       	brcc	.-10     	; 0x21de <strnlen_P+0x2>
    21e8:	80 95       	com	r24
    21ea:	90 95       	com	r25
    21ec:	8e 0f       	add	r24, r30
    21ee:	9f 1f       	adc	r25, r31
    21f0:	08 95       	ret

000021f2 <strnlen>:
    21f2:	fc 01       	movw	r30, r24
    21f4:	61 50       	subi	r22, 0x01	; 1
    21f6:	70 40       	sbci	r23, 0x00	; 0
    21f8:	01 90       	ld	r0, Z+
    21fa:	01 10       	cpse	r0, r1
    21fc:	d8 f7       	brcc	.-10     	; 0x21f4 <strnlen+0x2>
    21fe:	80 95       	com	r24
    2200:	90 95       	com	r25
    2202:	8e 0f       	add	r24, r30
    2204:	9f 1f       	adc	r25, r31
    2206:	08 95       	ret

00002208 <fputc>:
    2208:	0f 93       	push	r16
    220a:	1f 93       	push	r17
    220c:	cf 93       	push	r28
    220e:	df 93       	push	r29
    2210:	8c 01       	movw	r16, r24
    2212:	eb 01       	movw	r28, r22
    2214:	8b 81       	ldd	r24, Y+3	; 0x03
    2216:	81 ff       	sbrs	r24, 1
    2218:	1b c0       	rjmp	.+54     	; 0x2250 <fputc+0x48>
    221a:	82 ff       	sbrs	r24, 2
    221c:	0d c0       	rjmp	.+26     	; 0x2238 <fputc+0x30>
    221e:	2e 81       	ldd	r18, Y+6	; 0x06
    2220:	3f 81       	ldd	r19, Y+7	; 0x07
    2222:	8c 81       	ldd	r24, Y+4	; 0x04
    2224:	9d 81       	ldd	r25, Y+5	; 0x05
    2226:	28 17       	cp	r18, r24
    2228:	39 07       	cpc	r19, r25
    222a:	64 f4       	brge	.+24     	; 0x2244 <fputc+0x3c>
    222c:	e8 81       	ld	r30, Y
    222e:	f9 81       	ldd	r31, Y+1	; 0x01
    2230:	01 93       	st	Z+, r16
    2232:	f9 83       	std	Y+1, r31	; 0x01
    2234:	e8 83       	st	Y, r30
    2236:	06 c0       	rjmp	.+12     	; 0x2244 <fputc+0x3c>
    2238:	e8 85       	ldd	r30, Y+8	; 0x08
    223a:	f9 85       	ldd	r31, Y+9	; 0x09
    223c:	80 2f       	mov	r24, r16
    223e:	09 95       	icall
    2240:	89 2b       	or	r24, r25
    2242:	31 f4       	brne	.+12     	; 0x2250 <fputc+0x48>
    2244:	8e 81       	ldd	r24, Y+6	; 0x06
    2246:	9f 81       	ldd	r25, Y+7	; 0x07
    2248:	01 96       	adiw	r24, 0x01	; 1
    224a:	9f 83       	std	Y+7, r25	; 0x07
    224c:	8e 83       	std	Y+6, r24	; 0x06
    224e:	02 c0       	rjmp	.+4      	; 0x2254 <fputc+0x4c>
    2250:	0f ef       	ldi	r16, 0xFF	; 255
    2252:	1f ef       	ldi	r17, 0xFF	; 255
    2254:	c8 01       	movw	r24, r16
    2256:	df 91       	pop	r29
    2258:	cf 91       	pop	r28
    225a:	1f 91       	pop	r17
    225c:	0f 91       	pop	r16
    225e:	08 95       	ret

00002260 <__ultoa_invert>:
    2260:	fa 01       	movw	r30, r20
    2262:	aa 27       	eor	r26, r26
    2264:	28 30       	cpi	r18, 0x08	; 8
    2266:	51 f1       	breq	.+84     	; 0x22bc <__ultoa_invert+0x5c>
    2268:	20 31       	cpi	r18, 0x10	; 16
    226a:	81 f1       	breq	.+96     	; 0x22cc <__ultoa_invert+0x6c>
    226c:	e8 94       	clt
    226e:	6f 93       	push	r22
    2270:	6e 7f       	andi	r22, 0xFE	; 254
    2272:	6e 5f       	subi	r22, 0xFE	; 254
    2274:	7f 4f       	sbci	r23, 0xFF	; 255
    2276:	8f 4f       	sbci	r24, 0xFF	; 255
    2278:	9f 4f       	sbci	r25, 0xFF	; 255
    227a:	af 4f       	sbci	r26, 0xFF	; 255
    227c:	b1 e0       	ldi	r27, 0x01	; 1
    227e:	3e d0       	rcall	.+124    	; 0x22fc <__ultoa_invert+0x9c>
    2280:	b4 e0       	ldi	r27, 0x04	; 4
    2282:	3c d0       	rcall	.+120    	; 0x22fc <__ultoa_invert+0x9c>
    2284:	67 0f       	add	r22, r23
    2286:	78 1f       	adc	r23, r24
    2288:	89 1f       	adc	r24, r25
    228a:	9a 1f       	adc	r25, r26
    228c:	a1 1d       	adc	r26, r1
    228e:	68 0f       	add	r22, r24
    2290:	79 1f       	adc	r23, r25
    2292:	8a 1f       	adc	r24, r26
    2294:	91 1d       	adc	r25, r1
    2296:	a1 1d       	adc	r26, r1
    2298:	6a 0f       	add	r22, r26
    229a:	71 1d       	adc	r23, r1
    229c:	81 1d       	adc	r24, r1
    229e:	91 1d       	adc	r25, r1
    22a0:	a1 1d       	adc	r26, r1
    22a2:	20 d0       	rcall	.+64     	; 0x22e4 <__ultoa_invert+0x84>
    22a4:	09 f4       	brne	.+2      	; 0x22a8 <__ultoa_invert+0x48>
    22a6:	68 94       	set
    22a8:	3f 91       	pop	r19
    22aa:	2a e0       	ldi	r18, 0x0A	; 10
    22ac:	26 9f       	mul	r18, r22
    22ae:	11 24       	eor	r1, r1
    22b0:	30 19       	sub	r19, r0
    22b2:	30 5d       	subi	r19, 0xD0	; 208
    22b4:	31 93       	st	Z+, r19
    22b6:	de f6       	brtc	.-74     	; 0x226e <__ultoa_invert+0xe>
    22b8:	cf 01       	movw	r24, r30
    22ba:	08 95       	ret
    22bc:	46 2f       	mov	r20, r22
    22be:	47 70       	andi	r20, 0x07	; 7
    22c0:	40 5d       	subi	r20, 0xD0	; 208
    22c2:	41 93       	st	Z+, r20
    22c4:	b3 e0       	ldi	r27, 0x03	; 3
    22c6:	0f d0       	rcall	.+30     	; 0x22e6 <__ultoa_invert+0x86>
    22c8:	c9 f7       	brne	.-14     	; 0x22bc <__ultoa_invert+0x5c>
    22ca:	f6 cf       	rjmp	.-20     	; 0x22b8 <__ultoa_invert+0x58>
    22cc:	46 2f       	mov	r20, r22
    22ce:	4f 70       	andi	r20, 0x0F	; 15
    22d0:	40 5d       	subi	r20, 0xD0	; 208
    22d2:	4a 33       	cpi	r20, 0x3A	; 58
    22d4:	18 f0       	brcs	.+6      	; 0x22dc <__ultoa_invert+0x7c>
    22d6:	49 5d       	subi	r20, 0xD9	; 217
    22d8:	31 fd       	sbrc	r19, 1
    22da:	40 52       	subi	r20, 0x20	; 32
    22dc:	41 93       	st	Z+, r20
    22de:	02 d0       	rcall	.+4      	; 0x22e4 <__ultoa_invert+0x84>
    22e0:	a9 f7       	brne	.-22     	; 0x22cc <__ultoa_invert+0x6c>
    22e2:	ea cf       	rjmp	.-44     	; 0x22b8 <__ultoa_invert+0x58>
    22e4:	b4 e0       	ldi	r27, 0x04	; 4
    22e6:	a6 95       	lsr	r26
    22e8:	97 95       	ror	r25
    22ea:	87 95       	ror	r24
    22ec:	77 95       	ror	r23
    22ee:	67 95       	ror	r22
    22f0:	ba 95       	dec	r27
    22f2:	c9 f7       	brne	.-14     	; 0x22e6 <__ultoa_invert+0x86>
    22f4:	00 97       	sbiw	r24, 0x00	; 0
    22f6:	61 05       	cpc	r22, r1
    22f8:	71 05       	cpc	r23, r1
    22fa:	08 95       	ret
    22fc:	9b 01       	movw	r18, r22
    22fe:	ac 01       	movw	r20, r24
    2300:	0a 2e       	mov	r0, r26
    2302:	06 94       	lsr	r0
    2304:	57 95       	ror	r21
    2306:	47 95       	ror	r20
    2308:	37 95       	ror	r19
    230a:	27 95       	ror	r18
    230c:	ba 95       	dec	r27
    230e:	c9 f7       	brne	.-14     	; 0x2302 <__ultoa_invert+0xa2>
    2310:	62 0f       	add	r22, r18
    2312:	73 1f       	adc	r23, r19
    2314:	84 1f       	adc	r24, r20
    2316:	95 1f       	adc	r25, r21
    2318:	a0 1d       	adc	r26, r0
    231a:	08 95       	ret

0000231c <_exit>:
    231c:	f8 94       	cli

0000231e <__stop_program>:
    231e:	ff cf       	rjmp	.-2      	; 0x231e <__stop_program>
